.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TimeUtil 1"
.TH TimeUtil 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TimeUtil
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use TimeUtil;
.PP
use TimeUtil qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBTimeUtil\fR module provides the following functions:
.PP
CTimeStamp, FPFileTimeStamp, ISO8601Date, ISO8601Time, ISO8601TimeStamp,
MonthNameToNumber, MonthNumberToAbbreviatedName, MonthNumberToFullName,
PDBFileTimeStamp, SDFileTimeStamp, TimeStamp, WeekDayNameToNumber,
WeekDayNumberToAbbreviatedName, WeekDayNumberToFullName
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\fBCTimeStamp\fR" 4
.IX Item "CTimeStamp"
.Vb 1
\&    $CTimeStamp = CTimeStamp();
.Ve
.Sp
Returns \fBCTimeStamp\fR string using the following format: WDay Mon MDay \s-1HH:MM:SS YYYY\s0
.IP "\fBFPFileTimeStamp\fR" 4
.IX Item "FPFileTimeStamp"
.Vb 1
\&    $FPFileTimeStamp = FPFileTimeStamp();
.Ve
.Sp
Returns fingerints \fB\s-1FP\s0\fR file time stamp string for MayaChemTools package. It corresponds to
\&\fBCTimeStamp\fR.
.IP "\fBISO8601Date\fR" 4
.IX Item "ISO8601Date"
.Vb 1
\&    $Date = ISO8601Date();
.Ve
.Sp
Returns \s-1ISO8601 \s0\fBDate\fR string using the following format: [\s-1YYYY\s0]\-[\s-1MM\s0]\-[\s-1DD\s0]
.IP "\fBISO8601Time\fR" 4
.IX Item "ISO8601Time"
.Vb 1
\&    $Time = ISO8601Time();
.Ve
.Sp
Returns \s-1ISO8601 \s0\fBTime\fR string using the following extended format: [hh]:[mm]:[ss]
.IP "\fBISO8601TimeStamp\fR" 4
.IX Item "ISO8601TimeStamp"
.Vb 1
\&    $TimeStamp = ISO8601TimeStamp();
.Ve
.Sp
Returns \s-1ISO8601 \s0\fBTimeStamp\fR string using the following extended format: [\s-1YYYY\s0]\-[\s-1MM\s0]\-[\s-1DD\s0]T[hh]:[mm]:[ss]
.IP "\fBMonthNameToNumber\fR" 4
.IX Item "MonthNameToNumber"
.Vb 1
\&    $Number = MonthNameToNumber($Name);
.Ve
.Sp
Return month \fBNumber\fR for full month \fIName\fR or three letter abbreviated month \fIName\fR.
.IP "\fBMonthNumberToAbbreviatedName\fR" 4
.IX Item "MonthNumberToAbbreviatedName"
.Vb 1
\&    $AbbrevMonthName = MonthNumberToAbbreviatedName($Number);
.Ve
.Sp
Returns three letter \fBAbbrevMonthName\fR for month \fINumber\fR.
.IP "\fBMonthNumberToFullName\fR" 4
.IX Item "MonthNumberToFullName"
.Vb 1
\&    $Name = MonthNumberToFullName($Number);
.Ve
.Sp
Returns full month \fBName\fR for month \fINumber\fR.
.IP "\fBPDBFileTimeStamp\fR" 4
.IX Item "PDBFileTimeStamp"
.Vb 1
\&    $TimeStamp = PDBFileTimeStamp();
.Ve
.Sp
Returns \s-1PDB\s0 file \fBTimeStamp\fR using the following format: DD-MMM-YY
.IP "\fBSDFileTimeStamp\fR" 4
.IX Item "SDFileTimeStamp"
.Vb 1
\&    $TimeStamp = SDFileTimeStamp();
.Ve
.Sp
Returns \s-1SD\s0 file \fBTimeStamp\fR using the following format: \s-1MMDDYYHHMM\s0
.IP "\fBTimeStamp\fR" 4
.IX Item "TimeStamp"
.Vb 1
\&    $TimeStamp = TimeStamp();
.Ve
.Sp
Returns deafult \fITimeStamp\fR for MayaChemTools. It corresponds to \fBCTimeStamp\fR.
.IP "\fBWeekDayNameToNumber\fR" 4
.IX Item "WeekDayNameToNumber"
.Vb 1
\&    $Number = WeekDayNameToNumber($Name);
.Ve
.Sp
Returns week day \fBNumber\fR from full week day \fIName\fR or three letter abbreviated week
day \fIName\fR.
.IP "\fBWeekDayNumberToAbbreviatedName\fR" 4
.IX Item "WeekDayNumberToAbbreviatedName"
.Vb 1
\&    $Name = WeekDayNumberToAbbreviatedName($Number);
.Ve
.Sp
Returns three letter abbreviates week day \fBName\fR for week day \fINumber\fR.
.IP "\fBWeekDayNumberToFullName\fR" 4
.IX Item "WeekDayNumberToFullName"
.Vb 1
\&    $Name = WeekDayNumberToFullName($Number);
.Ve
.Sp
Returns full week day \fBName\fR for week day \fINumber\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
FileUtil.pm, TextUtil.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
