.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AtomTypesFingerprints 1"
.TH AtomTypesFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AtomTypesFingerprints
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Fingerprints::AtomTypesFingerprints;
.PP
use Fingerprints::AtomTypesFingerprints qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBAtomTypesFingerprints\fR class provides the following methods:
.PP
new, GenerateFingerprints, GetDescription, SetAtomIdentifierType,
SetAtomTypesSetToUse, SetAtomicInvariantsToUse, SetFunctionalClassesToUse,
SetType, StringifyAtomTypesFingerprints
.PP
\&\fBAtomTypesFingerprints\fR is derived from \fBFingerprints\fR class which in turn
is  derived from \fBObjectProperty\fR base class that provides methods not explicitly defined
in \fBAtomNeighborhoodsFingerprints\fR, \fBFingerprints\fR or \fBObjectProperty\fR classes using Perl's
\&\s-1AUTOLOAD\s0 functionality. These methods are generated on-the-fly for a specified object property:
.PP
.Vb 3
\&    Set<PropertyName>(<PropertyValue>);
\&    $PropertyValue = Get<PropertyName>();
\&    Delete<PropertyName>();
.Ve
.PP
The current release of MayaChemTools supports generation of \fBAtomTypesFingerpritns\fR
corresponding to following \fBAtomIdentifierTypes\fR:
.PP
.Vb 3
\&    AtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
\&    FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes,
\&    SYBYLAtomTypes, TPSAAtomTypes, UFFAtomTypes
.Ve
.PP
Based on the values specified for \fBAtomIdentifierType\fR along with other specified
parameters such as \fBAtomicInvariantsToUse\fR and \fBFunctionalClassesToUse\fR, initial
atom types are assigned to all non-hydrogen atoms or all atoms in a molecule.
.PP
Using the assigned atom types and specified \fBType\fR, one of the following types of
fingerprints are generated:
.PP
.Vb 2
\&    AtomTypesCount \- A vector containing count of atom types
\&    AtomTypesBits \- A bit vector indicating presence/absence of atom types
.Ve
.PP
For \fIAtomTypesCount\fR fingerprints, two types of atom types set size is allowed:
.PP
.Vb 2
\&    ArbitrarySize \- Corresponds to only atom types detected in molecule
\&    FixedSize \- Corresponds to fixed number of atom types previously defined
.Ve
.PP
For \fIAtomTypesBits\fR fingerprints, only \fIFixedSize\fR atom type set is allowed.
.PP
\&\fIArbitrarySize\fR corresponds to atom types detected in a molecule where as \fIFixedSize\fR implies
a fix number of all possible atom types previously defined for a specific \fIAtomIdentifierType\fR.
.PP
Fix number of all possible atom types for supported \fIAtomIdentifierTypes\fR in current release
of MayaChemTools are:
.PP
.Vb 1
\&    AtomIdentifier       Total    TotalWithoutHydrogens
\&
\&    DREIDINGAtomTypes    37       34
\&    EStateAtomTypes      109      87
\&    MMFF94AtomTypes      212      171
\&    SLogPAtomTypes       72       67
\&    SYBYLAtomTypes       45       44
\&    TPSAAtomTypes        47       47
\&    UFFAtomTypes         126      124
.Ve
.PP
Combination of \fBType\fR and \fBAtomTypesSetToUse\fR along with \fBAtomtomIdentifierType\fR
allows generation of following different atom types fingerprints:
.PP
.Vb 1
\&    Type                  AtomIdentifierType           AtomTypesSetToUse
\&
\&    AtomTypesCount        AtomicInvariantsAtomTypes    ArbitrarySize
\&
\&    AtomTypesCount        DREIDINGAtomTypes            ArbitrarySize
\&    AtomTypesCount        DREIDINGAtomTypes            FixedSize
\&    AtomTypesBits         DREIDINGAtomTypes            FixedSize
\&
\&    AtomTypesCount        EStateAtomTypes              ArbitrarySize
\&    AtomTypesCount        EStateAtomTypes              FixedSize
\&    AtomTypesBits         EStateAtomTypes              FixedSize
\&
\&    AtomTypesCount        FunctionalClassAtomTypes     ArbitrarySize
\&
\&    AtomTypesCount        MMFF94AtomTypes              ArbitrarySize
\&    AtomTypesCount        MMFF94AtomTypes              FixedSize
\&    AtomTypesBits         MMFF94AtomTypes              FixedSize
\&
\&    AtomTypesCount        SLogPAtomTypes               ArbitrarySize
\&    AtomTypesCount        SLogPAtomTypes               FixedSize
\&    AtomTypesBits         SLogPAtomTypes               FixedSize
\&
\&    AtomTypesCount        SYBYLAtomTypes               ArbitrarySize
\&    AtomTypesCount        SYBYLAtomTypes               FixedSize
\&    AtomTypesBits         SYBYLAtomTypes               FixedSize
\&
\&    AtomTypesCount        TPSAAtomTypes                FixedSize
\&    AtomTypesBits         TPSAAtomTypes                FixedSize
\&
\&    AtomTypesCount        UFFAtomTypes                 ArbitrarySize
\&    AtomTypesCount        UFFAtomTypes                 FixedSize
\&    AtomTypesBits         UFFAtomTypes                 FixedSize
.Ve
.PP
The current release of MayaChemTools generates the following types of atom types
fingerprints bit-vector and vector strings:
.PP
.Vb 4
\&    FingerprintsVector;AtomTypesCount:AtomicInvariantsAtomTypes:ArbitraryS
\&    ize;10;NumericalValues;IDsAndValuesString;C.X1.BO1.H3 C.X2.BO2.H2 C.X2
\&    .BO3.H1 C.X3.BO3.H1 C.X3.BO4 F.X1.BO1 N.X2.BO2.H1 N.X3.BO3 O.X1.BO1.H1
\&    O.X1.BO2;2 4 14 3 10 1 1 1 3 2
\&
\&    FingerprintsVector;AtomTypesCount:DREIDINGAtomTypes:ArbitrarySize;8;Nu
\&    mericalValues;IDsAndValuesString;C_2 C_3 C_R F_ N_3 N_R O_2 O_3;2 9 22
\&    1 1 1 2 3
\&
\&    FingerprintsVector;AtomTypesCount:DREIDINGAtomTypes:FixedSize;34;Order
\&    edNumericalValues;IDsAndValuesString;B_3 B_2 C_3 C_R C_2 C_1 N_3 N_R N
\&    _2 N_1 O_3 O_R O_2 O_1 F_ Al3 Si3 P_3 S_3 Cl Ga3 Ge3 As3 Se3 Br In3 Sn
\&    3 Sb3 Te3 I_ Na Ca Fe Zn;0 0 9 22 2 0 1 1 0 0 3 0 2 0 1 0 0 0 0 0 0 0 
\&    0 0 0 0 0 0 0 0 0 0 0 0
\&
\&    FingerprintsBitVector;AtomTypesBits:DREIDINGAtomTypes:FixedSize;34;Bin
\&    aryString;Ascending;0011101100101010000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:EStateAtomTypes:ArbitrarySize;11;Num
\&    ericalValues;IDsAndValuesString;aaCH aasC aasN dO dssC sCH3 sF sOH ssC
\&    H2 ssNH sssCH;14 8 1 2 2 2 1 3 4 1 3
\&
\&    FingerprintsVector;AtomTypesCount:EStateAtomTypes:FixedSize;87;Ordered
\&    NumericalValues;IDsAndValuesString;sLi ssBe ssssBem sBH2 ssBH sssB sss
\&    sBm sCH3 dCH2 ssCH2 tCH dsCH aaCH sssCH ddC tsC dssC aasC aaaC ssssC s
\&    NH3p sNH2 ssNH2p dNH ssNH aaNH tN sssNHp dsN aaN sssN ddsN aasN ss...;
\&    0 0 0 0 0 0 0 2 0 4 0 0 14 3 0 0 2 8 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 3 2 0 0
\&    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...
\&
\&    FingerprintsBitVector;AtomTypesBits:EStateAtomTypes:FixedSize;87;Binar
\&    yString;Ascending;0000000101001100110000001000000010110000100000000000
\&    000000000000000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:FunctionalClassAtomTypes:ArbitrarySi
\&    ze;8;NumericalValues;IDsAndValuesString;Ar Ar.HBA HBA HBA.HBD HBD Hal 
\&    NI None;22 1 2 3 1 1 1 10
\&
\&    FingerprintsVector;AtomTypesCount:MMFF94AtomTypes:ArbitrarySize;13;Num
\&    ericalValues;IDsAndValuesString;C5A C5B C=ON CB COO CR F N5 NC=O O=CN
\&    O=CO OC=O OR;2 2 1 18 1 9 1 1 1 1 1 1 2
\&
\&    FingerprintsVector;AtomTypesCount:MMFF94AtomTypes:FixedSize;171;Ordere
\&    dNumericalValues;IDsAndValuesString;CR C=C CSP2 C=O C=N CGD C=OR C=ON
\&    CONN COO COON COOO C=OS C=S C=SN CSO2 CS=O CSS C=P CSP =C= OR OC=O OC=
\&    C OC=N OC=S ONO2 ON=O OSO3 OSO2 OSO OS=O \-OS OPO3 OPO2 OPO \-OP \-O\-...;
\&    9 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 0 0 0 0 0 0 0 0 ...
\&
\&    FingerprintsBitVector;AtomTypesBits:MMFF94AtomTypes:FixedSize;171;Bina
\&    ryString;Ascending;100000010100000000000110000000000000000101000000100
\&    0100000000000000000000000000000000000000000100000000000000000000000000
\&    0000000011000000000000000001000000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:SLogPAtomTypes:ArbitrarySize;16;Nume
\&    ricalValues;IDsAndValuesString;C1 C10 C11 C14 C18 C20 C21 C22 C5 CS F
\&    N11 N4 O10 O2 O9;5 1 1 1 14 4 2 1 2 2 1 1 1 1 3 1
\&
\&    FingerprintsVector;AtomTypesCount:SLogPAtomTypes:FixedSize;67;OrderedN
\&    umericalValues;IDsAndValuesString;C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C
\&    12 C13 C14 C15 C16 C17 C18 C19 C20 C21 C22 C23 C24 C25 C26 C27 CS N1 N
\&    2 N3 N4 N5 N6 N7 N8 N9 N10 N11 N12 N13 N14 NS O1 O2 O3 O4 O5 O6 O7 O8
\&    O9 O10 O11 O12 OS F Cl Br I Hal P S1 S2 S3 Me1 Me2;5 0 0 0 2 0 0 0 0 1
\&    1 0 0 1 0 0 0 14 0 4 2 1 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0...
\&
\&    FingerprintsBitVector;AtomTypesBits:SLogPAtomTypes:FixedSize;67;Binary
\&    String;Ascending;10001000011001000101110000010001000000100000100000011
\&    0001000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:SYBYLAtomTypes:ArbitrarySize;9;Numer
\&    icalValues;IDsAndValuesString;C.2 C.3 C.ar F N.am N.ar O.2 O.3 O.co2;2
\&    9 22 1 1 1 1 2 2
\&
\&    FingerprintsVector;AtomTypesCount:SYBYLAtomTypes:FixedSize;44;OrderedN
\&    umericalValues;IDsAndValuesString;C.3 C.2 C.1 C.ar C.cat N.3 N.2 N.1 N
\&    .ar N.am N.pl3 N.4 O.3 O.2 O.co2 S.3 S.2 S.o S.o2 P.3 F Cl Br I ANY HA
\&    L HET Li Na Mg Al Si K Ca Cr.th Cr.oh Mn Fe Co.oh Cu Zn Se Mo Sn;9 2 0
\&    22 0 0 0 0 1 1 0 0 2 1 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0
\&
\&    FingerprintsBitVector;AtomTypesBits:SYBYLAtomTypes:FixedSize;44;Binary
\&    String;Ascending;110100001100111000001000000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:TPSAAtomTypes:FixedSize;47;OrderedNu
\&    mericalValues;IDsAndValuesString;N1 N2 N3 N4 N5 N6 N7 N8 N9 N10 N11 N1
\&    2 N13 N14 N15 N16 N17 N18 N19 N20 N21 N22 N23 N24 N25 N26 N O1 O2 O3 O
\&    4 O5 O6 O S1 S2 S3 S4 S5 S6 S7 S P1 P2 P3 P4 P;0 0 0 0 0 0 1 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&
\&    FingerprintsBitVector;AtomTypesBits:TPSAAtomTypes:FixedSize;47;BinaryS
\&    tring;Ascending;000000100000000000001000000001100000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:UFFAtomTypes:ArbitrarySize;8;Numeric
\&    alValues;IDsAndValuesString;C_2 C_3 C_R F_ N_3 N_R O_2 O_3;2 9 22 1 1
\&    1 2 3
\&
\&    FingerprintsVector;AtomTypesCount:UFFAtomTypes;124;OrderedNumerical
\&    Values;IDsAndValuesString;He4+4 Li Be3+2 B_3 B_2 C_3 C_R C_2 C_1 N_3 N_
\&    R N_2 N_1 O_3 O_3_z O_R O_2 O_1 F_ Ne4+4 Na Mg3+2 Al3 Si3 P_3+3 P_3+5 P
\&    _3+q S_3+2 S_3+4 S_3+6 S_R S_2 Cl Ar4+4 K_ Ca6+2 Sc3+3 Ti3+4 Ti6+4 V_3+
\&    ;0 0 0 0 0 12 0 3 0 3 0 1 0 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
\&
\&    FingerprintsVector;AtomTypesCount:UFFAtomTypes:FixedSize;124;OrderedNu
\&    mericalValues;IDsAndValuesString;He4+4 Li Be3+2 B_3 B_2 C_3 C_R C_2 C_
\&    1 N_3 N_R N_2 N_1 O_3 O_3_z O_R O_2 O_1 F_ Ne4+4 Na Mg3+2 Al3 Si3 P_3+
\&    3 P_3+5 P_3+q S_3+2 S_3+4 S_3+6 S_R S_2 Cl Ar4+4 K_ Ca6+2 Sc3+3 Ti...;
\&    0 0 0 0 0 9 22 2 0 1 1 0 0 3 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...
\&
\&    FingerprintsBitVector;AtomTypesBits:UFFAtomTypes:FixedSize;124;BinaryS
\&    tring;Ascending;000001110110010010100000000000000000000000000000000000
\&    0000000000000000000000000000000000000000000000000000000000000000000000
.Ve
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.IP "\fBnew\fR" 4
.IX Item "new"
.Vb 1
\&    $NewAtomTypesFingerprints = new AtomTypesFingerprints(%NamesAndValues);
.Ve
.Sp
Using specified \fIAtomTypesFingerprints\fR property names and values hash, \fBnew\fR method creates a new object
and returns a reference to newly created \fBPathLengthFingerprints\fR object. By default, the
following properties are initialized:
.Sp
.Vb 7
\&    Molecule = \*(Aq\*(Aq;
\&    Type = \*(Aq\*(Aq
\&    AtomIdentifierType = \*(Aq\*(Aq
\&    AtomTypesSetToUse = \*(Aq\*(Aq
\&    IgnoreHydrogens = 1
\&    AtomicInvariantsToUse = [\*(AqAS\*(Aq, \*(AqX\*(Aq, \*(AqBO\*(Aq, \*(AqH\*(Aq, \*(AqFC\*(Aq, \*(AqMN\*(Aq]
\&    FunctionalClassesToUse = [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqAr\*(Aq, \*(AqHal\*(Aq]
.Ve
.Sp
Examples:
.Sp
.Vb 5
\&    $AtomTypesFingerprints = new AtomTypesFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqType\*(Aq => \*(AqAtomTypesCount\*(Aq,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq);
\&
\&    $AtomTypesFingerprints = new AtomTypesFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqType\*(Aq => \*(AqAtomTypesCount\*(Aq,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq,
\&                              \*(AqAtomicInvariantsToUse\*(Aq =>
\&                                              [\*(AqAS\*(Aq, \*(AqX\*(Aq, \*(AqBO\*(Aq, \*(AqH\*(Aq, \*(AqFC\*(Aq] );
\&
\&    $AtomTypesFingerprints = new AtomTypesFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqType\*(Aq => \*(AqAtomTypesCount\*(Aq,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqDREIDINGAtomTypes\*(Aq);
\&
\&    $AtomTypesFingerprints = new AtomTypesFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqType\*(Aq => \*(AqAtomTypesCount\*(Aq,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqEStateAtomTypes\*(Aq,
\&                              \*(AqAtomTypesSetToUse\*(Aq =>
\&                                              \*(AqArbitrarySize\*(Aq);
\&
\&    $AtomTypesFingerprints = new AtomTypesFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqType\*(Aq => \*(AqAtomTypesCount\*(Aq,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqSLogPAtomTypes\*(Aq,
\&                              \*(AqAtomTypesSetToUse\*(Aq =>
\&                                              \*(AqFixedSize\*(Aq);
\&
\&    $AtomTypesFingerprints = new AtomTypesFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqType\*(Aq => \*(AqAtomTypesBits\*(Aq,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqMMFF94AtomTypes\*(Aq,
\&                              \*(AqAtomTypesSetToUse\*(Aq =>
\&                                              \*(AqFixedSize\*(Aq);
\&
\&    $AtomTypesFingerprints\->GenerateFingerprints();
\&    print "$AtomTypesFingerprints\en";
.Ve
.IP "\fBGenerateFingerprints\fR" 4
.IX Item "GenerateFingerprints"
.Vb 1
\&    $AtomTypesFingerprints\->GenerateFingerprints();
.Ve
.Sp
Generates atom types fingerprints and returns \fIAtomTypesFingerprints\fR.
.IP "\fBGetDescription\fR" 4
.IX Item "GetDescription"
.Vb 1
\&    $Description = $AtomTypesFingerprints\->GetDescription();
.Ve
.Sp
Returns a string containing description of atom types fingerprints.
.IP "\fBSetAtomIdentifierType\fR" 4
.IX Item "SetAtomIdentifierType"
.Vb 1
\&    $AtomTypesFingerprints\->SetAtomIdentifierType($IdentifierType);
.Ve
.Sp
Sets atom \fIIdentifierType\fR to use during atom types fingerprints generation and
returns \fIAtomTypesFingerprints\fR.
.Sp
Possible values: \fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR.
.IP "\fBSetAtomTypesSetToUse\fR" 4
.IX Item "SetAtomTypesSetToUse"
.Vb 1
\&    $AtomTypesFingerprints\->SetAtomTypesSetToUse($Value);
.Ve
.Sp
Sets \fIValue\fR of \fIAtomTypesSetToUse\fR and returns \fIAtomTypesFingerprints\fR. Possible
values: \fIArbitrarySize or FixedSize\fR. Default for \fIAtomTypesCount\fR value of
\&\fBAtomTypesSetToUse\fR: \fIArbitrarySize\fR.
.IP "\fBSetAtomicInvariantsToUse\fR" 4
.IX Item "SetAtomicInvariantsToUse"
.Vb 2
\&    $AtomTypesFingerprints\->SetAtomicInvariantsToUse($ValuesRef);
\&    $AtomTypesFingerprints\->SetAtomicInvariantsToUse(@Values);
.Ve
.Sp
Sets atomic invariants to use during \fIAtomicInvariantsAtomTypes\fR value of \fIAtomIdentifierType\fR
for atom neighborhood fingerprints generation and returns \fIAtomTypesFingerprints\fR.
.Sp
Possible values for atomic invariants are: \fI\s-1AS, X, BO,  LBO, SB, DB, TB,
H,\s0 Ar, \s-1RA, FC, MN, SM\s0\fR. Default value: \fI\s-1AS,X,BO,H,FC\s0\fR.
.Sp
The atomic invariants abbreviations correspond to:
.Sp
.Vb 1
\&    AS = Atom symbol corresponding to element symbol
\&
\&    X<n>   = Number of non\-hydrogen atom neighbors or heavy atoms
\&    BO<n> = Sum of bond orders to non\-hydrogen atom neighbors or heavy atoms
\&    LBO<n> = Largest bond order of non\-hydrogen atom neighbors or heavy atoms
\&    SB<n> = Number of single bonds to non\-hydrogen atom neighbors or heavy atoms
\&    DB<n> = Number of double bonds to non\-hydrogen atom neighbors or heavy atoms
\&    TB<n> = Number of triple bonds to non\-hydrogen atom neighbors or heavy atoms
\&    H<n>   = Number of implicit and explicit hydrogens for atom
\&    Ar     = Aromatic annotation indicating whether atom is aromatic
\&    RA     = Ring atom annotation indicating whether atom is a ring
\&    FC<+n/\-n> = Formal charge assigned to atom
\&    MN<n> = Mass number indicating isotope other than most abundant isotope
\&    SM<n> = Spin multiplicity of atom. Possible values: 1 (singlet), 2 (doublet) or
\&            3 (triplet)
.Ve
.Sp
Atom type generated by AtomTypes::AtomicInvariantsAtomTypes class corresponds to:
.Sp
.Vb 1
\&    AS.X<n>.BO<n>.LBO<n>.<SB><n>.<DB><n>.<TB><n>.H<n>.Ar.RA.FC<+n/\-n>.MN<n>.SM<n>
.Ve
.Sp
Except for \s-1AS\s0 which is a required atomic invariant in atom types, all other atomic invariants are
optional. Atom type specification doesn't include atomic invariants with zero or undefined values.
.Sp
In addition to usage of abbreviations for specifying atomic invariants, the following descriptive words
are also allowed:
.Sp
.Vb 12
\&    X : NumOfNonHydrogenAtomNeighbors or NumOfHeavyAtomNeighbors
\&    BO : SumOfBondOrdersToNonHydrogenAtoms or SumOfBondOrdersToHeavyAtoms
\&    LBO : LargestBondOrderToNonHydrogenAtoms or LargestBondOrderToHeavyAtoms
\&    SB :  NumOfSingleBondsToNonHydrogenAtoms or NumOfSingleBondsToHeavyAtoms
\&    DB : NumOfDoubleBondsToNonHydrogenAtoms or NumOfDoubleBondsToHeavyAtoms
\&    TB : NumOfTripleBondsToNonHydrogenAtoms or NumOfTripleBondsToHeavyAtoms
\&    H :  NumOfImplicitAndExplicitHydrogens
\&    Ar : Aromatic
\&    RA : RingAtom
\&    FC : FormalCharge
\&    MN : MassNumber
\&    SM : SpinMultiplicity
.Ve
.Sp
\&\fIAtomTypes::AtomicInvariantsAtomTypes\fR module is used to assign atomic invariant
atom types.
.IP "\fBSetFunctionalClassesToUse\fR" 4
.IX Item "SetFunctionalClassesToUse"
.Vb 2
\&    $AtomTypesFingerprints\->SetFunctionalClassesToUse($ValuesRef);
\&    $AtomTypesFingerprints\->SetFunctionalClassesToUse(@Values);
.Ve
.Sp
Sets functional classes invariants to use during \fIFunctionalClassAtomTypes\fR value of \fIAtomIdentifierType\fR
for atom types fingerprints generation and returns \fIAtomTypesFingerprints\fR.
.Sp
Possible values for atom functional classes are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 24 ]: \fI\s-1HBD,HBA,PI,NI\s0,Ar,Hal\fR.
.Sp
The functional class abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
\&
\& Functional class atom type specification for an atom corresponds to:
\&
\&    Ar.CA.H.HBA.HBD.Hal.NI.PI.RA or None
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign functional class atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fBSetType\fR" 4
.IX Item "SetType"
.Vb 1
\&    $AtomTypesFingerprints\->SetType($Type);
.Ve
.Sp
Sets type of AtomTypes fingerpritns and returns \fIAtomTypesFingerprints\fR. Possible values: \fIAtomTypesFingerprintsBits or
AtomTypesFingerprintsCount\fR.
.IP "\fBStringifyAtomTypesFingerprints\fR" 4
.IX Item "StringifyAtomTypesFingerprints"
.Vb 1
\&    $String = $AtomTypesFingerprints\->StringifyAtomTypesFingerprints();
.Ve
.Sp
Returns a string containing information about \fIAtomTypesFingerprints\fR object.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Fingerprints.pm, FingerprintsStringUtil.pm, AtomNeighborhoodsFingerprints.pm,
EStateIndiciesFingerprints.pm, ExtendedConnectivityFingerprints.pm, MACCSKeys.pm,
PathLengthFingerprints.pm, TopologicalAtomPairsFingerprints.pm, TopologicalAtomTripletsFingerprints.pm,
TopologicalAtomTorsionsFingerprints.pm, TopologicalPharmacophoreAtomPairsFingerprints.pm,
TopologicalPharmacophoreAtomTripletsFingerprints.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
