.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "NucleicAcids 1"
.TH NucleicAcids 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
NucleicAcids
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use NucleicAcids;
.PP
use NucleicAcids qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBNucleicAcids\fR module the provides the following functions:
.PP
GetNucleicAcidPropertiesData, GetNucleicAcidPropertiesNames,
GetNucleicAcids, GetNucleicAcidsByType, IsNucleicAcid, IsNucleicAcidProperty,
IsNucleicAcidType
.SH "Functions"
.IX Header "Functions"
.IP "\fBGetNucleicAcids\fR" 4
.IX Item "GetNucleicAcids"
.Vb 2
\&    (@Names) = GetNucleicAcids([$NameType]);
\&    $NamesRef = GetNucleicAcids([$NameType]);
.Ve
.Sp
Returns an array or a reference to an array containing names of nucleic acids
as a code or nucleic acid name controlled by optional parameter \fINameType\fR. By
default, nucleic acids names are returned as the code. Possible values for
\&\fINameType\fR: \fICode or Name\fR.
.IP "\fBGetNucleicAcidsByType\fR" 4
.IX Item "GetNucleicAcidsByType"
.Vb 2
\&    (@Names) = GetNucleicAcidsByType([$Type, $NameType]);
\&    $NamesRef = GetNucleicAcidsByType([$Type, $NameType]);
.Ve
.Sp
Returns an array or a reference to an array containing names of nucleic acids
specified by parameter \fIType\fR as a code or name controlled by optional
parameter \fINameType\fR. Default values for \fIType\fR: \fINucleoside\fR. Default value for
\&\fINameType\fR: \fICode\fR. Possible values for \fIType\fR: \fINucleobase, Nucleoside, Deoxynucleoside,
Nucleotide, Deoxynucleotide\fR. Possible values for \fINameType\fR: \fICode or Name\fR.
.IP "\fBGetNucleicAcidPropertiesData\fR" 4
.IX Item "GetNucleicAcidPropertiesData"
.Vb 1
\&    $DataHashRef = GetNucleicAcidPropertiesData($NucleicAcidID);
.Ve
.Sp
Returns a reference to hash containing property names and values for a specified
\&\fINucleicAcidID\fR.
.IP "\fBGetNucleicAcidPropertyName\fR" 4
.IX Item "GetNucleicAcidPropertyName"
.Vb 1
\&    $Value = GetNucleicAcid<PropertyName>($NucleicAcidID);
.Ve
.Sp
Returns nucleic acid property value for a specified \fINucleicAcidID\fR. This function is
implemented on-the-fly using Perl's \s-1AUTOLOAD\s0 functionality.
.IP "\fBGetNucleicAcidPropertiesNames\fR" 4
.IX Item "GetNucleicAcidPropertiesNames"
.Vb 2
\&    @Names = GetNucleicAcidPropertiesNames([$Mode]);
\&    $NamesRef = GetNucleicAcidPropertiesNames([$Mode]);
.Ve
.Sp
Returns an array or a reference to an array containing names of properties for
nucleic acids. Order of nucleic acids properties is controlled by optional parameter
\&\fIMode\fR. Possible values for \fIMode\fR: \fIAlphabetical or ByGroup\fR; Default: \fIByGroup\fR.
.IP "\fBIsNucleicAcid\fR" 4
.IX Item "IsNucleicAcid"
.Vb 1
\&    $Status = IsNucleicAcid($NucleicAcidID);
.Ve
.Sp
Returns 1 or 0 based on whether it's a known nucleic acid \s-1ID.\s0
.IP "\fBIsNucleicAcidProperty\fR" 4
.IX Item "IsNucleicAcidProperty"
.Vb 1
\&    $Status = IsNucleicAcid($PropertyName);
.Ve
.Sp
Returns 1 or 0 based on whether it's a known nucleic acid property name.
.IP "\fBIsNucleicAcidType\fR" 4
.IX Item "IsNucleicAcidType"
.Vb 1
\&    $Status = IsNucleicAcidType();
.Ve
.Sp
Returns 1 or 0 based on whether it's a known nucleic acid type.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
AminoAcids.pm, PeriodicTable.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
