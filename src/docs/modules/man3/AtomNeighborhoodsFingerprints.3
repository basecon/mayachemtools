.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AtomNeighborhoodsFingerprints 1"
.TH AtomNeighborhoodsFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AtomNeighborhoodsFingerprints
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Fingerprints::AtomNeighborhoodsFingerprints;
.PP
use Fingerprints::AtomNeighborhoodsFingerprints qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBAtomNeighborhoodsFingerprints\fR [ Ref 53\-56, Ref 73 ] class provides the following methods:
.PP
new, GenerateFingerprints, GetDescription, SetAtomIdentifierType,
SetAtomicInvariantsToUse, SetFunctionalClassesToUse, SetMaxNeighborhoodRadius,
SetMinNeighborhoodRadius, StringifyAtomNeighborhoodsFingerprints
.PP
\&\fBAtomNeighborhoodsFingerprints\fR is derived from \fBFingerprints\fR class which in turn
is  derived from \fBObjectProperty\fR base class that provides methods not explicitly defined
in \fBAtomNeighborhoodsFingerprints\fR, \fBFingerprints\fR or \fBObjectProperty\fR classes using Perl's
\&\s-1AUTOLOAD\s0 functionality. These methods are generated on-the-fly for a specified object property:
.PP
.Vb 3
\&    Set<PropertyName>(<PropertyValue>);
\&    $PropertyValue = Get<PropertyName>();
\&    Delete<PropertyName>();
.Ve
.PP
The current release of MayaChemTools supports generation of \fBAtomNeighborhoodsFingerprints\fR
corresponding to following \fBAtomIdentifierTypes\fR:
.PP
.Vb 3
\&    AtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
\&    FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes,
\&    SYBYLAtomTypes, TPSAAtomTypes, UFFAtomTypes
.Ve
.PP
Based on the values specified for \fBAtomIdentifierType\fR along with other specified
sucb as \fBAtomicInvariantsToUse\fR and \fBFunctionalClassesToUse\fR, initial atom types are
assigned to all non-hydrogen atoms in a molecule. Using atom neighborhoods
around each non-hydrogen central atom corresponding to radii between specified values
\&\fBMinNeighborhoodRadius\fR and \fBMaxNeighborhoodRadius\fR, unique atom types at each radii
level are counted and an atom neighborhood identifier is generated.
.PP
The format of an atom neighborhood identifier around a central non-hydrogen atom at a
specific radius is:
.PP
.Vb 1
\&    NR<n>\-<AtomType>\-ATC<n>
\&
\&    NR: Neighborhood radius
\&    AtomType: Assigned atom type
\&    ATC: Atom type count
.Ve
.PP
The atom neighborhood identifier for non-hydrogen central atom corresponding to all specified radii
is generated by concatenating neighborhood identifiers at each radii by colon as a delimiter:
.PP
.Vb 1
\&    NR<n>\-<AtomType>\-ATC<n>:NR<n>\-<AtomType>\-ATC<n>:...
.Ve
.PP
The atom neighborhood identifiers for all non-hydrogen central atoms at all specified radii are
concatenated using space as a delimiter and constitute atom neighborhood fingerprint of the molecule.
.PP
The current release of MayaChemTools generates the following types of atom neighborhoods
fingerprints vector strings:
.PP
.Vb 6
\&    FingerprintsVector;AtomNeighborhoods:AtomicInvariantsAtomTypes:MinRadi
\&    us0:MaxRadius2;41;AlphaNumericalValues;ValuesString;NR0\-C.X1.BO1.H3\-AT
\&    C1:NR1\-C.X3.BO3.H1\-ATC1:NR2\-C.X1.BO1.H3\-ATC1:NR2\-C.X3.BO4\-ATC1 NR0\-C.X
\&    1.BO1.H3\-ATC1:NR1\-C.X3.BO3.H1\-ATC1:NR2\-C.X1.BO1.H3\-ATC1:NR2\-C.X3.BO4\-A
\&    TC1 NR0\-C.X2.BO2.H2\-ATC1:NR1\-C.X2.BO2.H2\-ATC1:NR1\-C.X3.BO3.H1\-ATC1:NR2
\&    \-C.X2.BO2.H2\-ATC1:NR2\-N.X3.BO3\-ATC1:NR2\-O.X1.BO1.H1\-ATC1 NR0\-C.X2.B...
\&
\&    FingerprintsVector;AtomNeighborhoods:DREIDINGAtomTypes:MinRadius0:MaxR
\&    adius2;41;AlphaNumericalValues;ValuesString;NR0\-C_2\-ATC1:NR1\-C_3\-ATC1:
\&    NR1\-O_2\-ATC1:NR1\-O_3\-ATC1:NR2\-C_3\-ATC1 NR0\-C_2\-ATC1:NR1\-C_R\-ATC1:NR1\-N
\&    _3\-ATC1:NR1\-O_2\-ATC1:NR2\-C_R\-ATC3 NR0\-C_3\-ATC1:NR1\-C_2\-ATC1:NR1\-C_3\-AT
\&    C1:NR2\-C_3\-ATC1:NR2\-O_2\-ATC1:NR2\-O_3\-ATC2 NR0\-C_3\-ATC1:NR1\-C_3\-ATC1:NR
\&    1\-N_R\-ATC1:NR2\-C_3\-ATC1:NR2\-C_R\-ATC2 NR0\-C_3\-ATC1:NR1\-C_3\-ATC1:NR2\-...
\&
\&    FingerprintsVector;AtomNeighborhoods:EStateAtomTypes:MinRadius0:MaxRad
\&    ius2;41;AlphaNumericalValues;ValuesString;NR0\-aaCH\-ATC1:NR1\-aaCH\-ATC1:
\&    NR1\-aasC\-ATC1:NR2\-aaCH\-ATC1:NR2\-aasC\-ATC1:NR2\-sF\-ATC1 NR0\-aaCH\-ATC1:NR
\&    1\-aaCH\-ATC1:NR1\-aasC\-ATC1:NR2\-aaCH\-ATC1:NR2\-aasC\-ATC1:NR2\-sF\-ATC1 NR0\-
\&    aaCH\-ATC1:NR1\-aaCH\-ATC1:NR1\-aasC\-ATC1:NR2\-aaCH\-ATC1:NR2\-aasC\-ATC2 NR0\-
\&    aaCH\-ATC1:NR1\-aaCH\-ATC1:NR1\-aasC\-ATC1:NR2\-aaCH\-ATC1:NR2\-aasC\-ATC2 N...
\&
\&    FingerprintsVector;AtomNeighborhoods:FunctionalClassAtomTypes:MinRadiu
\&    s0:MaxRadius2;41;AlphaNumericalValues;ValuesString;NR0\-Ar\-ATC1:NR1\-Ar\-
\&    ATC1:NR1\-Ar.HBA\-ATC1:NR1\-None\-ATC1:NR2\-Ar\-ATC2:NR2\-None\-ATC4 NR0\-Ar\-AT
\&    C1:NR1\-Ar\-ATC2:NR1\-Ar.HBA\-ATC1:NR2\-Ar\-ATC5:NR2\-None\-ATC1 NR0\-Ar\-ATC1:N
\&    R1\-Ar\-ATC2:NR1\-HBD\-ATC1:NR2\-Ar\-ATC2:NR2\-None\-ATC1 NR0\-Ar\-ATC1:NR1\-Ar\-A
\&    TC2:NR1\-Hal\-ATC1:NR2\-Ar\-ATC2 NR0\-Ar\-ATC1:NR1\-Ar\-ATC2:NR1\-None\-ATC1:...
\&
\&    FingerprintsVector;AtomNeighborhoods:MMFF94AtomTypes:MinRadius0:MaxRad
\&    ius2;41;AlphaNumericalValues;ValuesString;NR0\-C5A\-ATC1:NR1\-C5B\-ATC1:NR
\&    1\-CB\-ATC1:NR1\-N5\-ATC1:NR2\-C5A\-ATC1:NR2\-C5B\-ATC1:NR2\-CB\-ATC3:NR2\-CR\-ATC
\&    1 NR0\-C5A\-ATC1:NR1\-C5B\-ATC1:NR1\-CR\-ATC1:NR1\-N5\-ATC1:NR2\-C5A\-ATC1:NR2\-C
\&    5B\-ATC1:NR2\-C=ON\-ATC1:NR2\-CR\-ATC3 NR0\-C5B\-ATC1:NR1\-C5A\-ATC1:NR1\-C5B\-AT
\&    C1:NR1\-C=ON\-ATC1:NR2\-C5A\-ATC1:NR2\-CB\-ATC1:NR2\-CR\-ATC1:NR2\-N5\-ATC1:N...
\&
\&    FingerprintsVector;AtomNeighborhoods:SLogPAtomTypes:MinRadius0:MaxRadi
\&    us2;41;AlphaNumericalValues;ValuesString;NR0\-C1\-ATC1:NR1\-C10\-ATC1:NR1\-
\&    CS\-ATC1:NR2\-C1\-ATC1:NR2\-N11\-ATC1:NR2\-O2\-ATC1 NR0\-C1\-ATC1:NR1\-C11\-ATC1:
\&    NR2\-C1\-ATC1:NR2\-C21\-ATC1 NR0\-C1\-ATC1:NR1\-C11\-ATC1:NR2\-C1\-ATC1:NR2\-C21\-
\&    ATC1 NR0\-C1\-ATC1:NR1\-C5\-ATC1:NR1\-CS\-ATC1:NR2\-C1\-ATC1:NR2\-O2\-ATC2:NR2\-O
\&    9\-ATC1 NR0\-C1\-ATC1:NR1\-CS\-ATC2:NR2\-C1\-ATC2:NR2\-O2\-ATC2 NR0\-C10\-ATC1...
\&
\&    FingerprintsVector;AtomNeighborhoods:SYBYLAtomTypes:MinRadius0:MaxRadi
\&    us2;41;AlphaNumericalValues;ValuesString;NR0\-C.2\-ATC1:NR1\-C.3\-ATC1:NR1
\&    \-O.co2\-ATC2:NR2\-C.3\-ATC1 NR0\-C.2\-ATC1:NR1\-C.ar\-ATC1:NR1\-N.am\-ATC1:NR1\-
\&    O.2\-ATC1:NR2\-C.ar\-ATC3 NR0\-C.3\-ATC1:NR1\-C.2\-ATC1:NR1\-C.3\-ATC1:NR2\-C.3\-
\&    ATC1:NR2\-O.3\-ATC1:NR2\-O.co2\-ATC2 NR0\-C.3\-ATC1:NR1\-C.3\-ATC1:NR1\-N.ar\-AT
\&    C1:NR2\-C.3\-ATC1:NR2\-C.ar\-ATC2 NR0\-C.3\-ATC1:NR1\-C.3\-ATC1:NR2\-C.3\-ATC...
\&
\&    FingerprintsVector;AtomNeighborhoods:TPSAAtomTypes:MinRadius0:MaxRadiu
\&    s2;41;AlphaNumericalValues;ValuesString;NR0\-N21\-ATC1:NR1\-None\-ATC3:NR2
\&    \-None\-ATC5 NR0\-N7\-ATC1:NR1\-None\-ATC2:NR2\-None\-ATC3:NR2\-O3\-ATC1 NR0\-Non
\&    e\-ATC1:NR1\-N21\-ATC1:NR1\-None\-ATC1:NR2\-None\-ATC3 NR0\-None\-ATC1:NR1\-N21\-
\&    ATC1:NR1\-None\-ATC2:NR2\-None\-ATC6 NR0\-None\-ATC1:NR1\-N21\-ATC1:NR1\-None\-A
\&    TC2:NR2\-None\-ATC6 NR0\-None\-ATC1:NR1\-N7\-ATC1:NR1\-None\-ATC1:NR1\-O3\-AT...
\&
\&    FingerprintsVector;AtomNeighborhoods:UFFAtomTypes:MinRadius0:MaxRadius
\&    2;41;AlphaNumericalValues;ValuesString;NR0\-C_2\-ATC1:NR1\-C_3\-ATC1:NR1\-O
\&    _2\-ATC1:NR1\-O_3\-ATC1:NR2\-C_3\-ATC1 NR0\-C_2\-ATC1:NR1\-C_R\-ATC1:NR1\-N_3\-AT
\&    C1:NR1\-O_2\-ATC1:NR2\-C_R\-ATC3 NR0\-C_3\-ATC1:NR1\-C_2\-ATC1:NR1\-C_3\-ATC1:NR
\&    2\-C_3\-ATC1:NR2\-O_2\-ATC1:NR2\-O_3\-ATC2 NR0\-C_3\-ATC1:NR1\-C_3\-ATC1:NR1\-N_R
\&    \-ATC1:NR2\-C_3\-ATC1:NR2\-C_R\-ATC2 NR0\-C_3\-ATC1:NR1\-C_3\-ATC1:NR2\-C_3\-A...
.Ve
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.IP "\fBnew\fR" 4
.IX Item "new"
.Vb 2
\&    $NewAtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                                                   %NamesAndValues);
.Ve
.Sp
Using specified \fIAtomNeighborhoodsFingerprints\fR property names and values hash, \fBnew\fR
method creates a new object and returns a reference to newly created \fBAtomNeighborhoodsFingerprints\fR
object. By default, the following properties are initialized:
.Sp
.Vb 7
\&    Molecule = \*(Aq\*(Aq
\&    Type = \*(AqAtomNeighborhoods\*(Aq
\&    MinNeighborhoodRadius = 0
\&    MaxNeighborhoodRadius = 2
\&    AtomIdentifierType = \*(Aq\*(Aq
\&    AtomicInvariantsToUse = [\*(AqAS\*(Aq, \*(AqX\*(Aq, \*(AqBO\*(Aq, \*(AqH\*(Aq, \*(AqFC\*(Aq, \*(AqMN\*(Aq]
\&    FunctionalClassesToUse = [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqAr\*(Aq, \*(AqHal\*(Aq]
.Ve
.Sp
Examples:
.Sp
.Vb 4
\&    $AtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              "AtomicInvariantsAtomTypes");
\&
\&    $AtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqMinNeighborhoodRadius\*(Aq => 0,
\&                              \*(AqMaxNeighborhoodRadius\*(Aq => 2,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq,
\&                              \*(AqAtomicInvariantsToUse\*(Aq =>
\&                                              [\*(AqAS\*(Aq, \*(AqX\*(Aq, \*(AqBO\*(Aq, \*(AqH\*(Aq, \*(AqFC\*(Aq] );
\&
\&    $AtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqSYBYLAtomTypes\*(Aq);
\&
\&    $AtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqMMFF94AtomTypes\*(Aq);
\&
\&    $AtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq);
\&
\&    $AtomNeighborhoodsFingerprints = new AtomNeighborhoodsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqMinNeighborhoodRadius\*(Aq => 0,
\&                              \*(AqMaxNeighborhoodRadius\*(Aq => 2,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqFunctionalClassAtomTypes\*(Aq,
\&                              \*(AqFunctionalClassesToUse\*(Aq =>
\&                                          [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqAr\*(Aq, \*(AqHal\*(Aq] );
\&
\&    $AtomNeighborhoodsFingerprints\->GenerateFingerprints();
\&    print "$AtomNeighborhoodsFingerprints\en";
.Ve
.IP "\fBGenerateFingerprints\fR" 4
.IX Item "GenerateFingerprints"
.Vb 1
\&    $AtomNeighborhoodsFingerprints\->GenerateFingerprints();
.Ve
.Sp
Generates atom neighborhood fingerprints and returns \fIAtomNeighborhoodsFingerprints\fR.
.IP "\fBGetDescription\fR" 4
.IX Item "GetDescription"
.Vb 1
\&    $Description = $AtomNeighborhoodsFingerprints\->GetDescription();
.Ve
.Sp
Returns a string containing description of atom neighborhood fingerprints.
.IP "\fBSetAtomIdentifierType\fR" 4
.IX Item "SetAtomIdentifierType"
.Vb 1
\&    $AtomNeighborhoodsFingerprints\->SetAtomIdentifierType($IdentifierType);
.Ve
.Sp
Sets atom \fIIdentifierType\fR to use during atom neighborhood fingerprints generation and
returns \fIAtomNeighborhoodsFingerprints\fR.
.Sp
Possible values: \fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR.
.IP "\fBSetAtomicInvariantsToUse\fR" 4
.IX Item "SetAtomicInvariantsToUse"
.Vb 2
\&    $AtomNeighborhoodsFingerprints\->SetAtomicInvariantsToUse($ValuesRef);
\&    $AtomNeighborhoodsFingerprints\->SetAtomicInvariantsToUse(@Values);
.Ve
.Sp
Sets atomic invariants to use during \fIAtomicInvariantsAtomTypes\fR value of \fIAtomIdentifierType\fR
for atom neighborhood fingerprints generation and returns \fIAtomNeighborhoodsFingerprints\fR.
.Sp
Possible values for atomic invariants are: \fI\s-1AS, X, BO,  LBO, SB, DB, TB,
H,\s0 Ar, \s-1RA, FC, MN, SM\s0\fR. Default value: \fI\s-1AS,X,BO,H,FC\s0\fR.
.Sp
The atomic invariants abbreviations correspond to:
.Sp
.Vb 1
\&    AS = Atom symbol corresponding to element symbol
\&
\&    X<n>   = Number of non\-hydrogen atom neighbors or heavy atoms
\&    BO<n> = Sum of bond orders to non\-hydrogen atom neighbors or heavy atoms
\&    LBO<n> = Largest bond order of non\-hydrogen atom neighbors or heavy atoms
\&    SB<n> = Number of single bonds to non\-hydrogen atom neighbors or heavy atoms
\&    DB<n> = Number of double bonds to non\-hydrogen atom neighbors or heavy atoms
\&    TB<n> = Number of triple bonds to non\-hydrogen atom neighbors or heavy atoms
\&    H<n>   = Number of implicit and explicit hydrogens for atom
\&    Ar     = Aromatic annotation indicating whether atom is aromatic
\&    RA     = Ring atom annotation indicating whether atom is a ring
\&    FC<+n/\-n> = Formal charge assigned to atom
\&    MN<n> = Mass number indicating isotope other than most abundant isotope
\&    SM<n> = Spin multiplicity of atom. Possible values: 1 (singlet), 2 (doublet) or
\&            3 (triplet)
.Ve
.Sp
Atom type generated by AtomTypes::AtomicInvariantsAtomTypes class corresponds to:
.Sp
.Vb 1
\&    AS.X<n>.BO<n>.LBO<n>.<SB><n>.<DB><n>.<TB><n>.H<n>.Ar.RA.FC<+n/\-n>.MN<n>.SM<n>
.Ve
.Sp
Except for \s-1AS\s0 which is a required atomic invariant in atom types, all other atomic invariants are
optional. Atom type specification doesn't include atomic invariants with zero or undefined values.
.Sp
In addition to usage of abbreviations for specifying atomic invariants, the following descriptive words
are also allowed:
.Sp
.Vb 12
\&    X : NumOfNonHydrogenAtomNeighbors or NumOfHeavyAtomNeighbors
\&    BO : SumOfBondOrdersToNonHydrogenAtoms or SumOfBondOrdersToHeavyAtoms
\&    LBO : LargestBondOrderToNonHydrogenAtoms or LargestBondOrderToHeavyAtoms
\&    SB :  NumOfSingleBondsToNonHydrogenAtoms or NumOfSingleBondsToHeavyAtoms
\&    DB : NumOfDoubleBondsToNonHydrogenAtoms or NumOfDoubleBondsToHeavyAtoms
\&    TB : NumOfTripleBondsToNonHydrogenAtoms or NumOfTripleBondsToHeavyAtoms
\&    H :  NumOfImplicitAndExplicitHydrogens
\&    Ar : Aromatic
\&    RA : RingAtom
\&    FC : FormalCharge
\&    MN : MassNumber
\&    SM : SpinMultiplicity
.Ve
.Sp
\&\fIAtomTypes::AtomicInvariantsAtomTypes\fR module is used to assign atomic invariant
atom types.
.IP "\fBSetFunctionalClassesToUse\fR" 4
.IX Item "SetFunctionalClassesToUse"
.Vb 2
\&    $AtomNeighborhoodsFingerprints\->SetFunctionalClassesToUse($ValuesRef);
\&    $AtomNeighborhoodsFingerprints\->SetFunctionalClassesToUse(@Values);
.Ve
.Sp
Sets functional classes invariants to use during \fIFunctionalClassAtomTypes\fR value of \fIAtomIdentifierType\fR
for atom neighborhoods fingerprints generation and returns \fIAtomNeighborhoodsFingerprints\fR.
.Sp
Possible values for atom functional classes are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 24 ]: \fI\s-1HBD,HBA,PI,NI\s0,Ar,Hal\fR.
.Sp
The functional class abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
\&
\& Functional class atom type specification for an atom corresponds to:
\&
\&    Ar.CA.H.HBA.HBD.Hal.NI.PI.RA or None
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign functional class atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fBSetMaxNeighborhoodRadius\fR" 4
.IX Item "SetMaxNeighborhoodRadius"
.Vb 1
\&    $AtomNeighborhoodsFingerprints\->SetMaxNeighborhoodRadius($Radius);
.Ve
.Sp
Sets maximum neighborhood radius to use during atom neighborhood fingerprints generation and
returns \fIAtomNeighborhoodsFingerprints\fR.
.IP "\fBSetMinNeighborhoodRadius\fR" 4
.IX Item "SetMinNeighborhoodRadius"
.Vb 1
\&    $AtomNeighborhoodsFingerprints\->SetMinNeighborhoodRadius($Radius);
.Ve
.Sp
Sets minimum neighborhood radius to use during atom neighborhood fingerprints generation and
returns \fIAtomNeighborhoodsFingerprints\fR.
.IP "\fBStringifyAtomNeighborhoodsFingerprints\fR" 4
.IX Item "StringifyAtomNeighborhoodsFingerprints"
.Vb 1
\&    $String = $Fingerprints\->StringifyAtomNeighborhoodsFingerprints();
.Ve
.Sp
Returns a string containing information about \fIAtomNeighborhoodsFingerprints\fR object.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Fingerprints.pm, FingerprintsStringUtil.pm, AtomTypesFingerprints.pm, EStateIndiciesFingerprints.pm,
ExtendedConnectivityFingerprints.pm, MACCSKeys.pm, PathLengthFingerprints.pm,
TopologicalAtomPairsFingerprints.pm, TopologicalAtomTripletsFingerprints.pm,
TopologicalAtomTorsionsFingerprints.pm, TopologicalPharmacophoreAtomPairsFingerprints.pm,
TopologicalPharmacophoreAtomTripletsFingerprints.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
