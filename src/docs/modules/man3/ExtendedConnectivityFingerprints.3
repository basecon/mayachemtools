.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ExtendedConnectivityFingerprints 1"
.TH ExtendedConnectivityFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ExtendedConnectivityFingerprints
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Fingerprints::ExtendedConnectivityFingerprints;
.PP
use Fingerprints::ExtendedConnectivityFingerprints qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
ExtendedConnectivityFingerprints  [ Ref 48, Ref 52 ] class provides the following methods:
.PP
new, GenerateFingerprints, GetDescription, SetAtomIdentifierType,
SetAtomicInvariantsToUse, SetFunctionalClassesToUse, SetNeighborhoodRadius,
StringifyExtendedConnectivityFingerprints
.PP
\&\fBExtendedConnectivityFingerprints\fR is derived from \fBFingerprints\fR class which in turn
is  derived from \fBObjectProperty\fR base class that provides methods not explicitly defined
in \fBExtendedConnectivityFingerprints\fR, \fBFingerprints\fR or \fBObjectProperty\fR classes using Perl's
\&\s-1AUTOLOAD\s0 functionality. These methods are generated on-the-fly for a specified object property:
.PP
.Vb 3
\&    Set<PropertyName>(<PropertyValue>);
\&    $PropertyValue = Get<PropertyName>();
\&    Delete<PropertyName>();
.Ve
.PP
The current release of MayaChemTools supports generation of \fBExtendedConnectivityFingerprints\fR
corresponding to following \fBAtomtomIdentifierTypes\fR:
.PP
.Vb 3
\&    AtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
\&    FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes,
\&    SYBYLAtomTypes, TPSAAtomTypes, UFFAtomTypes
.Ve
.PP
Based on the values specified for \fBAtomIdentifierType\fR, \fBAtomicInvariantsToUse\fR
and \fBFunctionalClassesToUse\fR, initial atom types are assigned to all non-hydrogen atoms in
a molecule and these atom types strings are converted into initial atom identifier integers using
\&\fBTextUtil::HashCode\fR function. The duplicate atom identifiers are removed.
.PP
For \fBNeighborhoodRadius\fR value of \fI0\fR, the initial set of unique atom identifiers comprises
the molecule fingerprints. Otherwise, atom neighborhoods are generated for each non-hydrogen
atom up-to specified \fBNeighborhoodRadius\fR value. For each non-hydrogen central atom
at a specific radius, its neighbors at next radius level along with their bond orders and previously
calculated atom identifiers are collected which in turn are used to generate a new integer
atom identifier; the bond orders and atom identifier pairs list is first sorted by bond order
followed by atom identifiers to make these values graph invariant.
.PP
After integer atom identifiers have been generated for all non-hydrogen atoms at all specified
neighborhood radii, the duplicate integer atom identifiers corresponding to same hash code
value generated using \fBTextUtil::HashCode\fR are tracked by keeping the atom identifiers at
lower radius. Additionally, all structurally duplicate integer atom identifiers at each specified
radius are also tracked by identifying equivalent atom and bonds corresponding to substructures
used for generating atom identifier and keeping integer atom identifier with lowest value.
.PP
For \fIExtendedConnnectivity\fR value of fingerprints \fBType\fR, the duplicate identifiers are
removed from the list and the unique atom identifiers constitute the extended connectivity
fingerprints of a molecule.
.PP
For \fIExtendedConnnectivityCount\fR value of fingerprints \fBType\fR, the occurrence of each
unique atom identifiers appears is counted and the unique atom identifiers along with their
count constitute the extended connectivity fingerprints of a molecule.
.PP
For \fIExtendedConnectivityBits\fR value of fingerprints \fB\-m, \-\-mode\fR, the unique atom identifiers
are used as a random number seed to generate a random integer value between 0 and \fB\-\-Size\fR which
in turn is used to set corresponding bits in the fingerprint bit-vector string.
.PP
The current release of MayaChemTools generates the following types of extended connectivity
fingerprints vector strings:
.PP
.Vb 6
\&    FingerprintsVector;ExtendedConnectivity:AtomicInvariantsAtomTypes:Radi
\&    us2;60;AlphaNumericalValues;ValuesString;73555770 333564680 352413391
\&    666191900 1001270906 1371674323 1481469939 1977749791 2006158649 21414
\&    08799 49532520 64643108 79385615 96062769 273726379 564565671 85514103
\&    5 906706094 988546669 1018231313 1032696425 1197507444 1331250018 1338
\&    532734 1455473691 1607485225 1609687129 1631614296 1670251330 17303...
\&
\&    FingerprintsVector;ExtendedConnectivityCount:AtomicInvariantsAtomTypes
\&    :Radius2;60;NumericalValues;IDsAndValuesString;73555770 333564680 3524
\&    13391 666191900 1001270906 1371674323 1481469939 1977749791 2006158649
\&    2141408799 49532520 64643108 79385615 96062769 273726379 564565671...;
\&    3 2 1 1 14 1 2 10 4 3 1 1 1 1 2 1 2 1 1 1 2 3 1 1 2 1 3 3 8 2 2 2 6 2
\&    1 2 1 1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1
\&
\&    FingerprintsBitVector;ExtendedConnectivityBits:AtomicInvariantsAtomTyp
\&    es:Radius2;1024;BinaryString;Ascending;0000000000000000000000000000100
\&    0000000001010000000110000011000000000000100000000000000000000000100001
\&    1000000110000000000000000000000000010011000000000000000000000000010000
\&    0000000000000000000000000010000000000000000001000000000000000000000000
\&    0000000000010000100001000000000000101000000000000000100000000000000...
\&
\&    FingerprintsBitVector;ExtendedConnectivityBits:AtomicInvariantsAtomTyp
\&    es:Radius2;1024;HexadecimalString;Ascending;000000010050c0600800000803
\&    0300000091000004000000020000100000000124008200020000000040020000000000
\&    2080000000820040010020000000008040000000000080001000000000400000000000
\&    4040000090000061010000000800200000000000001400000000020080000000000020
\&    00008020200000408000
\&
\&    FingerprintsVector;ExtendedConnectivity:FunctionalClassAtomTypes:Radiu
\&    s2;57;AlphaNumericalValues;ValuesString;24769214 508787397 850393286 8
\&    62102353 981185303 1231636850 1649386610 1941540674 263599683 32920567
\&    1 571109041 639579325 683993318 723853089 810600886 885767127 90326012
\&    7 958841485 981022393 1126908698 1152248391 1317567065 1421489994 1455
\&    632544 1557272891 1826413669 1983319256 2015750777 2029559552 20404...
\&
\&    FingerprintsVector;ExtendedConnectivityCount:FunctionalClassAtomTypes:
\&    Radius2;57;NumericalValues;IDsAndValuesString;24769214 508787397 85039
\&    3286 862102353 981185303 1231636850 1649386610 1941540674 263599683 32
\&    9205671 571109041 639579325 683993318 723853089 810600886 885767127...;
\&    1 1 1 10 2 22 3 1 3 3 1 1 1 3 2 2 1 2 2 2 3 1 1 1 1 1 14 1 1 1 1 1 1 2
\&    1 2 1 1 2 2 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1
\&
\&    FingerprintsBitVector;ExtendedConnectivityBits:FunctionalClassAtomType
\&    s:Radius2;1024;BinaryString;Ascending;00000000000000000000100000000000
\&    0000000001000100000000001000000000000000000000000000000000101000000010
\&    0000001000000000010000000000000000000000000000000000000000000000000100
\&    0000000000001000000000000001000000000001001000000000000000000000000000
\&    0000000000000000100000000000001000000000000000000000000000000000000...
\&
\&    FingerprintsVector;ExtendedConnectivity:DREIDINGAtomTypes:Radius2;56;A
\&    lphaNumericalValues;ValuesString;280305427 357928343 721790579 1151822
\&    898 1207111054 1380963747 1568213839 1603445250 4559268 55012922 18094
\&    0813 335715751 534801009 684609658 829361048 972945982 999881534 10076
\&    55741 1213692591 1222032501 1224517934 1235687794 1244268533 152812070
\&    0 1629595024 1856308891 1978806036 2001865095 2096549435 172675415 ...
\&
\&    FingerprintsVector;ExtendedConnectivity:EStateAtomTypes:Radius2;62;Alp
\&    haNumericalValues;ValuesString;25189973 528584866 662581668 671034184
\&    926543080 1347067490 1738510057 1759600920 2034425745 2097234755 21450
\&    44754 96779665 180364292 341712110 345278822 386540408 387387308 50430
\&    1706 617094135 771528807 957666640 997798220 1158349170 1291258082 134
\&    1138533 1395329837 1420277211 1479584608 1486476397 1487556246 1566...
\&
\&    FingerprintsVector;ExtendedConnectivity:MMFF94AtomTypes:Radius2;64;Alp
\&    haNumericalValues;ValuesString;224051550 746527773 998750766 103704190
\&    2 1239701709 1248384926 1259447756 1521678386 1631549126 1909437580 20
\&    37095052 2104274756 2117729376 8770364 31445800 81450228 314289324 344
\&    041929 581773587 638555787 692022098 811840536 929651561 936421792 988
\&    636432 1048624296 1054288509 1369487579 1454058929 1519352190 17271...
\&
\&    FingerprintsVector;ExtendedConnectivity:SLogPAtomTypes:Radius2;71;Alph
\&    aNumericalValues;ValuesString;78989290 116507218 489454042 888737940 1
\&    162561799 1241797255 1251494264 1263717127 1471206899 1538061784 17654
\&    07295 1795036542 1809833874 2020454493 2055310842 2117729376 11868981
\&    56731842 149505242 184525155 196984339 288181334 481409282 556716568 6
\&    41915747 679881756 721736571 794256218 908276640 992898760 10987549...
\&
\&    FingerprintsVector;ExtendedConnectivity:SYBYLAtomTypes:Radius2;58;Alph
\&    aNumericalValues;ValuesString;199957044 313356892 455463968 465982819
\&    1225318176 1678585943 1883366064 1963811677 2117729376 113784599 19153
\&    8837 196629033 263865277 416380653 477036669 681527491 730724924 90906
\&    5537 1021959189 1133014972 1174311016 1359441203 1573452838 1661585138
\&    1668649038 1684198062 1812312554 1859266290 1891651106 2072549404 ...
\&
\&    FingerprintsVector;ExtendedConnectivity:TPSAAtomTypes:Radius2;47;Alpha
\&    NumericalValues;ValuesString;20818206 259344053 862102353 1331904542 1
\&    700688206 265614156 363161397 681332588 810600886 885767127 950172500
\&    951454814 1059668746 1247054493 1382302230 1399502637 1805025917 19189
\&    39561 2114677228 2126402271 8130483 17645742 32278373 149975755 160327
\&    654 256360355 279492740 291251259 317592700 333763396 972105960 101...
\&
\&    FingerprintsVector;ExtendedConnectivity:UFFAtomTypes:Radius2;56;AlphaN
\&    umericalValues;ValuesString;280305427 357928343 721790579 1151822898 1
\&    207111054 1380963747 1568213839 1603445250 4559268 55012922 180940813
\&    335715751 534801009 684609658 829361048 972945982 999881534 1007655741
\&    1213692591 1222032501 1224517934 1235687794 1244268533 1528120700 162
\&    9595024 1856308891 1978806036 2001865095 2096549435 172675415 18344...
.Ve
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.IP "\fBnew\fR" 4
.IX Item "new"
.Vb 2
\&    $NewExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                                                   %NamesAndValues);
.Ve
.Sp
Using specified \fIExtendedConnectivityFingerprints\fR property names and values hash, \fBnew\fR
method creates a new object and returns a reference to newly created \fBExtendedConnectivityFingerprints\fR
object. By default, the following properties are initialized:
.Sp
.Vb 6
\&    Molecule = \*(Aq\*(Aq
\&    Type = \*(AqExtendedConnectivity\*(Aq
\&    NeighborhoodRadius = 2
\&    AtomIdentifierType = \*(Aq\*(Aq
\&    AtomicInvariantsToUse = [\*(AqAS\*(Aq, \*(AqX\*(Aq, \*(AqBO\*(Aq, \*(AqH\*(Aq, \*(AqFC\*(Aq, \*(AqMN\*(Aq]
\&    FunctionalClassesToUse = [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqAr\*(Aq, \*(AqHal\*(Aq]
.Ve
.Sp
Examples:
.Sp
.Vb 4
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivityCount\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivityBits\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqSize\*(Aq => 1024,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivity\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqNeighborhoodRadius\*(Aq => 2,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqAtomicInvariantsAtomTypes\*(Aq,
\&                              \*(AqAtomicInvariantsToUse\*(Aq =>
\&                                              [\*(AqAS\*(Aq, \*(AqX\*(Aq, \*(AqBO\*(Aq, \*(AqH\*(Aq, \*(AqFC\*(Aq, \*(AqMN\*(Aq] );
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivity\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqNeighborhoodRadius\*(Aq => 2,
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                          \*(AqFunctionalClassAtomTypes\*(Aq,
\&                              \*(AqFunctionalClassesToUse\*(Aq =>
\&                                          [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqAr\*(Aq, \*(AqHal\*(Aq] );
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivity\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,;
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqMMFF94AtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivityCount\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,;
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqMMFF94AtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivityCount\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,;
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqSLogPAtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivity\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,;
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqSLogPAtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints = new ExtendedConnectivityFingerprints(
\&                              \*(AqType\*(Aq => \*(AqExtendedConnectivity\*(Aq,
\&                              \*(AqMolecule\*(Aq => $Molecule,;
\&                              \*(AqAtomIdentifierType\*(Aq =>
\&                                              \*(AqSYBYLAtomTypes\*(Aq);
\&
\&    $ExtendedConnectivityFingerprints\->GenerateFingerprints();
\&    print "$ExtendedConnectivityFingerprints\en";
.Ve
.IP "\fBGenerateFingerprints\fR" 4
.IX Item "GenerateFingerprints"
.Vb 1
\&    $ExtendedConnectivityFingerprints\->GenerateFingerprints();
.Ve
.Sp
Generates extended connectivity fingerprints and returns \fIExtendedConnectivityFingerprints\fR.
.IP "\fBGetDescription\fR" 4
.IX Item "GetDescription"
.Vb 1
\&    $Description = $ExtendedConnectivityFingerprints\->GetDescription();
.Ve
.Sp
Returns a string containing description of extended connectivity fingerprints
fingerprints.
.IP "\fBSetAtomIdentifierType\fR" 4
.IX Item "SetAtomIdentifierType"
.Vb 1
\&    $ExtendedConnectivityFingerprints\->SetAtomIdentifierType($IdentifierType);
.Ve
.Sp
Sets atom \fIIdentifierType\fR to use during extended connectivity fingerprints generation and
returns \fIExtendedConnectivityFingerprints\fR.
.Sp
Possible values: \fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR.
.IP "\fBSetAtomicInvariantsToUse\fR" 4
.IX Item "SetAtomicInvariantsToUse"
.Vb 2
\&    $ExtendedConnectivityFingerprints\->SetAtomicInvariantsToUse($ValuesRef);
\&    $ExtendedConnectivityFingerprints\->SetAtomicInvariantsToUse(@Values);
.Ve
.Sp
Sets atomic invariants to use during \fIAtomicInvariantsAtomTypes\fR value of \fIAtomIdentifierType\fR
for extended connectivity fingerprints generation and returns \fIExtendedConnectivityFingerprints\fR.
.Sp
Possible values for atomic invariants are: \fI\s-1AS, X, BO,  LBO, SB, DB, TB,
H,\s0 Ar, \s-1RA, FC, MN, SM\s0\fR. Default value [ Ref 24 ]: \fI\s-1AS,X,BO,H,FC,MN\s0\fR.
.Sp
The atomic invariants abbreviations correspond to:
.Sp
.Vb 1
\&    AS = Atom symbol corresponding to element symbol
\&
\&    X<n>   = Number of non\-hydrogen atom neighbors or heavy atoms
\&    BO<n> = Sum of bond orders to non\-hydrogen atom neighbors or heavy atoms
\&    LBO<n> = Largest bond order of non\-hydrogen atom neighbors or heavy atoms
\&    SB<n> = Number of single bonds to non\-hydrogen atom neighbors or heavy atoms
\&    DB<n> = Number of double bonds to non\-hydrogen atom neighbors or heavy atoms
\&    TB<n> = Number of triple bonds to non\-hydrogen atom neighbors or heavy atoms
\&    H<n>   = Number of implicit and explicit hydrogens for atom
\&    Ar     = Aromatic annotation indicating whether atom is aromatic
\&    RA     = Ring atom annotation indicating whether atom is a ring
\&    FC<+n/\-n> = Formal charge assigned to atom
\&    MN<n> = Mass number indicating isotope other than most abundant isotope
\&    SM<n> = Spin multiplicity of atom. Possible values: 1 (singlet), 2 (doublet) or
\&            3 (triplet)
.Ve
.Sp
Atom type generated by AtomTypes::AtomicInvariantsAtomTypes class corresponds to:
.Sp
.Vb 1
\&    AS.X<n>.BO<n>.LBO<n>.<SB><n>.<DB><n>.<TB><n>.H<n>.Ar.RA.FC<+n/\-n>.MN<n>.SM<n>
.Ve
.Sp
Except for \s-1AS\s0 which is a required atomic invariant in atom types, all other atomic invariants are
optional. Atom type specification doesn't include atomic invariants with zero or undefined values.
.Sp
In addition to usage of abbreviations for specifying atomic invariants, the following descriptive words
are also allowed:
.Sp
.Vb 12
\&    X : NumOfNonHydrogenAtomNeighbors or NumOfHeavyAtomNeighbors
\&    BO : SumOfBondOrdersToNonHydrogenAtoms or SumOfBondOrdersToHeavyAtoms
\&    LBO : LargestBondOrderToNonHydrogenAtoms or LargestBondOrderToHeavyAtoms
\&    SB :  NumOfSingleBondsToNonHydrogenAtoms or NumOfSingleBondsToHeavyAtoms
\&    DB : NumOfDoubleBondsToNonHydrogenAtoms or NumOfDoubleBondsToHeavyAtoms
\&    TB : NumOfTripleBondsToNonHydrogenAtoms or NumOfTripleBondsToHeavyAtoms
\&    H :  NumOfImplicitAndExplicitHydrogens
\&    Ar : Aromatic
\&    RA : RingAtom
\&    FC : FormalCharge
\&    MN : MassNumber
\&    SM : SpinMultiplicity
.Ve
.Sp
\&\fIAtomTypes::AtomicInvariantsAtomTypes\fR module is used to assign atomic invariant
atom types.
.IP "\fBSetFunctionalClassesToUse\fR" 4
.IX Item "SetFunctionalClassesToUse"
.Vb 2
\&    $ExtendedConnectivityFingerprints\->SetFunctionalClassesToUse($ValuesRef);
\&    $ExtendedConnectivityFingerprints\->SetFunctionalClassesToUse(@Values);
.Ve
.Sp
Sets functional classes invariants to use during \fIFunctionalClassAtomTypes\fR value of \fIAtomIdentifierType\fR
for extended connectivity fingerprints generation and returns \fIExtendedConnectivityFingerprints\fR.
.Sp
Possible values for atom functional classes are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 24 ]: \fI\s-1HBD,HBA,PI,NI\s0,Ar,Hal\fR.
.Sp
The functional class abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
\&
\& Functional class atom type specification for an atom corresponds to:
\&
\&    Ar.CA.H.HBA.HBD.Hal.NI.PI.RA or None
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign functional class atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fBSetNeighborhoodRadius\fR" 4
.IX Item "SetNeighborhoodRadius"
.Vb 1
\&    $ExtendedConnectivityFingerprints\->SetNeighborhoodRadius($Radius);
.Ve
.Sp
Sets neighborhood radius to use during extended connectivity fingerprints generation and
returns \fIExtendedConnectivityFingerprints\fR.
.IP "\fBStringifyExtendedConnectivityFingerprints\fR" 4
.IX Item "StringifyExtendedConnectivityFingerprints"
.Vb 1
\&    $String = $Fingerprints\->StringifyExtendedConnectivityFingerprints();
.Ve
.Sp
Returns a string containing information about \fIExtendedConnectivityFingerprints\fR object.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Fingerprints.pm, FingerprintsStringUtil.pm, AtomNeighborhoodsFingerprints.pm,
AtomTypesFingerprints.pm, EStateIndiciesFingerprints.pm, MACCSKeys.pm,
PathLengthFingerprints.pm, TopologicalAtomPairsFingerprints.pm,
TopologicalAtomTripletsFingerprints.pm, TopologicalAtomTorsionsFingerprints.pm,
TopologicalPharmacophoreAtomPairsFingerprints.pm,
TopologicalPharmacophoreAtomTripletsFingerprints.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
