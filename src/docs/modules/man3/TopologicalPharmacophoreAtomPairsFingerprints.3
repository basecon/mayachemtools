.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TopologicalPharmacophoreAtomPairsFingerprints 1"
.TH TopologicalPharmacophoreAtomPairsFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TopologicalPharmacophoreAtomPairsFingerprints
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Fingerprints::TopologicalPharmacophoreAtomPairsFingerprints;
.PP
use Fingerprints::TopologicalPharmacophoreAtomPairsFingerprints qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBTopologicalPharmacophoreAtomPairsFingerprints\fR [ Ref 60\-62, Ref 65, Ref 68 ] class provides
the following methods:
.PP
new, GenerateFingerprints, GetDescription, GetAtomPairIDs, SetAtomTypesToUse,
SetAtomTypesWeight, SetFuzzFactor, SetFuzzificationMethodology,
SetFuzzificationMode, SetMaxDistance, SetMinDistance,
SetNormalizationMethodology, SetValuesPrecision,
StringifyTopologicalPharmacophoreAtomPairsFingerprints
.PP
\&\fBTopologicalPharmacophoreAtomPairsFingerprints\fR is derived from \fBFingerprints\fR class which in turn
is  derived from \fBObjectProperty\fR base class that provides methods not explicitly defined
in \fBTopologicalPharmacophoreAtomPairsFingerprints\fR, \fBFingerprints\fR or \fBObjectProperty\fR classes using Perl's
\&\s-1AUTOLOAD\s0 functionality. These methods are generated on-the-fly for a specified object property:
.PP
.Vb 3
\&    Set<PropertyName>(<PropertyValue>);
\&    $PropertyValue = Get<PropertyName>();
\&    Delete<PropertyName>();
.Ve
.PP
Based on the values specified for \fBAtomTypesToUse\fR, pharmacophore atom types are
assigned to all non-hydrogen atoms in a molecule and a distance matrix is generated.
A pharmacophore atom pairs basis set is initialized for all unique possible pairs within
\&\fBMinDistance\fR and \fBMaxDistance\fR range.
.PP
.Vb 1
\&    Let:
\&
\&    P = Valid pharmacophore atom type
\&
\&    Px = Pharmacophore atom type x
\&    Py = Pharmacophore atom type y
\&
\&    Dmin = Minimum distance corresponding to number of bonds between two atoms
\&    Dmax = Maximum distance corresponding to number of bonds between two atoms
\&    D = Distance corresponding to number of bonds between two atoms
\&
\&    Px\-Dn\-Py = Pharmacophore atom pair ID for atom types Px and Py at distance Dn
\&
\&    P = Number of pharmacophore atom types to consider
\&    PPDn = Number of possible unique pharmacophore atom pairs at a distance Dn
\&
\&    PPT = Total number of possible pharmacophore atom pairs at all distances between Dmin and Dmax
\&
\&    Then:
\&
\&    PPD =  (P * (P \- 1))/2 + P
\&
\&    PPT = ((Dmax \- Dmin) + 1) * ((P * (P \- 1))/2 + P)
\&        = ((Dmax \- Dmin) + 1) * PPD
\&
\&    So for default values of Dmin = 1, Dmax = 10 and P = 5,
\&
\&    PPD =  (5 * (5 \- 1))/2 + 5 = 15
\&    PPT = ((10 \- 1) + 1) * 15 = 150
\&
\&    The pharmacophore atom pairs bais set includes 150 values.
\&
\&    The atom pair IDs correspond to:
\&
\&    Px\-Dn\-Py = Pharmacophore atom pair ID for atom types Px and Py at distance Dn
\&
\&    For example: H\-D1\-H, H\-D2\-HBA, PI\-D5\-PI and so on
.Ve
.PP
Using distance matrix and pharmacohore atom types, occurrence of unique pharmacohore atom
pairs is counted. The contribution of each atom type to atom pair interaction is optionally
weighted by specified \fBAtomTypesWeight\fR before assigning its count to appropriate distance
bin. Based on \fBNormalizationMethodology\fR option, pharmacophore atom pairs count is optionally
normalized. Additionally, pharmacohore atom pairs count is optionally fuzzified before or after
the normalization controlled by values of \fBFuzzifyAtomPairsCount\fR, \fBFuzzificationMode\fR,
\&\fBFuzzificationMethodology\fR and \fBFuzzFactor\fR.
.PP
The final pharmacophore atom pairs count along with atom pair identifiers involving all non-hydrogen
atoms, with optional normalization and fuzzification, constitute pharmacophore topological atom pairs
fingerprints of the molecule.
.PP
For \fIArbitrarySize\fR value of \fBAtomPairsSetSizeToUse\fR, the fingerprint vector correspond to
only those topological pharmacophore atom pairs which are present and have non-zero count. However,
for \fIFixedSize\fR value of \fBAtomPairsSetSizeToUse\fR, the fingerprint vector contains all possible
valid topological pharmacophore atom pairs with both zero and non-zero count values.
.PP
The current release of MayaChemTools generates the following types of topological pharmacophore
atom pairs fingerprints vector strings:
.PP
.Vb 7
\&    FingerprintsVector;TopologicalPharmacophoreAtomPairs:ArbitrarySize:Min
\&    Distance1:MaxDistance10;54;NumericalValues;IDsAndValuesString;H\-D1\-H H
\&    \-D1\-NI HBA\-D1\-NI HBD\-D1\-NI H\-D2\-H H\-D2\-HBA H\-D2\-HBD HBA\-D2\-HBA HBA\-D2\-
\&    HBD H\-D3\-H H\-D3\-HBA H\-D3\-HBD H\-D3\-NI HBA\-D3\-NI HBD\-D3\-NI H\-D4\-H H\-D4\-H
\&    BA H\-D4\-HBD HBA\-D4\-HBA HBA\-D4\-HBD HBD\-D4\-HBD H\-D5\-H H\-D5\-HBA H\-D5\-...;
\&    18 1 2 1 22 12 8 1 2 18 6 3 1 1 1 22 13 6 5 7 2 28 9 5 1 1 1 36 16 10
\&    3 4 1 37 10 8 1 35 10 9 3 3 1 28 7 7 4 18 16 12 5 1 2 1
\&
\&    FingerprintsVector;TopologicalPharmacophoreAtomPairs:FixedSize:MinDist
\&    ance1:MaxDistance10;150;OrderedNumericalValues;ValuesString;18 0 0 1 0
\&    0 0 2 0 0 1 0 0 0 0 22 12 8 0 0 1 2 0 0 0 0 0 0 0 0 18 6 3 1 0 0 0 1
\&    0 0 1 0 0 0 0 22 13 6 0 0 5 7 0 0 2 0 0 0 0 0 28 9 5 1 0 0 0 1 0 0 1 0
\&    0 0 0 36 16 10 0 0 3 4 0 0 1 0 0 0 0 0 37 10 8 0 0 0 0 1 0 0 0 0 0 0
\&    0 35 10 9 0 0 3 3 0 0 1 0 0 0 0 0 28 7 7 4 0 0 0 0 0 0 0 0 0 0 0 18...
\&
\&    FingerprintsVector;TopologicalPharmacophoreAtomPairs:FixedSize:MinDist
\&    ance1:MaxDistance10;150;OrderedNumericalValues;IDsAndValuesString;H\-D1
\&    \-H H\-D1\-HBA H\-D1\-HBD H\-D1\-NI H\-D1\-PI HBA\-D1\-HBA HBA\-D1\-HBD HBA\-D1\-NI H
\&    BA\-D1\-PI HBD\-D1\-HBD HBD\-D1\-NI HBD\-D1\-PI NI\-D1\-NI NI\-D1\-PI PI\-D1\-PI H\-D
\&    2\-H H\-D2\-HBA H\-D2\-HBD H\-D2\-NI H\-D2\-PI HBA\-D2\-HBA HBA\-D2\-HBD HBA\-D2...;
\&    18 0 0 1 0 0 0 2 0 0 1 0 0 0 0 22 12 8 0 0 1 2 0 0 0 0 0 0 0 0 18 6 3
\&    1 0 0 0 1 0 0 1 0 0 0 0 22 13 6 0 0 5 7 0 0 2 0 0 0 0 0 28 9 5 1 0 0 0
\&    1 0 0 1 0 0 0 0 36 16 10 0 0 3 4 0 0 1 0 0 0 0
.Ve
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.IP "\fBnew\fR" 4
.IX Item "new"
.Vb 2
\&    $TPAPFP = new TopologicalPharmacophoreAtomPairsFingerprints(
\&                                                   %NamesAndValues);
.Ve
.Sp
Using specified \fITopologicalPharmacophoreAtomPairsFingerprints\fR property names and
values hash, \fBnew\fR method creates a new object and returns a reference to newly created
\&\fBTopologicalPharmacophoreAtomPairsFingerprints\fR object. By default, the following properties
are initialized:
.Sp
.Vb 6
\&    Molecule = \*(Aq\*(Aq
\&    Type = \*(AqTopologicalPharmacophoreAtomPairs\*(Aq
\&    MinDistance = 1
\&    MaxDistance = 10
\&    NormalizationMethodology = \*(AqNone\*(Aq
\&    AtomTypesToUse = [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqH\*(Aq]
\&
\&    FuzzifyAtomPairsCount = 0
\&    FuzzificationMode = \*(AqAfterNormalization\*(Aq
\&    FuzzificationMethodology =  \*(AqFuzzyBinning\*(Aq
\&    FuzzFactor = 0.15
\&
\&    ValuesPrecision = 2
.Ve
.Sp
Examples:
.Sp
.Vb 2
\&    $TPAPFP = new TopologicalPharmacophoreAtomPairsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule);
\&
\&    $TPAPFP = new TopologicalPharmacophoreAtomPairsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomPairsSetSizeToUse\*(Aq => \*(AqArbitrarySize\*(Aq,
\&                              \*(AqMinDistance\*(Aq => 1,
\&                              \*(AqMaxDistance\*(Aq => 10,
\&                              \*(AqNormalizationMethodology\*(Aq => \*(AqNone\*(Aq,
\&                              \*(AqAtomTypesToUse\*(Aq => [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqH\*(Aq],
\&                              \*(AqFuzzifyAtomPairsCount\*(Aq => 0);
\&
\&    $TPAPFP = new TopologicalPharmacophoreAtomPairsFingerprints(
\&                              \*(AqMolecule\*(Aq => $Molecule,
\&                              \*(AqAtomPairsSetSizeToUse\*(Aq => \*(AqFizedSize\*(Aq,
\&                              \*(AqMinDistance\*(Aq => 1,
\&                              \*(AqMaxDistance\*(Aq => 10,
\&                              \*(AqNormalizationMethodology\*(Aq => \*(AqNone\*(Aq,
\&                              \*(AqAtomTypesToUse\*(Aq => [\*(AqHBD\*(Aq, \*(AqHBA\*(Aq, \*(AqPI\*(Aq, \*(AqNI\*(Aq, \*(AqH\*(Aq],
\&                              \*(AqFuzzifyAtomPairsCount\*(Aq => 1,
\&                              \*(AqFuzzificationMethodology\*(Aq => \*(AqFuzzyBinning\*(Aq,
\&                              \*(AqFuzzFactor\*(Aq => 0.15,
\&                              \*(AqValuesPrecision\*(Aq => 2);
\&
\&    $TPAPFP\->GenerateFingerprints();
\&    print "$TPAPFP\en";
.Ve
.IP "\fBGetDescription\fR" 4
.IX Item "GetDescription"
.Vb 1
\&    $Description = $TopologicalPharmacophoreAtomPairsFP\->GetDescription();
.Ve
.Sp
Returns a string containing description of topological pharmacophore atom pairs fingerprints.
.IP "\fBGenerateFingerprints\fR" 4
.IX Item "GenerateFingerprints"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->GenerateFingerprints();
.Ve
.Sp
Generates topological pharmacophore atom pairs fingerprints and returns
\&\fITopologicalPharmacophoreAtomPairsFP\fR.
.IP "\fBGetAtomPairIDs\fR" 4
.IX Item "GetAtomPairIDs"
.Vb 2
\&    $AtomPairIDsRef = $TopologicalPharmacophoreAtomPairsFP\->GetAtomPairIDs();
\&    @AtomPairIDs = $TopologicalPharmacophoreAtomPairsFP\->GetAtomPairIDs();
.Ve
.Sp
Returns atom pair IDs corresponding to atom pairs count values in topological pharmacophore
atom pairs fingerprints vector as an array or reference to an array.
.IP "\fBSetAtomPairsSetSizeToUse\fR" 4
.IX Item "SetAtomPairsSetSizeToUse"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetAtomPairsSetSizeToUse($Values);
.Ve
.Sp
Sets pharmacophore atom pairs set size to use for topological pharmacophore fingerprints
generation and returns \fITopologicalPharmacophoreAtomPairsFingerprints\fR.
.Sp
Possible values for pharmacophore atom pairs set size are: \fIArbitrarySize, FizedSize\fR.
Default value: \fIArbitrarySize\fR.
.Sp
For \fIArbitrarySize\fR value of \fBAtomPairsSetSizeToUse\fR, the fingerprint vector correspond to
only those topological pharmacophore atom pairs which are present and have non-zero count. However,
for \fIFixedSize\fR value of \fBAtomPairsSetSizeToUse\fR, the fingerprint vector contains all possible
valid topological pharmacophore atom pairs with both zero and non-zero count values.
.IP "\fBSetAtomTypesToUse\fR" 4
.IX Item "SetAtomTypesToUse"
.Vb 2
\&    $TopologicalPharmacophoreAtomPairsFP\->SetAtomTypesToUse($ValuesRef);
\&    $TopologicalPharmacophoreAtomPairsFP\->SetAtomTypesToUse(@Values);
.Ve
.Sp
Sets pharmacophore atom types to use for topological pharmacophore fingerprints
generation and returns \fITopologicalPharmacophoreAtomPairsFingerprints\fR.
.Sp
Possible values for pharmacophore atom types are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 60\-62 ] : \fI\s-1HBD,HBA,PI,NI,H\s0\fR.
.Sp
The pharmacophore atom types abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign pharmacophore atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fBSetAtomTypesWeight\fR" 4
.IX Item "SetAtomTypesWeight"
.Vb 2
\&    $TopologicalPharmacophoreAtomPairsFP\->SetAtomTypesWeight(
\&        %AtomTypesToWeight);
.Ve
.Sp
Sets weights of specified pharmacophore atom types to use during calculation of their contribution
to atom pair count and returns \fITopologicalPharmacophoreAtomPairsFP\fR.  Default values: \fI1 for
each atom type\fR.
.Sp
The weight values allow to increase the importance of specific pharmacophore atom type
in the generated fingerprints. A weight value of 0 for an atom type eliminates its contribution to
atom pair count where as weight value of 2 doubles its contribution.
.IP "\fBSetFuzzFactor\fR" 4
.IX Item "SetFuzzFactor"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetFuzzFactor($Value);
.Ve
.Sp
Sets fuzz factor value to use during fuzzification of atom pairs count and returns
\&\fITopologicalPharmacophoreAtomPairsFP\fR. Default value: \fI0.15\fR.
.Sp
Valid values: For \fIFuzzyBinning\fR value of \fBFuzzificationMethodology\fR: \fIbetween 0 and 1.0\fR; For
\&\fIFuzzyBinSmoothing\fR value of \fBFuzzificationMethodology\fR: \fIbetween 0 and 0.5\fR.
.IP "\fBSetFuzzificationMethodology\fR" 4
.IX Item "SetFuzzificationMethodology"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetFuzzificationMethodology($Value);
.Ve
.Sp
Sets fuzzification methodology to use for fuzzification of atom pairs count and returns
\&\fITopologicalPharmacophoreAtomPairsFP\fR. Default value: \fIFuzzyBinning\fR.  Possible values:
\&\fIFuzzyBinning | FuzzyBinSmoothing\fR.
.Sp
In conjunction with values for options \fBFuzzifyAtomPairsCount\fR, \fBFuzzificationMode\fR and
\&\fBFuzzFactor\fR, \fBFuzzificationMethodology\fR option is used to fuzzify pharmacophore atom
pairs count.
.Sp
Let:
.Sp
.Vb 3
\&    Px = Pharmacophore atom type x
\&    Py = Pharmacophore atom type y
\&    PPxy = Pharmacophore atom pair between atom type Px and Py
\&
\&    PPxyDn = Pharmacophore atom pairs count between atom type Px and Py
\&             at distance Dn
\&    PPxyDn\-1 = Pharmacophore atom pairs count between atom type Px and Py
\&               at distance Dn \- 1
\&    PPxyDn+1 = Pharmacophore atom pairs count between atom type Px and Py
\&               at distance Dn + 1
\&
\&    FF = FuzzFactor for FuzzyBinning and FuzzyBinSmoothing
.Ve
.Sp
Then:
.Sp
For \fIFuzzyBinning\fR:
.Sp
.Vb 1
\&    PPxyDn = PPxyDn (Unchanged)
\&
\&    PPxyDn\-1 = PPxyDn\-1 + PPxyDn * FF
\&    PPxyDn+1 = PPxyDn+1 + PPxyDn * FF
.Ve
.Sp
For \fIFuzzyBinSmoothing\fR:
.Sp
.Vb 2
\&    PPxyDn = PPxyDn \- PPxyDn * 2FF for Dmin < Dn < Dmax
\&    PPxyDn = PPxyDn \- PPxyDn * FF for Dn = Dmin or Dmax
\&
\&    PPxyDn\-1 = PPxyDn\-1 + PPxyDn * FF
\&    PPxyDn+1 = PPxyDn+1 + PPxyDn * FF
.Ve
.Sp
In both fuzzification schemes, a value of 0 for \s-1FF\s0 implies no fuzzification of occurrence counts.
A value of 1 during \fIFuzzyBinning\fR corresponds to maximum fuzzification of occurrence counts;
however, a value of 1 during \fIFuzzyBinSmoothing\fR ends up completely distributing the value over
the previous and next distance bins.
.Sp
So for default value of \fBFuzzFactor\fR (\s-1FF\s0) 0.15, the occurrence count of pharmacohore atom pairs
at distance Dn during FuzzyBinning is left unchanged and the counts at distances Dn \-1 and Dn + 1
are incremented by PPxyDn * 0.15.
.Sp
And during \fIFuzzyBinSmoothing\fR the occurrence counts at Distance Dn is scaled back using multiplicative
factor of (1 \- 2*0.15) and the occurrence counts at distances Dn \-1 and Dn + 1 are incremented by
PPxyDn * 0.15. In other words, occurrence bin count is smoothed out by distributing it over the
previous and next distance value.
.IP "\fBSetFuzzificationMode\fR" 4
.IX Item "SetFuzzificationMode"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetFuzzificationMode($Value);
.Ve
.Sp
Sets fuzzification mode to use for fuzzification of atom pairs count and returns
\&\fITopologicalPharmacophoreAtomPairsFP\fR. Default value: \fIAfterNormalization\fR.  Possible values:
\&\fIBeforeNormalization | AfterNormalization\fR.
.IP "\fBSetMaxDistance\fR" 4
.IX Item "SetMaxDistance"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetMaxDistance($Value);
.Ve
.Sp
Sets maximum bond distance between atom pairs for generating topological pharmacophore atom
pairs fingerprints and returns \fITopologicalPharmacophoreAtomPairsFP\fR.
.IP "\fBSetMinDistance\fR" 4
.IX Item "SetMinDistance"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetMinDistance($Value);
.Ve
.Sp
Sets minimum bond distance between atom pairs for generating topological pharmacophore atom
pairs fingerprints and returns \fITopologicalPharmacophoreAtomPairsFP\fR.
.IP "\fBSetNormalizationMethodology\fR" 4
.IX Item "SetNormalizationMethodology"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetNormalizationMethodology($Value);
.Ve
.Sp
Sets normalization methodology to use for scaling the occurrence count of pharmacophore atom
pairs within specified distance range and returns \fITopologicalPharmacophoreAtomPairsFP\fR.
Default value: \fINone\fR. Possible values: \fINone, ByHeavyAtomsCount or ByAtomTypesCount\fR.
.IP "\fBSetValuesPrecision\fR" 4
.IX Item "SetValuesPrecision"
.Vb 1
\&    $TopologicalPharmacophoreAtomPairsFP\->SetValuesPrecision($Value);
.Ve
.Sp
Sets precision of atom pairs count real values which might be generated after normalization
or fuzzification  and returns \fITopologicalPharmacophoreAtomPairsFP\fR. Default: up to \fI2\fR decimal
places.
.IP "\fBStringifyTopologicalPharmacophoreAtomPairsFingerprints\fR" 4
.IX Item "StringifyTopologicalPharmacophoreAtomPairsFingerprints"
.Vb 2
\&    $String = $TopologicalPharmacophoreAtomPairsFP\->
\&                  StringifyTopologicalPharmacophoreAtomPairsFingerprints();
.Ve
.Sp
Returns a string containing information about \fITopologicalPharmacophoreAtomPairsFingerprints\fR object.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Fingerprints.pm, FingerprintsStringUtil.pm, AtomNeighborhoodsFingerprints.pm,
AtomTypesFingerprints.pm, EStateIndiciesFingerprints.pm, ExtendedConnectivityFingerprints.pm,
MACCSKeys.pm, PathLengthFingerprints.pm, TopologicalAtomPairsFingerprints.pm,
TopologicalAtomTripletsFingerprints.pm, TopologicalAtomTorsionsFingerprints.pm,
TopologicalPharmacophoreAtomTripletsFingerprints.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
