.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RDKitEnumerateStereoisomers 1"
.TH RDKitEnumerateStereoisomers 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
RDKitEnumerateStereoisomers.py \- Enumerate stereoisomers of molecules
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
RDKitEnumerateStereoisomers.py [\fB\-\-discardNonPhysical\fR <yes or no>]
[\fB\-\-infileParams\fR <Name,Value,...>] [\fB\-\-mode\fR <UnassignedOnly or All>]
[\fB\-\-maxIsomers\fR <number>] [\fB\-\-outfileParams\fR <Name,Value,...>] 
[\fB\-\-overwrite\fR] [\fB\-w\fR <dir>] \fB\-i\fR <infile> \fB\-o\fR <outfile>
.PP
RDKitEnumerateStereoisomers.py \fB\-h\fR | \fB\-\-help\fR | \fB\-e\fR | \fB\-\-examples\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Perform a combinatorial enumeration of stereoisomers for molecules around all
or unassigned chiral atoms and bonds.
.PP
The supported input file formats are: Mol (.mol), \s-1SD \s0(.sdf, .sd), \s-1SMILES \s0(.smi,
\&.csv, .tsv, .txt)
.PP
The supported output file format are: \s-1SD \s0(.sdf, .sd), \s-1SMILES \s0(.smi)
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-d, \-\-discardNonPhysical\fR <yes or no>  [default: yes]" 4
.IX Item "-d, --discardNonPhysical <yes or no> [default: yes]"
Discard stereoisomers with non-physical structures. Possible values: yes or no.
The non-physical nature of a stereoisomer is determined by embedding the
structure to generate a conformation for the stereoisomer using standard
distance geometry methodology.
.Sp
A word to the wise from RDKit documentation: this is computationally expensive
and uses a heuristic that could result in loss of stereoisomers.
.IP "\fB\-e, \-\-examples\fR" 4
.IX Item "-e, --examples"
Print examples.
.IP "\fB\-m, \-\-mode\fR <UnassignedOnly or All>  [default: UnassignedOnly]" 4
.IX Item "-m, --mode <UnassignedOnly or All> [default: UnassignedOnly]"
Enumerate unassigned or all chiral centers. The chiral atoms and bonds with
defined stereochemistry are preserved.
.IP "\fB\-\-maxIsomers\fR <number>  [default: 50]" 4
.IX Item "--maxIsomers <number> [default: 50]"
Maximum number of stereoisomers to generate for each molecule. A  value of zero
indicates generation of all possible steroisomers.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-i, \-\-infile\fR <infile>" 4
.IX Item "-i, --infile <infile>"
Input file name.
.IP "\fB\-\-infileParams\fR <Name,Value,...>  [default: auto]" 4
.IX Item "--infileParams <Name,Value,...> [default: auto]"
A comma delimited list of parameter name and value pairs for reading
molecules from files. The supported parameter names for different file
formats, along with their default values, are shown below:
.Sp
.Vb 3
\&    SD, MOL: removeHydrogens,yes,sanitize,yes,strictParsing,yes
\&    SMILES: smilesColumn,1,smilesNameColumn,2,smilesDelimiter,space,
\&        smilesTitleLine,auto,sanitize,yes
.Ve
.Sp
Possible values for smilesDelimiter: space, comma or tab.
.IP "\fB\-o, \-\-outfile\fR <outfile>" 4
.IX Item "-o, --outfile <outfile>"
Output file name.
.IP "\fB\-\-outfileParams\fR <Name,Value,...>  [default: auto]" 4
.IX Item "--outfileParams <Name,Value,...> [default: auto]"
A comma delimited list of parameter name and value pairs for writing
molecules to files. The supported parameter names for different file
formats, along with their default values, are shown below:
.Sp
.Vb 3
\&    SD: compute2DCoords,auto,kekulize,no
\&    SMILES: kekulize,no,smilesDelimiter,space, smilesIsomeric,yes,
\&        smilesTitleLine,yes
.Ve
.Sp
Default value for compute2DCoords: yes for \s-1SMILES\s0 input file; no for all other
file types.
.IP "\fB\-\-overwrite\fR" 4
.IX Item "--overwrite"
Overwrite existing files.
.IP "\fB\-w, \-\-workingdir\fR <dir>" 4
.IX Item "-w, --workingdir <dir>"
Location of working directory which defaults to the current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To enumerate only unassigned atom and bond chiral centers along with discarding
of non-physical structures, keeping a maximum of 50 stereoisomers for each molecule,
and write out a \s-1SMILES\s0 file, type:
.PP
.Vb 1
\&    % RDKitEnumerateStereoisomers.py  \-i Sample.smi \-o SampleOut.smi
.Ve
.PP
To enumerate only unassigned atom and bond chiral centers along with discarding
any non-physical structures, keeping a maximum of 250 stereoisomers for a molecule,
and write out a \s-1SD\s0 file, type:
.PP
.Vb 2
\&    % RDKitEnumerateStereoisomers.py  \-\-maxIsomers 0 \-i Sample.smi
\&       \-\-maxIsomers 250 \-o SampleOut.sdf
.Ve
.PP
To enumerate all possible assigned and unassigned atom and bond chiral centers,
without discarding any non-physical structures, keeping a maximum of 500 
stereoisomers for a molecule, and write out a \s-1SD\s0 file, type:
.PP
.Vb 2
\&    % RDKitEnumerateStereoisomers.py  \-d no \-m all \-\-maxIsomers 500
\&      \-i Sample.smi \-o SampleOut.sdf
.Ve
.PP
To enumerate only unassigned atom and bond chiral centers along with discarding
of non-physical structures, keeping a maximum of 50 stereoisomers for each molecule
in a \s-1CSV SMILES\s0 file, \s-1SMILES\s0 strings in column 1, name in column 2, and write out a
\&\s-1SD\s0 file with kekulization, type:
.PP
.Vb 4
\&    % RDKitEnumerateStereoisomers.py  \-\-infileParams 
\&      "smilesDelimiter,comma,smilesTitleLine,yes,smilesColumn,1,
\&      smilesNameColumn,2" \-\-outfileParams "compute2DCoords,yes,
\&      kekulize,yes" \-i SampleSMILES.csv \-o SampleOut.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud(msud@san.rr.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
RDKitConvertFileFormat.py, RDKitEnumerateCompoundLibrary.py, RDKitGenerateConformers.py,
RDKitGenerateMolecularFrameworks.py
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
The functionality available in this script is implemented using RDKit, an
open source toolkit for cheminformatics developed by Greg Landrum.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option) any
later version.
