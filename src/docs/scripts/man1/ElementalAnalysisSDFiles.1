.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ElementalAnalysisSDFiles 1"
.TH ElementalAnalysisSDFiles 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ElementalAnalysisSDFiles.pl \- Perform elemental analysis using formula data field in SDFile(s)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ElementalAnalysisSDFiles.pl SDFile(s)...
.PP
ElementalAnalysisSDFiles.pl [\fB\-d, \-\-detail\fR infolevel] [\fB\-\-fast\fR]
[\fB\-\-formulafield\fR \s-1SD\s0 data field name] [\fB\-f, \-\-formulamode\fR \fIDataField | StructureData\fR]
[\fB\-\-formulaout\fR yes or no] [\fB\-m, \-\-mode\fR All | \*(L"ElementalAnalysis, [MolecularWeight, ExactMass]\*(R"]
[\fB\-h, \-\-help\fR] [\fB\-o, \-\-overwrite\fR] [\fB\-r, \-\-root\fR rootname]
[\fB\-v \-\-valuefieldnames\fR Name, Label, [Name, Label,...]] [\fB\-w, \-\-workingdir\fR dirname] SDFile(s)...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Perform elemental analysis using molecular formula specified by a data field name or generated
from structure data in \fISDFile(s)\fR.
.PP
In addition to straightforward molecular formulas \- H2O, HCl, C3H7O2N \-
other supported variations are: Ca3(\s-1PO4\s0)2, [PCl4]+, [Fe(\s-1CN\s0)6]4\-, C37H42N2O6+2, Na2CO3.10H2O,
8H2S.46H2O, and so on. Charges are simply ignored. Isotope symbols in formulas specification, including
D and T, are not supported.
.PP
The file names are separated by space.The valid file extensions are \fI.sdf\fR and \fI.sd\fR.
All other file names are ignored. All the \s-1SD\s0 files in a current directory can be specified
either by \fI*.sdf\fR or the current directory name.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-d, \-\-detail\fR \fIinfolevel\fR" 4
.IX Item "-d, --detail infolevel"
Level of information to print about compound records being ignored. Default: \fI1\fR. Possible
values: \fI1, 2 or 3\fR.
.IP "\fB\-\-fast\fR" 4
.IX Item "--fast"
In this mode, the formula data field specified using \fB\-f, \-\-formulafield\fR option is assumed
to contain valid molecular formula data and initial formula validation check is skipped.
.IP "\fB\-\-formulafield\fR \fI\s-1SD\s0 data field name\fR" 4
.IX Item "--formulafield SD data field name"
\&\fISDFile(s)\fR data field name containing molecular formulas used for performing
elemental analysis during \fIDataField\fR value of \fB\-f, \-\-formulamode\fR option.
Default value: \fI\s-1SD\s0 data field containing the word formula in its name\fR.
.Sp
This option is ignore during \fIStructureData\fR value of \fB\-f, \-\-formulamode\fR option.
.IP "\fB\-f, \-\-formulamode\fR \fIDataField | StructureData\fR" 4
.IX Item "-f, --formulamode DataField | StructureData"
Specify source of molecular formula used for performing elemental analysis: retrieve
formula using \fISDFile(s)\fR data field name or generate formula from structure. Possible
values: \fIDataField or StructureData\fR. Default value: \fIDataField\fR.
.IP "\fB\-\-formulaout\fR \fIyes or no\fR" 4
.IX Item "--formulaout yes or no"
Specify whether to write out formula to \s-1SD\s0 file during \fIStructureData\fR value of
\&\fB\-f, \-\-formulamode\fR option. Possible values: \fIYes or No\fR. Default: \fINo\fR.
.ie n .IP "\fB\-m, \-\-mode\fR \fIAll | ""ElementalAnalysis,[MolecularWeight,ExactMass]""\fR" 4
.el .IP "\fB\-m, \-\-mode\fR \fIAll | ``ElementalAnalysis,[MolecularWeight,ExactMass]''\fR" 4
.IX Item "-m, --mode All | ElementalAnalysis,[MolecularWeight,ExactMass]"
Specify what values to calculate using molecular formula data field or structure data from
\&\fISDFile(s)\fR: calculate all supported values or specify a comma delimited list of values.
Possible values: \fIAll | \*(L"ElementalAnalysis, [MolecularWeight, ExactMass]\*(R"\fR. Default: \fIAll\fR
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files.
.IP "\fB\-p, \-\-precision\fR \fInumber\fR" 4
.IX Item "-p, --precision number"
Precision of calculated values in the output file. Default: up to \fI2\fR decimal places.
Valid values: positive integers.
.IP "\fB\-r, \-\-root\fR \fIrootname\fR" 4
.IX Item "-r, --root rootname"
New \s-1SD\s0 file name is generated using the root: <Root>.<Ext>. Default new file
name: <InitialSDFileName>ElementalAnalysis.<Ext>. This option is ignored for multiple
input files.
.IP "\fB\-v \-\-valuefieldnames\fR \fIName,Label,[Name,Label,...]\fR" 4
.IX Item "-v --valuefieldnames Name,Label,[Name,Label,...]"
Specify \s-1SD\s0 data field names to use for calculated values. In general, it's a comma delimited
list of value name and \s-1SD\s0 field name  pairs. Supported value names: \fIElementalAnalysis,
MolecularWeight, ExactMass, and MolecularFormula\fR. Default labels: \fIElementalAnalysis,
MolecularWeight, ExactMass, and MolecularFormula\fR.
.Sp
\&\fIMolecularFormula\fR label is only used during \fIStructureData\fR value of
\&\fB\-f, \-\-formulamode\fR option.
.IP "\fB\-w, \-\-workingdir\fR \fIdirname\fR" 4
.IX Item "-w, --workingdir dirname"
Location of working directory. Default: current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To perform elemental analysis, calculate molecular weight and exact mass using \s-1SD\s0
field name value with the word Formula in its name and generate a new \s-1SD\s0 file
NewSample1.sdf, type:
.PP
.Vb 1
\&    % ElementalAnalysisSDFiles.pl \-o \-r NewSample1 Sample1.sdf
.Ve
.PP
To perform elemental analysis, calculate molecular weight and exact mass using
structure data in \s-1SD\s0 file and generate a new \s-1SD\s0 file NewSample1.sdf, type:
.PP
.Vb 2
\&    % ElementalAnalysisSDFiles.pl \-\-formulamode StructureData \-o
\&      \-r NewSample1 Sample1.sdf
.Ve
.PP
To perform elemental analysis using formulas in \s-1SD\s0 field name Formula, use field name
Analysis for calculated data, and generate a new \s-1SD\s0 file NewSample1.sdf, type:
.PP
.Vb 3
\&    % ElementalAnalysisSDFiles.pl \-\-m ElementalAnalysis \-\-formulafield
\&      Formula \-\-valuefieldnames "ElementalAnalysis,Analysis" \-o
\&      \-r NewSample1 Sample1.sdf
.Ve
.PP
To calculate molecular weight, using formulas in \s-1SD\s0 field name Formula, with four decimal
precision and generate a new \s-1SD\s0 file NewSample1.sdf, type
.PP
.Vb 2
\&    % ElementalAnalysisSDFiles.pl \-\-m MolecularWeight \-\-formulafield
\&      Formula \-\-precision 4 \-o \-r NewSample1 Sample1.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
AnalyzeSDFilesData.pl, InfoSDFiles.pl, ExtractFromSDFiles.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
