.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AtomTypesFingerprints 1"
.TH AtomTypesFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AtomTypesFingerprints.pl \- Generate atom types fingerprints for SD files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
AtomTypesFingerprints.pl SDFile(s)...
.PP
AtomTypesFingerprints.pl [\fB\-\-AromaticityModel\fR \fIAromaticityModelType\fR]
[\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes |
DREIDINGAtomTypes | EStateAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes\fR]
[\fB\-\-AtomicInvariantsToUse\fR \fI\*(L"AtomicInvariant, AtomicInvariant...\*(R"\fR]
[\fB\-\-FunctionalClassesToUse\fR \fI\*(L"FunctionalClass1,FunctionalClass2...\*(R"\fR]
[\fB\-\-AtomTypesSetToUse\fR \fIArbitrarySize | FixedSize\fR]
[\fB\-\-BitsOrder\fR \fIAscending | Descending\fR] [\fB\-b, \-\-BitStringFormat\fR \fIBinaryString | HexadecimalString\fR]
[\fB\-\-CompoundID\fR \fIDataFieldName or LabelPrefixString\fR] [\fB\-\-CompoundIDLabel\fR \fItext\fR]
[\fB\-\-CompoundIDMode\fR \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR]
[\fB\-\-DataFields\fR \fI\*(L"FieldLabel1,FieldLabel2,...\*(R"\fR] [\fB\-d, \-\-DataFieldsMode\fR \fIAll | Common | Specify | CompoundID\fR]
[\fB\-f, \-\-Filter\fR \fIYes | No\fR] [\fB\-\-FingerprintsLabelMode\fR \fIFingerprintsLabelOnly | FingerprintsLabelWithIDs\fR] [\fB\-\-FingerprintsLabel\fR \fItext\fR]
[\fB\-h, \-\-help\fR] [\fB\-k, \-\-KeepLargestComponent\fR \fIYes | No\fR]
[\fB\-m, \-\-mode\fR \fIAtomTypesCount | AtomTypesBits\fR] [\fB\-i, \-\-IgnoreHydrogens\fR \fIYes | No\fR]
[\fB\-\-OutDelim\fR \fIcomma | tab | semicolon\fR] [\fB\-\-output\fR \fI\s-1SD\s0 |FP | text | all\fR] [\fB\-o, \-\-overwrite\fR]
[\fB\-q, \-\-quote\fR \fIYes | No\fR] [\fB\-r, \-\-root\fR \fIRootName\fR] [\fB\-s, \-\-size\fR \fInumber\fR] [\fB\-\-ValuesPrecision\fR \fInumber\fR]
[\fB\-v, \-\-VectorStringFormat\fR \fIIDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString\fR]
[\fB\-w, \-\-WorkingDir\fR \fIDirName\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate atom types fingerprints for \fISDFile(s)\fR and create appropriate \s-1SD, FP\s0 or
\&\s-1CSV/TSV\s0 text file(s) containing fingerprints bit-vector or vector strings corresponding to
molecular fingerprints.
.PP
Multiple SDFile names are separated by spaces. The valid file extensions are \fI.sdf\fR
and \fI.sd\fR. All other file names are ignored. All the \s-1SD\s0 files in a current directory
can be specified either by \fI*.sdf\fR or the current directory name.
.PP
The current release of MayaChemTools supports generation of atom types fingerpritns
corresponding to following \fB\-a, \-\-AtomIdentifierTypes\fR:
.PP
.Vb 3
\&    AtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
\&    FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes,
\&    SYBYLAtomTypes, TPSAAtomTypes, UFFAtomTypes
.Ve
.PP
Based on the values specified for \fB\-a, \-\-AtomIdentifierType\fR along with other specified
parameters such as \fB\-\-AtomicInvariantsToUse\fR and \fB\-\-FunctionalClassesToUse\fR, initial
atom types are assigned to all non-hydrogen atoms or all atoms in a molecule
.PP
Using the assigned atom types and specified \fB\-m, \-\-Mode\fR, one of the following types of
fingerprints are generated:
.PP
.Vb 2
\&    AtomTypesCount \- A vector containing count of atom types
\&    AtomTypesBits \- A bit vector indicating presence/absence of atom types
.Ve
.PP
For \fIAtomTypesCount\fR fingerprints, two types of atom types set size are allowed as
value of \fB\-\-AtomTypesSetToUse\fR option:
.PP
.Vb 2
\&    ArbitrarySize \- Corresponds to only atom types detected in molecule
\&    FixedSize \- Corresponds to fixed number of atom types previously defined
.Ve
.PP
For \fIAtomTypesBits\fR fingerprints, only \fIFixedSize\fR atom type set is allowed.
.PP
\&\fIArbitrarySize\fR corresponds to atom types detected in a molecule where as \fIFixedSize\fR implies
a fix number of all possible atom types previously defined for a specific \fB\-a, \-\-AtomIdentifierType\fR.
.PP
Fix number of all possible atom types for supported \fIAtomIdentifierTypes\fR in current release
of MayaChemTools are:
.PP
.Vb 1
\&    AtomIdentifier       Total    TotalWithoutHydrogens
\&
\&    DREIDINGAtomTypes    37       34
\&    EStateAtomTypes      109      87
\&    MMFF94AtomTypes      212      171
\&    SLogPAtomTypes       72       67
\&    SYBYLAtomTypes       45       44
\&    TPSAAtomTypes        47       47
\&    UFFAtomTypes         126      124
.Ve
.PP
The current release of MayaChemTools generates the following atom types fingerprints
bit-vector and vector strings:
.PP
.Vb 4
\&    FingerprintsVector;AtomTypesCount:AtomicInvariantsAtomTypes:ArbitraryS
\&    ize;10;NumericalValues;IDsAndValuesString;C.X1.BO1.H3 C.X2.BO2.H2 C.X2
\&    .BO3.H1 C.X3.BO3.H1 C.X3.BO4 F.X1.BO1 N.X2.BO2.H1 N.X3.BO3 O.X1.BO1.H1
\&    O.X1.BO2;2 4 14 3 10 1 1 1 3 2
\&
\&    FingerprintsVector;AtomTypesCount:DREIDINGAtomTypes:ArbitrarySize;8;Nu
\&    mericalValues;IDsAndValuesString;C_2 C_3 C_R F_ N_3 N_R O_2 O_3;2 9 22
\&    1 1 1 2 3
\&
\&    FingerprintsVector;AtomTypesCount:DREIDINGAtomTypes:FixedSize;34;Order
\&    edNumericalValues;IDsAndValuesString;B_3 B_2 C_3 C_R C_2 C_1 N_3 N_R N
\&    _2 N_1 O_3 O_R O_2 O_1 F_ Al3 Si3 P_3 S_3 Cl Ga3 Ge3 As3 Se3 Br In3 Sn
\&    3 Sb3 Te3 I_ Na Ca Fe Zn;0 0 9 22 2 0 1 1 0 0 3 0 2 0 1 0 0 0 0 0 0 0 
\&    0 0 0 0 0 0 0 0 0 0 0 0
\&
\&    FingerprintsBitVector;AtomTypesBits:DREIDINGAtomTypes:FixedSize;34;Bin
\&    aryString;Ascending;0011101100101010000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:EStateAtomTypes:ArbitrarySize;11;Num
\&    ericalValues;IDsAndValuesString;aaCH aasC aasN dO dssC sCH3 sF sOH ssC
\&    H2 ssNH sssCH;14 8 1 2 2 2 1 3 4 1 3
\&
\&    FingerprintsVector;AtomTypesCount:EStateAtomTypes:FixedSize;87;Ordered
\&    NumericalValues;IDsAndValuesString;sLi ssBe ssssBem sBH2 ssBH sssB sss
\&    sBm sCH3 dCH2 ssCH2 tCH dsCH aaCH sssCH ddC tsC dssC aasC aaaC ssssC s
\&    NH3p sNH2 ssNH2p dNH ssNH aaNH tN sssNHp dsN aaN sssN ddsN aasN ss...;
\&    0 0 0 0 0 0 0 2 0 4 0 0 14 3 0 0 2 8 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 3 2 0 0
\&    0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...
\&
\&    FingerprintsBitVector;AtomTypesBits:EStateAtomTypes:FixedSize;87;Binar
\&    yString;Ascending;0000000101001100110000001000000010110000100000000000
\&    000000000000000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:FunctionalClassAtomTypes:ArbitrarySi
\&    ze;8;NumericalValues;IDsAndValuesString;Ar Ar.HBA HBA HBA.HBD HBD Hal 
\&    NI None;22 1 2 3 1 1 1 10
\&
\&    FingerprintsVector;AtomTypesCount:MMFF94AtomTypes:ArbitrarySize;13;Num
\&    ericalValues;IDsAndValuesString;C5A C5B C=ON CB COO CR F N5 NC=O O=CN
\&    O=CO OC=O OR;2 2 1 18 1 9 1 1 1 1 1 1 2
\&
\&    FingerprintsVector;AtomTypesCount:MMFF94AtomTypes:FixedSize;171;Ordere
\&    dNumericalValues;IDsAndValuesString;CR C=C CSP2 C=O C=N CGD C=OR C=ON
\&    CONN COO COON COOO C=OS C=S C=SN CSO2 CS=O CSS C=P CSP =C= OR OC=O OC=
\&    C OC=N OC=S ONO2 ON=O OSO3 OSO2 OSO OS=O \-OS OPO3 OPO2 OPO \-OP \-O\-...;
\&    9 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 0 0 0 0 0 0 0 0 ...
\&
\&    FingerprintsBitVector;AtomTypesBits:MMFF94AtomTypes:FixedSize;171;Bina
\&    ryString;Ascending;100000010100000000000110000000000000000101000000100
\&    0100000000000000000000000000000000000000000100000000000000000000000000
\&    0000000011000000000000000001000000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:SLogPAtomTypes:ArbitrarySize;16;Nume
\&    ricalValues;IDsAndValuesString;C1 C10 C11 C14 C18 C20 C21 C22 C5 CS F
\&    N11 N4 O10 O2 O9;5 1 1 1 14 4 2 1 2 2 1 1 1 1 3 1
\&
\&    FingerprintsVector;AtomTypesCount:SLogPAtomTypes:FixedSize;67;OrderedN
\&    umericalValues;IDsAndValuesString;C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C
\&    12 C13 C14 C15 C16 C17 C18 C19 C20 C21 C22 C23 C24 C25 C26 C27 CS N1 N
\&    2 N3 N4 N5 N6 N7 N8 N9 N10 N11 N12 N13 N14 NS O1 O2 O3 O4 O5 O6 O7 O8
\&    O9 O10 O11 O12 OS F Cl Br I Hal P S1 S2 S3 Me1 Me2;5 0 0 0 2 0 0 0 0 1
\&    1 0 0 1 0 0 0 14 0 4 2 1 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0...
\&
\&    FingerprintsBitVector;AtomTypesBits:SLogPAtomTypes:FixedSize;67;Binary
\&    String;Ascending;10001000011001000101110000010001000000100000100000011
\&    0001000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:SYBYLAtomTypes:ArbitrarySize;9;Numer
\&    icalValues;IDsAndValuesString;C.2 C.3 C.ar F N.am N.ar O.2 O.3 O.co2;2
\&    9 22 1 1 1 1 2 2
\&
\&    FingerprintsVector;AtomTypesCount:SYBYLAtomTypes:FixedSize;44;OrderedN
\&    umericalValues;IDsAndValuesString;C.3 C.2 C.1 C.ar C.cat N.3 N.2 N.1 N
\&    .ar N.am N.pl3 N.4 O.3 O.2 O.co2 S.3 S.2 S.o S.o2 P.3 F Cl Br I ANY HA
\&    L HET Li Na Mg Al Si K Ca Cr.th Cr.oh Mn Fe Co.oh Cu Zn Se Mo Sn;9 2 0
\&    22 0 0 0 0 1 1 0 0 2 1 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0
\&
\&    FingerprintsBitVector;AtomTypesBits:SYBYLAtomTypes:FixedSize;44;Binary
\&    String;Ascending;110100001100111000001000000000000000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:TPSAAtomTypes:FixedSize;47;OrderedNu
\&    mericalValues;IDsAndValuesString;N1 N2 N3 N4 N5 N6 N7 N8 N9 N10 N11 N1
\&    2 N13 N14 N15 N16 N17 N18 N19 N20 N21 N22 N23 N24 N25 N26 N O1 O2 O3 O
\&    4 O5 O6 O S1 S2 S3 S4 S5 S6 S7 S P1 P2 P3 P4 P;0 0 0 0 0 0 1 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&
\&    FingerprintsBitVector;AtomTypesBits:TPSAAtomTypes:FixedSize;47;BinaryS
\&    tring;Ascending;000000100000000000001000000001100000000000000000
\&
\&    FingerprintsVector;AtomTypesCount:UFFAtomTypes:ArbitrarySize;8;Numeric
\&    alValues;IDsAndValuesString;C_2 C_3 C_R F_ N_3 N_R O_2 O_3;2 9 22 1 1
\&    1 2 3
\&
\&    FingerprintsVector;AtomTypesCount:UFFAtomTypes;124;OrderedNumerical
\&    Values;IDsAndValuesString;He4+4 Li Be3+2 B_3 B_2 C_3 C_R C_2 C_1 N_3 N_
\&    R N_2 N_1 O_3 O_3_z O_R O_2 O_1 F_ Ne4+4 Na Mg3+2 Al3 Si3 P_3+3 P_3+5 P
\&    _3+q S_3+2 S_3+4 S_3+6 S_R S_2 Cl Ar4+4 K_ Ca6+2 Sc3+3 Ti3+4 Ti6+4 V_3+
\&    ;0 0 0 0 0 12 0 3 0 3 0 1 0 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
\&
\&    FingerprintsVector;AtomTypesCount:UFFAtomTypes:FixedSize;124;OrderedNu
\&    mericalValues;IDsAndValuesString;He4+4 Li Be3+2 B_3 B_2 C_3 C_R C_2 C_
\&    1 N_3 N_R N_2 N_1 O_3 O_3_z O_R O_2 O_1 F_ Ne4+4 Na Mg3+2 Al3 Si3 P_3+
\&    3 P_3+5 P_3+q S_3+2 S_3+4 S_3+6 S_R S_2 Cl Ar4+4 K_ Ca6+2 Sc3+3 Ti...;
\&    0 0 0 0 0 9 22 2 0 1 1 0 0 3 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...
\&
\&    FingerprintsBitVector;AtomTypesBits:UFFAtomTypes:FixedSize;124;BinaryS
\&    tring;Ascending;000001110110010010100000000000000000000000000000000000
\&    0000000000000000000000000000000000000000000000000000000000000000000000
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-AromaticityModel\fR \fIMDLAromaticityModel | TriposAromaticityModel | MMFFAromaticityModel | ChemAxonBasicAromaticityModel | ChemAxonGeneralAromaticityModel | DaylightAromaticityModel | MayaChemToolsAromaticityModel\fR" 4
.IX Item "--AromaticityModel MDLAromaticityModel | TriposAromaticityModel | MMFFAromaticityModel | ChemAxonBasicAromaticityModel | ChemAxonGeneralAromaticityModel | DaylightAromaticityModel | MayaChemToolsAromaticityModel"
Specify aromaticity model to use during detection of aromaticity. Possible values in the current
release are: \fIMDLAromaticityModel, TriposAromaticityModel, MMFFAromaticityModel,
ChemAxonBasicAromaticityModel, ChemAxonGeneralAromaticityModel, DaylightAromaticityModel
or MayaChemToolsAromaticityModel\fR. Default value: \fIMayaChemToolsAromaticityModel\fR.
.Sp
The supported aromaticity model names along with model specific control parameters
are defined in \fBAromaticityModelsData.csv\fR, which is distributed with the current release
and is available under \fBlib/data\fR directory. \fBMolecule.pm\fR module retrieves data from
this file during class instantiation and makes it available to method \fBDetectAromaticity\fR
for detecting aromaticity corresponding to a specific model.
.IP "\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes\fR" 4
.IX Item "-a, --AtomIdentifierType AtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes"
Specify atom identifier type to use for assignment of atom types to hydrogen and/or
non-hydrogen atoms during calculation of atom types fingerprints. Possible values in the
current release are: \fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR. Default value: \fIAtomicInvariantsAtomTypes\fR.
.ie n .IP "\fB\-\-AtomicInvariantsToUse\fR \fI""AtomicInvariant,AtomicInvariant...""\fR" 4
.el .IP "\fB\-\-AtomicInvariantsToUse\fR \fI``AtomicInvariant,AtomicInvariant...''\fR" 4
.IX Item "--AtomicInvariantsToUse AtomicInvariant,AtomicInvariant..."
This value is used during \fIAtomicInvariantsAtomTypes\fR value of \fBa, \-\-AtomIdentifierType\fR
option. It's a list of comma separated valid atomic invariant atom types.
.Sp
Possible values for atomic invariants are: \fI\s-1AS, X, BO,  LBO, SB, DB, TB,
H,\s0 Ar, \s-1RA, FC, MN, SM\s0\fR. Default value: \fI\s-1AS,X,BO,H,FC\s0\fR.
.Sp
The atomic invariants abbreviations correspond to:
.Sp
.Vb 1
\&    AS = Atom symbol corresponding to element symbol
\&
\&    X<n>   = Number of non\-hydrogen atom neighbors or heavy atoms
\&    BO<n> = Sum of bond orders to non\-hydrogen atom neighbors or heavy atoms
\&    LBO<n> = Largest bond order of non\-hydrogen atom neighbors or heavy atoms
\&    SB<n> = Number of single bonds to non\-hydrogen atom neighbors or heavy atoms
\&    DB<n> = Number of double bonds to non\-hydrogen atom neighbors or heavy atoms
\&    TB<n> = Number of triple bonds to non\-hydrogen atom neighbors or heavy atoms
\&    H<n>   = Number of implicit and explicit hydrogens for atom
\&    Ar     = Aromatic annotation indicating whether atom is aromatic
\&    RA     = Ring atom annotation indicating whether atom is a ring
\&    FC<+n/\-n> = Formal charge assigned to atom
\&    MN<n> = Mass number indicating isotope other than most abundant isotope
\&    SM<n> = Spin multiplicity of atom. Possible values: 1 (singlet), 2 (doublet) or
\&            3 (triplet)
.Ve
.Sp
Atom type generated by AtomTypes::AtomicInvariantsAtomTypes class corresponds to:
.Sp
.Vb 1
\&    AS.X<n>.BO<n>.LBO<n>.<SB><n>.<DB><n>.<TB><n>.H<n>.Ar.RA.FC<+n/\-n>.MN<n>.SM<n>
.Ve
.Sp
Except for \s-1AS\s0 which is a required atomic invariant in atom types, all other atomic invariants are
optional. Atom type specification doesn't include atomic invariants with zero or undefined values.
.Sp
In addition to usage of abbreviations for specifying atomic invariants, the following descriptive words
are also allowed:
.Sp
.Vb 12
\&    X : NumOfNonHydrogenAtomNeighbors or NumOfHeavyAtomNeighbors
\&    BO : SumOfBondOrdersToNonHydrogenAtoms or SumOfBondOrdersToHeavyAtoms
\&    LBO : LargestBondOrderToNonHydrogenAtoms or LargestBondOrderToHeavyAtoms
\&    SB :  NumOfSingleBondsToNonHydrogenAtoms or NumOfSingleBondsToHeavyAtoms
\&    DB : NumOfDoubleBondsToNonHydrogenAtoms or NumOfDoubleBondsToHeavyAtoms
\&    TB : NumOfTripleBondsToNonHydrogenAtoms or NumOfTripleBondsToHeavyAtoms
\&    H :  NumOfImplicitAndExplicitHydrogens
\&    Ar : Aromatic
\&    RA : RingAtom
\&    FC : FormalCharge
\&    MN : MassNumber
\&    SM : SpinMultiplicity
.Ve
.Sp
\&\fIAtomTypes::AtomicInvariantsAtomTypes\fR module is used to assign atomic invariant
atom types.
.ie n .IP "\fB\-\-FunctionalClassesToUse\fR \fI""FunctionalClass1,FunctionalClass2...""\fR" 4
.el .IP "\fB\-\-FunctionalClassesToUse\fR \fI``FunctionalClass1,FunctionalClass2...''\fR" 4
.IX Item "--FunctionalClassesToUse FunctionalClass1,FunctionalClass2..."
This value is used during \fIFunctionalClassAtomTypes\fR value of \fBa, \-\-AtomIdentifierType\fR
option. It's a list of comma separated valid functional classes.
.Sp
Possible values for atom functional classes are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 24 ]: \fI\s-1HBD,HBA,PI,NI\s0,Ar,Hal\fR.
.Sp
The functional class abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
\&
\& Functional class atom type specification for an atom corresponds to:
\&
\&    Ar.CA.H.HBA.HBD.Hal.NI.PI.RA
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign functional class atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fB\-\-AtomTypesSetToUse\fR \fIArbitrarySize | FixedSize\fR" 4
.IX Item "--AtomTypesSetToUse ArbitrarySize | FixedSize"
Atom types set size to use during generation of atom types fingerprints.
.Sp
Possible values for \fIAtomTypesCount\fR values of \fB\-m, \-\-mode\fR option: \fIArbitrarySize |
FixedSize\fR; Default value: \fIArbitrarySize\fR.
.Sp
Possible values for \fIAtomTypesBits\fR value of \fB\-m, \-\-mode\fR option: \fIFixedSize\fR;
Default value: \fIFixedSize\fR.
.Sp
\&\fIFixedSize\fR value is not supported for \fIAtomicInvariantsAtomTypes\fR value of
\&\fB\-a, \-\-AtomIdentifierType\fR option.
.Sp
\&\fIArbitrarySize\fR corresponds to only atom types detected in molecule; \fIFixedSize\fR corresponds
to fixed number of previously defined atom types for specified \fB\-a, \-\-AtomIdentifierType\fR.
.IP "\fB\-\-BitsOrder\fR \fIAscending | Descending\fR" 4
.IX Item "--BitsOrder Ascending | Descending"
Bits order to use during generation of fingerprints bit-vector string for \fIAtomTypesBits\fR value of
=item \fB\-\-BitsOrder\fR \fIAscending | Descending\fR
.Sp
Bits order to use during generation of fingerprints bit-vector string for \fIAtomTypesBits\fR value of
\&\fB\-m, \-\-mode\fR option. Possible values: \fIAscending, Descending\fR. Default: \fIAscending\fR.
.Sp
\&\fIAscending\fR bit order which corresponds to first bit in each byte as the lowest bit as
opposed to the highest bit.
.Sp
Internally, bits are stored in \fIAscending\fR order using Perl vec function. Regardless
of machine order, big-endian or little-endian, vec function always considers first
string byte as the lowest byte and first bit within each byte as the lowest bit.
.IP "\fB\-b, \-\-BitStringFormat\fR \fIBinaryString | HexadecimalString\fR" 4
.IX Item "-b, --BitStringFormat BinaryString | HexadecimalString"
Format of fingerprints bit-vector string data in output \s-1SD, FP\s0 or \s-1CSV/TSV\s0 text file(s) specified by
\&\fB\-\-output\fR used during \fIAtomTypesBits\fR value of \fB\-m, \-\-mode\fR option. Possible
values: \fIBinaryString, HexadecimalString\fR. Default value: \fIBinaryString\fR.
.Sp
\&\fIBinaryString\fR corresponds to an \s-1ASCII\s0 string containing 1s and 0s. \fIHexadecimalString\fR
contains bit values in \s-1ASCII\s0 hexadecimal format.
.Sp
Examples:
.Sp
.Vb 2
\&    FingerprintsBitVector;AtomTypesBits:DREIDINGAtomTypes;34;BinaryString;
\&    Ascending;0010101010101000000000000000000000000000
\&
\&    FingerprintsBitVector;AtomTypesBits:MMFF94AtomTypes;171;BinaryString;
\&    Ascending;1000010101000000000001100000000000000001010000101000000000000
\&    00000000000000000000000000000000000001000000000000000000000000000000000
\&    0000000000000000000000000000000000000000000
.Ve
.IP "\fB\-\-CompoundID\fR \fIDataFieldName or LabelPrefixString\fR" 4
.IX Item "--CompoundID DataFieldName or LabelPrefixString"
This value is \fB\-\-CompoundIDMode\fR specific and indicates how compound \s-1ID\s0 is generated.
.Sp
For \fIDataField\fR value of \fB\-\-CompoundIDMode\fR option, it corresponds to datafield label name
whose value is used as compound \s-1ID\s0; otherwise, it's a prefix string used for generating compound
IDs like LabelPrefixString<Number>. Default value, \fICmpd\fR, generates compound IDs which
look like Cmpd<Number>.
.Sp
Examples for \fIDataField\fR value of \fB\-\-CompoundIDMode\fR:
.Sp
.Vb 2
\&    MolID
\&    ExtReg
.Ve
.Sp
Examples for \fILabelPrefix\fR or \fIMolNameOrLabelPrefix\fR value of \fB\-\-CompoundIDMode\fR:
.Sp
.Vb 1
\&    Compound
.Ve
.Sp
The value specified above generates compound IDs which correspond to Compound<Number>
instead of default value of Cmpd<Number>.
.IP "\fB\-\-CompoundIDLabel\fR \fItext\fR" 4
.IX Item "--CompoundIDLabel text"
Specify compound \s-1ID\s0 column label for \s-1FP\s0 or \s-1CSV/TSV\s0 text file(s) used during \fICompoundID\fR value
of \fB\-\-DataFieldsMode\fR option. Default: \fICompoundID\fR.
.IP "\fB\-\-CompoundIDMode\fR \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR" 4
.IX Item "--CompoundIDMode DataField | MolName | LabelPrefix | MolNameOrLabelPrefix"
Specify how to generate compound IDs and write to \s-1FP\s0 or \s-1CSV/TSV\s0 text file(s) along with generated
fingerprints for \fI\s-1FP\s0 | text | all\fR values of \fB\-\-output\fR option: use a \fISDFile(s)\fR datafield value;
use molname line from \fISDFile(s)\fR; generate a sequential \s-1ID\s0 with specific prefix; use combination
of both MolName and LabelPrefix with usage of LabelPrefix values for empty molname lines.
.Sp
Possible values: \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR.
Default: \fILabelPrefix\fR.
.Sp
For \fIMolNameAndLabelPrefix\fR value of \fB\-\-CompoundIDMode\fR, molname line in \fISDFile(s)\fR takes
precedence over sequential compound IDs generated using \fILabelPrefix\fR and only empty molname
values are replaced with sequential compound IDs.
.Sp
This is only used for \fICompoundID\fR value of \fB\-\-DataFieldsMode\fR option.
.ie n .IP "\fB\-\-DataFields\fR \fI""FieldLabel1,FieldLabel2,...""\fR" 4
.el .IP "\fB\-\-DataFields\fR \fI``FieldLabel1,FieldLabel2,...''\fR" 4
.IX Item "--DataFields FieldLabel1,FieldLabel2,..."
Comma delimited list of \fISDFiles(s)\fR data fields to extract and write to \s-1CSV/TSV\s0 text file(s) along
with generated fingerprints for \fItext | all\fR values of \fB\-\-output\fR option.
.Sp
This is only used for \fISpecify\fR value of \fB\-\-DataFieldsMode\fR option.
.Sp
Examples:
.Sp
.Vb 2
\&    Extreg
\&    MolID,CompoundName
.Ve
.IP "\fB\-d, \-\-DataFieldsMode\fR \fIAll | Common | Specify | CompoundID\fR" 4
.IX Item "-d, --DataFieldsMode All | Common | Specify | CompoundID"
Specify how data fields in \fISDFile(s)\fR are transferred to output \s-1CSV/TSV\s0 text file(s) along
with generated fingerprints for \fItext | all\fR values of \fB\-\-output\fR option: transfer all \s-1SD\s0
data field; transfer \s-1SD\s0 data files common to all compounds; extract specified data fields;
generate a compound \s-1ID\s0 using molname line, a compound prefix, or a combination of both.
Possible values: \fIAll | Common | specify | CompoundID\fR. Default value: \fICompoundID\fR.
.IP "\fB\-f, \-\-Filter\fR \fIYes | No\fR" 4
.IX Item "-f, --Filter Yes | No"
Specify whether to check and filter compound data in SDFile(s). Possible values: \fIYes or No\fR.
Default value: \fIYes\fR.
.Sp
By default, compound data is checked before calculating fingerprints and compounds containing
atom data corresponding to non-element symbols or no atom data are ignored.
.IP "\fB\-\-FingerprintsLabelMode\fR \fIFingerprintsLabelOnly | FingerprintsLabelWithIDs\fR" 4
.IX Item "--FingerprintsLabelMode FingerprintsLabelOnly | FingerprintsLabelWithIDs"
Specify how fingerprints label is generated in conjunction with \fB\-\-FingerprintsLabel\fR option value:
use fingerprints label generated only by \fB\-\-FingerprintsLabel\fR option value or append atom type
value IDs to \fB\-\-FingerprintsLabel\fR option value.
.Sp
Possible values: \fIFingerprintsLabelOnly | FingerprintsLabelWithIDs\fR. Default value:
\&\fIFingerprintsLabelOnly\fR.
.Sp
This option is only used for \fIFixedSize\fR value of \fB\-e, \-\-AtomTypesSetToUse\fR option during
generation of \fIAtomTypesCount\fR fingerprints and ignored for \fIAtomTypesBits\fR.
.Sp
Atom type IDs appended to \fB\-\-FingerprintsLabel\fR value during \fIFingerprintsLabelWithIDs\fR
values of \fB\-\-FingerprintsLabelMode\fR correspond to fixed number of previously defined
atom types.
.IP "\fB\-\-FingerprintsLabel\fR \fItext\fR" 4
.IX Item "--FingerprintsLabel text"
\&\s-1SD\s0 data label or text file column label to use for fingerprints string in output \s-1SD\s0 or
\&\s-1CSV/TSV\s0 text file(s) specified by \fB\-\-output\fR. Default value: \fIAtomTypesFingerprints\fR.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-i, \-\-IgnoreHydrogens\fR \fIYes | No\fR" 4
.IX Item "-i, --IgnoreHydrogens Yes | No"
Ignore hydrogens during fingerprints generation. Possible values: \fIYes or No\fR.
Default value: \fIYes\fR.
.Sp
For \fIyes\fR value of \fB\-i, \-\-IgnoreHydrogens\fR, any explicit hydrogens are also used for
generation of atom type fingerprints; implicit hydrogens are still ignored.
.IP "\fB\-k, \-\-KeepLargestComponent\fR \fIYes | No\fR" 4
.IX Item "-k, --KeepLargestComponent Yes | No"
Generate fingerprints for only the largest component in molecule. Possible values:
\&\fIYes or No\fR. Default value: \fIYes\fR.
.Sp
For molecules containing multiple connected components, fingerprints can be generated
in two different ways: use all connected components or just the largest connected
component. By default, all atoms except for the largest connected component are
deleted before generation of fingerprints.
.IP "\fB\-m, \-\-mode\fR \fIAtomTypesCount | AtomTypesBits\fR" 4
.IX Item "-m, --mode AtomTypesCount | AtomTypesBits"
Specify type of atom types fingerprints to generate for molecules in \fISDFile(s)\fR.
Possible values: \fIAtomTypesCount or AtomTypesBits\fR. Default value: \fIAtomTypesCount\fR.
.Sp
For \fIAtomTypesCount\fR values of \fB\-m, \-\-mode\fR option, a fingerprint vector string is generated.
The vector string corresponding to \fIAtomTypesCount\fR contains count of atom types.
.Sp
For \fIAtomTypesBits\fR value of \fB\-m, \-\-mode\fR option, a fingerprint bit-vector string containing
zeros and ones indicating presence or absence of atom types is generated.
.Sp
For \fIAtomTypesCount\fR atom types fingerprints, two types of atom types set size can be specified
using \fB\-a, \-\-AtomTypesSetToUse\fR option: \fIArbitrarySize or FixedSize\fR. \fIArbitrarySize\fR corrresponds
to only atom types detected in molecule; \fIFixedSize\fR corresponds to fixed number of atom types
previously defined.
.Sp
For \fIAtomTypesBits\fR atom types fingeprints, only \fIFixedSize\fR is allowed.
.Sp
Combination of \fB\-m, \-\-Mode\fR and \fB\-\-AtomTypesSetToUse\fR along with \fB\-a, \-\-AtomtomIdentifierType\fR
allows generation of following different atom types fingerprints:
.Sp
.Vb 1
\&    Mode                  AtomIdentifierType           AtomTypesSetToUse
\&
\&    AtomTypesCount        AtomicInvariantsAtomTypes    ArbitrarySize [ Default ]
\&
\&    AtomTypesCount        DREIDINGAtomTypes            ArbitrarySize
\&    AtomTypesCount        DREIDINGAtomTypes            FixedSize
\&    AtomTypesBits         DREIDINGAtomTypes            FixedSize
\&
\&    AtomTypesCount        EStateAtomTypes              ArbitrarySize
\&    AtomTypesCount        EStateAtomTypes              FixedSize
\&    AtomTypesBits         EStateAtomTypes              FixedSize
\&
\&    AtomTypesCount        FunctionalClassAtomTypes    ArbitrarySize
\&
\&    AtomTypesCount        MMFF94AtomTypes              ArbitrarySize
\&    AtomTypesCount        MMFF94AtomTypes              FixedSize
\&    AtomTypesBits         MMFF94AtomTypes              FixedSize
\&
\&    AtomTypesCount        SLogPAtomTypes               ArbitrarySize
\&    AtomTypesCount        SLogPAtomTypes               FixedSize
\&    AtomTypesBits         SLogPAtomTypes               FixedSize
\&
\&    AtomTypesCount        SYBYLAtomTypes               ArbitrarySize
\&    AtomTypesCount        SYBYLAtomTypes               FixedSize
\&    AtomTypesBits         SYBYLAtomTypes               FixedSize
\&
\&    AtomTypesCount        TPSAAtomTypes                 FixedSize
\&    AtomTypesBits         TPSAAtomTypes                 FixedSize
\&
\&    AtomTypesCount        UFFAtomTypes                 ArbitrarySize
\&    AtomTypesCount        UFFAtomTypes                 FixedSize
\&    AtomTypesBits         UFFAtomTypes                 FixedSize
.Ve
.Sp
The default is to generate \fIAtomicInvariantAtomTypes\fR fingeprints corresponding to \fIArbitrarySize\fR as
value of \fB\-\-AtomTypesSetToUse\fR option.
.IP "\fB\-\-OutDelim\fR \fIcomma | tab | semicolon\fR" 4
.IX Item "--OutDelim comma | tab | semicolon"
Delimiter for output \s-1CSV/TSV\s0 text file(s). Possible values: \fIcomma, tab, or semicolon\fR
Default value: \fIcomma\fR.
.IP "\fB\-\-output\fR \fI\s-1SD\s0 | \s-1FP\s0 | text | all\fR" 4
.IX Item "--output SD | FP | text | all"
Type of output files to generate. Possible values: \fI\s-1SD, FP,\s0 text, or all\fR. Default value: \fItext\fR.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files.
.IP "\fB\-q, \-\-quote\fR \fIYes | No\fR" 4
.IX Item "-q, --quote Yes | No"
Put quote around column values in output \s-1CSV/TSV\s0 text file(s). Possible values:
\&\fIYes or No\fR. Default value: \fIYes\fR.
.IP "\fB\-r, \-\-root\fR \fIRootName\fR" 4
.IX Item "-r, --root RootName"
New file name is generated using the root: <Root>.<Ext>. Default for new file
names: <SDFileName><AtomTypesFP>.<Ext>. The file type determines <Ext> value.
The sdf, fpf, csv, and tsv <Ext> values are used for \s-1SD, FP,\s0 comma/semicolon, and tab
delimited text files, respectively.This option is ignored for multiple input files.
.IP "\fB\-v, \-\-VectorStringFormat\fR \fIValuesString | IDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString\fR" 4
.IX Item "-v, --VectorStringFormat ValuesString | IDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString"
Format of fingerprints vector string data in output \s-1SD, FP\s0 or \s-1CSV/TSV\s0 text file(s) specified by
\&\fB\-\-output\fR used during <AtomTypesCount> value of \fB\-m, \-\-mode\fR option. Possible values:
\&\fIValuesString, IDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString |
ValuesAndIDsPairsString\fR.
.Sp
Default value during \fIArbitrarySize\fR value of \fB\-e, \-\-AtomTypesSetToUse\fR
option: \fIIDsAndValuesString\fR. Default value during \fIFixedSize\fR value of
\&\fB\-e, \-\-AtomTypesSetToUse\fR option: \fIValuesString\fR.
.Sp
Example of \fI\s-1SD\s0\fR file containing atom types fingerprints string data:
.Sp
.Vb 10
\&    ... ...
\&    ... ...
\&    $$$$
\&    ... ...
\&    ... ...
\&    ... ...
\&    41 44  0  0  0  0  0  0  0  0999 V2000
\&     \-3.3652    1.4499    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
\&    ... ...
\&    2  3  1  0  0  0  0
\&    ... ...
\&    M  END
\&    >  <CmpdID>
\&    Cmpd1
\&
\&    >  <AtomTypesFingerprints>
\&    FingerprintsVector;AtomTypesCount:AtomicInvariantsAtomTypes:ArbitrarySi
\&    ze;10;NumericalValues;IDsAndValuesString;C.X1.BO1.H3 C.X2.BO2.H2 C.X2.B
\&    O3.H1 C.X3.BO3.H1 C.X3.BO4 F.X1.BO1 N.X2.BO2.H1 N.X3.BO3 O.X1.BO1.H1 O.
\&    X1.BO2;2 4 14 3 10 1 1 1 3 2
\&
\&    $$$$
\&    ... ...
\&    ... ...
.Ve
.Sp
Example of \fI\s-1FP\s0\fR file containing atom types fingerprints string data:
.Sp
.Vb 10
\&    #
\&    # Package = MayaChemTools 7.4
\&    # Release Date = Oct 21, 2010
\&    #
\&    # TimeStamp = Fri Mar 11 14:28:07 2011
\&    #
\&    # FingerprintsStringType = FingerprintsVector
\&    #
\&    # Description = AtomTypesCount:AtomicInvariantsAtomTypes:ArbitrarySize
\&    # VectorStringFormat = IDsAndValuesString
\&    # VectorValuesType = NumericalValues
\&    #
\&    Cmpd1 10;C.X1.BO1.H3 C.X2.BO2.H2 C.X2.BO3.H1 C.X3.BO3.H1 C.X3.BO4 F...
\&    Cmpd2 9;C.X1.BO1.H3 C.X2.BO2.H2 C.X3.BO3.H1 C.X3.BO4 N.X1.BO1.H2 N....
\&    ... ...
\&    ... ..
.Ve
.Sp
Example of \s-1CSV \s0\fIText\fR file atom types containing fingerprints string data:
.Sp
.Vb 8
\&    "CompoundID","AtomTypesFingerprints"
\&    "Cmpd1","FingerprintsVector;AtomTypesCount:AtomicInvariantsAtomTypes:Ar
\&    bitrarySize;10;NumericalValues;IDsAndValuesString;C.X1.BO1.H3 C.X2.BO2.
\&    H2 C.X2.BO3.H1 C.X3.BO3.H1 C.X3.BO4 F.X1.BO1 N.X2.BO2.H1 N.X3.BO3 O.X1.
\&    BO1.H1 O.X1.BO2;2 4 14 3 10 1 1 1 3 2"
\&    O.X1.BO2;3 3 6 3 1 1 2 2 2"
\&    ... ...
\&    ... ...
.Ve
.Sp
Examples:
.Sp
.Vb 3
\&    FingerprintsVector;AtomTypesCount:EStateAtomTypes:ArbitrarySize;11;Num
\&    ericalValues;IDsAndValuesString;aaCH aasC aasN dO dssC sCH3 sF sOH ssC
\&    H2 ssNH sssCH;14 8 1 2 2 2 1 3 4 1 3
\&
\&    FingerprintsVector;AtomTypesCount:SYBYLAtomTypes:ArbitrarySize;9;Numer
\&    icalValues;IDsAndValuesString;C.2 C.3 C.ar F N.am N.ar O.2 O.3 O.co2;2
\&    9 22 1 1 1 1 2 2
\&
\&    FingerprintsVector;AtomTypesCount:SYBYLAtomTypes:FixedSize;44;OrderedN
\&    umericalValues;IDsAndValuesString;C.3 C.2 C.1 C.ar C.cat N.3 N.2 N.1 N
\&    .ar N.am N.pl3 N.4 O.3 O.2 O.co2 S.3 S.2 S.o S.o2 P.3 F Cl Br I ANY HA
\&    L HET Li Na Mg Al Si K Ca Cr.th Cr.oh Mn Fe Co.oh Cu Zn Se Mo Sn;9 2 0
\&    22 0 0 0 0 1 1 0 0 2 1 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
\&    0 0 0 0 0 0 0
.Ve
.IP "\fB\-w, \-\-WorkingDir\fR \fIDirName\fR" 4
.IX Item "-w, --WorkingDir DirName"
Location of working directory. Default: current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To generate atomic invariants atom types count fingerprints of arbitrary size in vector
string format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 1
\&    % AtomTypesFingerprints.pl \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate functional class atom types count fingerprints of arbitrary size in vector
string format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a FunctionalClassAtomTypes
\&      \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate E\-state atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a EStateAtomTypes
\&      \-\-AtomTypesSetToUse ArbitrarySize \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate E\-state atom types count fingerprints of fixed size in vector string
with IDsAndValues format and create a SampleATFP.csv file containing sequential
compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 3
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a EStateAtomTypes
\&      \-\-AtomTypesSetToUse FixedSize \-v IDsAndValuesString
\&      \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate E\-state atom types bits fingerprints of fixed size in bit-vector string
format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesBits \-a EStateAtomTypes
\&      \-\-AtomTypesSetToUse FixedSize \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-AtomTypesSetToUse ArbitrarySize \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of fixed size in vector string
format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-AtomTypesSetToUse FixedSize \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of fixed size in vector string
with IDsAndValues format and create a SampleATFP.csv file containing sequential
compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 3
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-AtomTypesSetToUse FixedSize \-v IDsAndValuesString
\&      \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types bits fingerprints of fixed size in bit-vector string
format and create a SampleATFP.csv file containing sequential compound IDs along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesBits \-a MMFF94AtomTypes
\&      \-\-AtomTypesSetToUse FixedSize \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing compound \s-1ID\s0 from molecule
name line along with fingerprints vector strings data, type
.PP
.Vb 3
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-DataFieldsMode CompoundID \-\-CompoundIDMode MolName
\&      \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing compound IDs using specified
data field along with fingerprints vector strings data, type:
.PP
.Vb 3
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-DataFieldsMode CompoundID \-\-CompoundIDMode DataField \-\-CompoundID
\&      Mol_ID \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing compound \s-1ID\s0 using combination
of molecule name line and an explicit compound prefix along with fingerprints vector
strings data, type:
.PP
.Vb 3
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-DataFieldsMode CompoundID \-\-CompoundIDMode MolnameOrLabelPrefix
\&      \-\-CompoundID Cmpd \-\-CompoundIDLabel MolID \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing specific data fields columns along
with fingerprints vector strings data, type:
.PP
.Vb 3
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&      \-\-DataFieldsMode Specify \-\-DataFields Mol_ID \-r SampleATFP
\&      \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create a SampleATFP.csv file containing common data fields columns along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&     \-\-DataFieldsMode Common \-r SampleATFP \-o Sample.sdf
.Ve
.PP
To generate \s-1MMFF94\s0 atom types count fingerprints of arbitrary size in vector string
format and create SampleATFP.sdf,  SampleATFP.fpf and  SampleATFP.csv files containing
all data fields columns in \s-1CSV\s0 file along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % AtomTypesFingerprints.pl \-m AtomTypesCount \-a MMFF94AtomTypes
\&     \-\-DataFieldsMode All \-\-output all \-r SampleATFP \-o Sample.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
InfoFingerprintsFiles.pl, SimilarityMatricesFingerprints.pl, AtomNeighborhoodsFingerprints.pl,
ExtendedConnectivityFingerprints.pl, MACCSKeysFingeprints.pl, PathLengthFingerprints.pl,
TopologicalAtomPairsFingerprints.pl, TopologicalAtomTorsionsFingerprints.pl,
TopologicalPharmacophoreAtomPairsFingerprints.pl, TopologicalPharmacophoreAtomTripletsFingerprints.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
