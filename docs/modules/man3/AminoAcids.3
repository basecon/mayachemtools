.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AminoAcids 1"
.TH AminoAcids 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AminoAcids
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use AminoAcids;
.PP
use AminoAcids qw(:all);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBAminoAcids\fR module provides the following functions:
.PP
GetAminoAcidPropertiesData, GetAminoAcidPropertiesNames, GetAminoAcid<PropertyName>,
GetAminoAcids, IsAminoAcid, IsAminoAcidProperty
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\fBGetAminoAcidPropertiesData\fR" 4
.IX Item "GetAminoAcidPropertiesData"
.Vb 1
\&    $DataHashRef = GetAminoAcidPropertiesData($AminoAcidID);
.Ve
.Sp
Returns a reference to hash containing property names and values for a specified
amino acid.
.IP "\fBGetAminoAcidPropertiesNames\fR" 4
.IX Item "GetAminoAcidPropertiesNames"
.Vb 2
\&    @Names = GetAminoAcidPropertiesNames([$Mode]);
\&    $NamesRef = GetAminoAcidPropertiesNames([$Mode]);
.Ve
.Sp
Returns an array or a reference to an array containing names of amino acids
properties. Order of amino acids properties is controlled by optional parameter
\&\fIMode\fR. Possible values for \fIMode\fR: \fIAlphabetical or  ByGroup\fR; Default: \fIByGroup\fR
.IP "\fBGetAminoAcidPropertyName\fR" 4
.IX Item "GetAminoAcidPropertyName"
.Vb 1
\&    $Value = GetAminoAcid<PropertyName>($AminoAcidID);
.Ve
.Sp
Returns amino acid property value for a specified amino acid. These functions are
not defined in this modules; these are implemented on the fly using Perl's \s-1AUTOLOAD\s0
funcion. Here is the list of known amino acids \fIproperty names\fR: DNACodons, RNACodons,
AcidicBasic, PolarNonpolar, Charged, Aromatic, HydrophobicHydophilic, IsoelectricPoint,
pKCOOH, pKNH3+, ChemicalFormula, MolecularWeight, ExactMass, ChemicalFormulaMinusH2O,
MolecularWeightMinusH2O(18.01524), ExactMassMinusH2O(18.01056), vanderWaalsVolume,
\&\f(CW%AccessibleResidues\fR, \f(CW%BuriedResidues\fR, AlphaHelixChouAndFasman,
AlphaHelixDeleageAndRoux, AlphaHelixLevitt, AminoAcidsComposition,
AminoAcidsCompositionInSwissProt, AntiparallelBetaStrand, AverageAreaBuried, AverageFlexibility,
BetaSheetChouAndFasman, BetaSheetDeleageAndRoux, BetaSheetLevitt,
BetaTurnChouAndFasman, BetaTurnDeleageAndRoux, BetaTurnLevitt, Bulkiness,
CoilDeleageAndRoux, HPLCHFBARetention, HPLCRetentionAtpH2.1, HPLCRetentionAtpH7.4,
HPLCTFARetention, HydrophobicityAbrahamAndLeo, HydrophobicityBlack,
HydrophobicityBullAndBreese, HydrophobicityChothia, HydrophobicityEisenbergAndOthers,
HydrophobicityFauchereAndOthers, HydrophobicityGuy, HydrophobicityHPLCAtpH3.4Cowan,
HydrophobicityHPLCAtpH7.5Cowan, HydrophobicityHPLCParkerAndOthers,
HydrophobicityHPLCWilsonAndOthers, HydrophobicityHoppAndWoods, HydrophobicityJanin,
HydrophobicityKyteAndDoolittle, HydrophobicityManavalanAndOthers,
HydrophobicityMiyazawaAndOthers, HydrophobicityOMHSweetAndOthers,
HydrophobicityRaoAndArgos, HydrophobicityRfMobility, HydrophobicityRoseAndOthers,
HydrophobicityRoseman, HydrophobicityWellingAndOthers, HydrophobicityWolfendenAndOthers,
ParallelBetaStrand, PolarityGrantham, PolarityZimmerman, RatioHeteroEndToSide,
RecognitionFactors, Refractivity, RelativeMutability, TotalBetaStrand, LinearStructure,
LinearStructureAtpH7.4
.IP "\fBGetAminoAcids\fR" 4
.IX Item "GetAminoAcids"
.Vb 2
\&    $NamesRef = GetAminoAcids([$NameType]);
\&    (@Names) = GetAminoAcids([$NameType]);
.Ve
.Sp
Returns an array or a reference to an array containing names of amino acids
as one letter code, three letter code, or amino acid name controlled by optional
parameter \f(CW$NameType\fR. By default, amino acids names are returned as three
letter code. Possible values for \fINameType\fR: \fIThreeLetterCode, OneLetterCode, or
AminoAcid\fR.
.IP "\fBIsAminoAcid\fR" 4
.IX Item "IsAminoAcid"
.Vb 1
\&    $Status = IsAminoAcid($AminoAcidID);
.Ve
.Sp
Returns a flag indicating whether or not its a known amino acid \s-1ID.\s0
.IP "\fBIsAminoAcidProperty\fR" 4
.IX Item "IsAminoAcidProperty"
.Vb 1
\&    $Status = IsAminoAcid($PropertyName);
.Ve
.Sp
Returns a flag indicating whether or not its a known amino acid property name.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
NucleicAcids.pm, PeriodicTable.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
