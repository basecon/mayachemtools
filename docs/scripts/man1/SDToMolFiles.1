.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SDToMolFiles 1"
.TH SDToMolFiles 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SDToMolFiles.pl \- Generate MDLMOL file(s) from SD file(s)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
SDToMolFiles.pl SDFile(s)...
.PP
SDToMolFiles.pl [\fB\-d, \-\-DataField\fR DataFieldName]
[\fB\-m, \-\-mode\fR DataField | MolName | RootPrefix] [\fB\-h, \-\-help\fR]
[\fB\-o, \-\-overwrite\fR] [\fB\-r, \-\-root\fR rootname]
[\fB\-w, \-\-workingdir\fR dirname] SDFile(s)...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate \s-1MDLMOL\s0 file(s) from \fISDFile(s)\fR. All header data labels and values in
SDFile(s) are simply ignored; other appopriate data from SDFile(s) is transferred to \s-1MDLMOL\s0
files. Multiple \fISDFile(s)\fR names are separated by spaces. The valid file extensions are
\&\fI.sdf\fR and \fI.sd\fR. All other file names are ignored. All the \s-1SD\s0 files in a current
directory can be specified either by \fI*.sdf\fR or the current directory name.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-d, \-\-DataField\fR \fIDataFieldName\fR" 4
.IX Item "-d, --DataField DataFieldName"
Specify \fISDFile(s)\fR datafield label name whose value is used for generation of \s-1MDLMOL\s0
file names. Default value: \fINone\fR.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-m, \-\-mode\fR \fIDataField | MolName | RootPrefix\fR" 4
.IX Item "-m, --mode DataField | MolName | RootPrefix"
Specify how to generate \s-1MDLMOL\s0 file names: use a \fISDFile(s)\fR datafield value; use
molname line from \fISDFile(s)\fR; generate a sequential \s-1ID\s0 using root prefix specified
by \fB\-r, \-\-root\fR option.
.Sp
Possible values: \fIDataField | MolName | RootPrefix | RootPrefix\fR.
Default: \fIRootPrefix\fR.
.Sp
For empty \fIMolName\fR and \fIDataField\fR values during these specified modes, file
name is automatically generated using \fIRootPrefix\fR.
.Sp
For \fIRootPrefix\fR value of \fB\-m, \-\-mode\fR option, \s-1MDLMOL\s0 file names are generated
using by appending compound record number to value of \fB\-r, \-\-root\fR option. For
example: \fIRootName\fRCmd<RecordNumber>.mol.
.Sp
Allowed characters in file names are: a\-zA\-Z0\-9_. All other characters in datafield
values, molname line, and root prefix are ignore during generation of file names.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files.
.IP "\fB\-r, \-\-root\fR \fIrootname\fR" 4
.IX Item "-r, --root rootname"
Specify root name to used during \fIRootPrefix\fR \fB\-m, \-\-mode\fR option value.
New \s-1MDLMOL\s0 file names are generated using the root: <Root>Cmpd<RecordNumber>.mol
Default for new file names: <InitialSDFileName>Cmpd<RecordNumber>.mol. This option
is ignored for multiple input files.
.IP "\fB\-w, \-\-workingdir\fR \fIdirname\fR" 4
.IX Item "-w, --workingdir dirname"
Location of working directory. Default: current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To generate \s-1MDLMOL\s0 files from Sample1*.sdf and Sample2*.sd files, type:
.PP
.Vb 1
\&    % SDToMolFiles.pl \-o Sample1*.sdf Sample2*.sd
.Ve
.PP
To generate Sample*.mol files from Sample1.sdf, type:
.PP
.Vb 1
\&    % SDToMolFiles.pl \-r Sample \-o Sample1.sdf
.Ve
.PP
To generate \s-1MOL\s0 files from Sample1.sdf using molname line data for generating
\&\s-1MOL\s0 file names, type:
.PP
.Vb 1
\&    % SDToMolFiles.pl \-m MolName \-r Sample \-o Sample1.sdf
.Ve
.PP
To generate \s-1MOL\s0 files from Sample1.sdf using a specific data field values for
generating \s-1MOL\s0 file names, type:
.PP
.Vb 2
\&    % SDToMolFiles.pl \-m DataField \-\-DataField MolID \-r Sample
\&      \-o Sample1.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
InfoSDFiles.pl, MolFilesToSD.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
