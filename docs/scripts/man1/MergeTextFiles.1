.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MergeTextFiles 1"
.TH MergeTextFiles 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MergeTextFiles.pl \- Merge multiple CSV or TSV text files into a single text file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
MergeTextFiles.pl TextFiles...
.PP
MergeTextFiles.pl [\fB\-h, \-\-help\fR] [\fB\-\-indelim\fR comma | semicolon] [\fB\-c, \-\-columns\fR colnum,...;... | collabel,...;...]
[\fB\-k, \-\-keys\fR colnum,...;... | collabel,...;...] [\fB\-m, \-\-mode\fR colnum | collabel]
[\fB\-o, \-\-overwrite\fR] [\fB\-\-outdelim\fR comma | tab | semicolon] [\fB\-q, \-\-quote\fR yes | no]
[\fB\-r, \-\-root\fR rootname] [\fB\-s, \-\-startcol\fR colnum | collabel] [\fB\-\-startcolmode\fR before | after]
[\fB\-w, \-\-workingdir\fR dirname] TextFiles...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Merge multiple \s-1CSV\s0 or \s-1TSV \s0\fITextFiles\fR into first \fITextFile\fR to generate a single
text file. Unless \fB\-k \-\-keys\fR option is used, data rows from other \fITextFiles\fR
are added to first \fITextFile\fR in a sequential order, and the number of rows in first
\&\fITextFile\fR is used to determine how many rows of data are added from other
\&\fITextFiles\fR.
.PP
Multiple \fITextFiles\fR names are separated by space. The valid file extensions are \fI.csv\fR and
\&\fI.tsv\fR for comma/semicolon and tab delimited text files respectively. All other file names
are ignored. All the text files in a current directory can be specified by \fI*.csv\fR,
\&\fI*.tsv\fR, or the current directory name. The \fB\-\-indelim\fR option determines the
format of \fITextFiles\fR. Any file which doesn't correspond to the format indicated
by \fB\-\-indelim\fR option is ignored.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-\-indelim\fR \fIcomma | semicolon\fR" 4
.IX Item "--indelim comma | semicolon"
Input delimiter for \s-1CSV \s0\fITextFile(s)\fR. Possible values: \fIcomma or semicolon\fR.
Default value: \fIcomma\fR. For \s-1TSV\s0 files, this option is ignored and \fItab\fR is used as a
delimiter.
.IP "\fB\-c, \-\-columns\fR \fIcolnum,...;... | collabel,...;...\fR" 4
.IX Item "-c, --columns colnum,...;... | collabel,...;..."
This value is mode specific. It is a list of columns to merge into first
text file specified by column numbers or labels for each text file
delimited by \*(L";\*(R". All specified text files are merged into first text file.
.Sp
Default value: \fIall;all;...\fR. By default, all columns from specified text files are
merged into first text file.
.Sp
For \fIcolnum\fR mode, input value format is: \fIcolnum,...;colnum,...;...\fR. Example:
.Sp
.Vb 1
\&    "1,2;1,3,4;7,8,9"
.Ve
.Sp
For \fIcollabel\fR mode, input value format is: \fIcollabel,...;collabel,...;...\fR. Example:
.Sp
.Vb 1
\&    "MW,SumNO;SumNHOH,ClogP,PSA;MolName,Mol_Id,Extreg"
.Ve
.IP "\fB\-k, \-\-keys\fR \fIcolnum,...;... | collabel,...;...\fR" 4
.IX Item "-k, --keys colnum,...;... | collabel,...;..."
This value is mode specific. It specifies column keys to use for merging
all specified text files into first text file. The column keys are specified by
column numbers or labels for each text file delimited by \*(L";\*(R".
.Sp
By default, data rows from text files are merged into first file in the order they appear.
.Sp
For \fIcolnum\fR mode, input value format is:\fIcolkeynum, colkeynum;...\fR. Example:
.Sp
.Vb 1
\&    "1;3;7"
.Ve
.Sp
For \fIcollabel\fR mode, input value format is:\fIcolkeylabel, colkeylabel;...\fR. Example:
.Sp
.Vb 1
\&    "Mol_Id;Mol_Id;Cmpd_Id"
.Ve
.IP "\fB\-m, \-\-mode\fR \fIcolnum | collabel\fR" 4
.IX Item "-m, --mode colnum | collabel"
Specify how to merge text files: using column numbers or column labels.
Possible values: \fIcolnum or collabel\fR. Default value: \fIcolnum\fR.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files.
.IP "\fB\-\-outdelim\fR \fIcomma | tab | semicolon\fR" 4
.IX Item "--outdelim comma | tab | semicolon"
Output text file delimiter. Possible values: \fIcomma, tab, or semicolon\fR
Default value: \fIcomma\fR.
.IP "\fB\-q, \-\-quote\fR \fIyes | no\fR" 4
.IX Item "-q, --quote yes | no"
Put quotes around column values in output text file. Possible values: \fIyes or
no\fR. Default value: \fIyes\fR.
.IP "\fB\-r, \-\-root\fR \fIrootname\fR" 4
.IX Item "-r, --root rootname"
New text file name is generated using the root: <Root>.<Ext>. Default file
name: <FirstTextFileName>1To<Count>Merged.<Ext>. The csv, and tsv
<Ext> values are used for comma/semicolon, and tab delimited text files
respectively.
.IP "\fB\-s, \-\-startcol\fR \fIcolnum | collabel\fR" 4
.IX Item "-s, --startcol colnum | collabel"
This value is mode specific. It specifies the column in first text file which is
used for start merging other text files.For \fIcolnum\fR mode, specify column
number and for \fIcollabel\fR mode, specify column label.
.Sp
Default value: \fIlast\fR. Start merge after the last column.
.IP "\fB\-\-startcolmode\fR \fIbefore | after\fR" 4
.IX Item "--startcolmode before | after"
Start the merge before or after the \fB\-s, \-\-startcol\fR value. Possible values: \fIbefore or after\fR
Default value: \fIafter\fR.
.IP "\fB\-w, \-\-workingdir\fR \fIdirname\fR" 4
.IX Item "-w, --workingdir dirname"
Location of working directory. Default: current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To merge Sample2.csv and Sample3.csv into Sample1.csv and generate
NewSample.csv, type:
.PP
.Vb 2
\&    % MergeTextFiles.pl \-r NewSample \-o Sample1.csv Sample2.csv
\&      Sample3.csv
.Ve
.PP
To merge all Sample*.tsv and generate NewSample.tsv file, type:
.PP
.Vb 2
\&    % MergeTextFiles.pl \-r NewSample \-\-indelim comma \-\-outdelim tab \-o
\&      Sample*.csv
.Ve
.PP
To merge column numbers \*(L"1,2\*(R" and \*(L"3,4,5\*(R" from Sample2.csv and Sample3.csv
into Sample1.csv starting before column number 3 in Sample1.csv and to generate
NewSample.csv without quoting column data, type:
.PP
.Vb 3
\&    % MergeTextFiles.pl \-s 3 \-\-startcolmode before \-r NewSample \-q no
\&      \-m colnum \-c "all;1,2;3,4,5" \-o Sample1.csv Sample2.csv
\&      Sample3.csv
.Ve
.PP
To merge column \*(L"Mol_ID,Formula,MolWeight\*(R" and \*(L"Mol_ID,NAME,ChemBankID\*(R"
from Sample2.csv and Sample3.csv into Sample1.csv using \*(L"Mol_ID\*(R" as a column keys
starting after the last column and to generate NewSample.tsv, type:
.PP
.Vb 3
\&    % MergeTextFiles.pl \-r NewSample \-\-outdelim tab \-k "Mol_ID;Mol_ID;
\&      Mol_ID" \-m collabel \-c "all;Mol_ID,Formula,MolWeight;Mol_ID,NAME,
\&      ChemBankID" \-o Sample1.csv Sample2.csv Sample3.csv
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
JoinTextFiles.pl, MergeTextFilesWithSD.pl, ModifyTextFilesFormat.pl, SplitTextFiles.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
