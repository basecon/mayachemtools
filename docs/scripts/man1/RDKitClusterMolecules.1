.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RDKitClusterMolecules 1"
.TH RDKitClusterMolecules 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
RDKitClusterMolecules.py \- Cluster molecules using 2D fingerprints
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
RDKitClusterMolecules.py [\fB\-\-butinaSimilarityCutoff\fR <number>]  [\fB\-\-butinaReordering\fR <yes or no>]
[\fB\-\-clusteringMethod\fR <Butina, Centroid, CLink...>] [\fB\-\-fingerprints\fR <MACCS166Keys, Morgan, PathLength...> ]
[\fB\-\-fingerprintsType\fR <IntVect, BitVect, or Auto>] [\fB\-\-infileParams\fR <Name,Value,...>]
[\fB\-\-numClusters\fR <number>] [\fB\-\-outfileMode\fR <SingleFile or MultipleFiles>]
[ \fB\-\-outfileParams\fR <Name,Value,...> ] [\fB\-\-overwrite\fR] [\fB\-\-paramsFingerprints\fR <Name,Value,...>]
[\fB\-\-similarityMetric\fR <Dice, Tanimoto...>] [\fB\-w\fR <dir>] \fB\-i\fR <infile> \fB\-o\fR <outfile>
.PP
RDKitClusterMolecules.py \fB\-h\fR | \fB\-\-help\fR | \fB\-e\fR | \fB\-\-examples\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Cluster molecules based on a variety of 2D fingerprints using Butina [ Ref 136 ] or any
other available hierarchical clustering methodology and write them to output file(s).
.PP
The supported input file formats are: Mol (.mol), \s-1SD \s0(.sdf, .sd), \s-1SMILES \s0(.smi,
\&.txt, .csv, .tsv)
.PP
The supported output file formats are: \s-1SD \s0(.sdf, .sd), \s-1SMILES \s0(.smi), \s-1CSV/TSV
\&\s0(.csv, .tsv, .txt)
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-b, \-\-butinaSimilarityCutoff\fR <number>  [default: 0.55]" 4
.IX Item "-b, --butinaSimilarityCutoff <number> [default: 0.55]"
Similarity cutoff to use during Butina clustering. The molecule pairs with
similarity value greater than specified value or distance less than '1 \- specified
value' are considered neighbors. This value is only used during 'Butina' value
of '\-c, \-\-clusteringMethod' option and determines the number of clusters
during the clustering of molecules. It is ignored for all other clustering methods.
.IP "\fB\-\-butinaReordering\fR <yes or no>  [default: no]" 4
.IX Item "--butinaReordering <yes or no> [default: no]"
Update number of neighbors for unassigned molecules after creating a new
cluster in order to insure that the molecule with the largest number of
unassigned neighbors is selected as the next cluster center.
.IP "\fB\-c, \-\-clusteringMethod\fR <Butina, Centroid, CLink...>  [default: Butina]" 4
.IX Item "-c, --clusteringMethod <Butina, Centroid, CLink...> [default: Butina]"
Clustering method to use for clustering molecules. Supported values:
Butina, Centroid, CLink, Gower, McQuitty, SLink, \s-1UPGMA,\s0 Ward.
Butina is an unsupervised database clustering method to automatically
cluster small and large data sets. All other clustering methods correspond
to hierarchical clustering and require a priori specification of number of
clusters to be generated.
.IP "\fB\-f, \-\-fingerprints\fR <MACCS166Keys, Morgan, PathLength...>  [default: Morgan]" 4
.IX Item "-f, --fingerprints <MACCS166Keys, Morgan, PathLength...> [default: Morgan]"
Fingerprints to use for calculating similarity/distance between molecules.
Supported values: AtomPairs, MACCS166Keys, Morgan, MorganFeatures, PathLength,
TopologicalTorsions. The PathLength fingerprints are Daylight like fingerprints.
The Morgan and MorganFeature fingerprints are circular fingerprints, corresponding
Scitegic's Extended Connectivity Fingerprints (\s-1ECFP\s0) and Features Connectivity
Fingerprints (\s-1FCFP\s0). The values of default parameters for generating fingerprints
can be modified using '\-p, \-\-paramsFingerprints' option.
.IP "\fB\-\-fingerprintsType\fR <IntVect, BitVect, or auto>  [default: auto]" 4
.IX Item "--fingerprintsType <IntVect, BitVect, or auto> [default: auto]"
Fingerprints type to generate for calculating similarity. Supported values:
IntVect, BitVect, Auto.
.Sp
The following default fingerprints type are automatically generated for
available fingerprints, based on the value of similarty metric:
.Sp
AtomPairs              Tanimoto|Dice: IntVect     All Others: BitVect
MACCS166Keys           All: BitVect
Morgan                 Tanimoto|Dice: IntVect     All Others: BitVect
MorganFeatures         Tanimoto|Dice: IntVect     All Others: BitVect
PathLength             All: BitVect
TopologicalTorsions    Tanimoto|Dice: IntVect     All Others: BitVect
.Sp
The Dice and Tanimoto similarity functions available in RDKit are able to
handle fingerprints corresponding to both IntVect and BitVect. All other
similarity functions, however, expect BitVect fingerprints to calculate
pairwise similarity. Consequently, BitVect fingerprints, instead of
default IntVect fingerprints, are generated for AtomPairs, Morgan,
MorganFeatures, and TopologicalTorsions during the calculation
of similarity using all other similarity functions.
.Sp
The IntVect fingerprints type is not available for MACCS166Keys and
Pathlength fingerprints. In addition, IntVect fingerprints type is only
valid for Tanimoto or Dice value of ' \-s, \-\-similarityMetric' option. The
BitVect fingerprints type is valid for all values of '' \-s, \-\-similarityMetric'
option.
.IP "\fB\-e, \-\-examples\fR" 4
.IX Item "-e, --examples"
Print examples.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-i, \-\-infile\fR <infile>" 4
.IX Item "-i, --infile <infile>"
Input file name.
.IP "\fB\-\-infileParams\fR <Name,Value,...>  [default: auto]" 4
.IX Item "--infileParams <Name,Value,...> [default: auto]"
A comma delimited list of parameter name and value pairs for reading 
molecules from files. The supported parameter names for different file
formats, along with their default values, are shown below:
.Sp
.Vb 3
\&    SD, MOL: removeHydrogens,yes,sanitize,yes,strictParsing,yes
\&    SMILES: smilesColumn,1,smilesNameColumn,2,smilesDelimiter,space,
\&        smilesTitleLine,auto,sanitize,yes
.Ve
.Sp
Possible values for smilesDelimiter: space, comma or tab.
.IP "\fB\-n, \-\-numClusters\fR <number>  [default: 10]" 4
.IX Item "-n, --numClusters <number> [default: 10]"
Number of clusters to generate during hierarchical clustering. This option is
ignored for 'Butina' value of '\-c, \-\-clusteringMethod' option.
.IP "\fB\-o, \-\-outfile\fR <outfile>" 4
.IX Item "-o, --outfile <outfile>"
Output file name.
.IP "\fB\-\-outfileMode\fR <SingleFile or MultipleFiles>  [default: SingleFile]" 4
.IX Item "--outfileMode <SingleFile or MultipleFiles> [default: SingleFile]"
Write out a single file containing molecule clusters or generate an individual file
for each cluster. Possible values: SingleFile or MultipleFiles. The molecules are
grouped for each cluster before they are written to output file(s) along with
appropriate cluster numbers. The cluster number is also appended to output
file names during generation of multiple output files.
.IP "\fB\-\-outfileParams\fR <Name,Value,...>  [default: auto]" 4
.IX Item "--outfileParams <Name,Value,...> [default: auto]"
A comma delimited list of parameter name and value pairs for writing
molecules to files. The supported parameter names for different file
formats, along with their default values, are shown below:
.Sp
.Vb 3
\&    SD: compute2DCoords,auto,kekulize,no
\&    SMILES: kekulize,no,smilesDelimiter,space, smilesIsomeric,yes,
\&        smilesTitleLine,yes
.Ve
.Sp
Default value for compute2DCoords: yes for \s-1SMILES\s0 input file; no for all other
file types. The kekulize and smilesIsomeric parameters are also used during
generation of \s-1SMILES\s0 strings for \s-1CSV/TSV\s0 files.
.IP "\fB\-\-overwrite\fR" 4
.IX Item "--overwrite"
Overwrite existing files.
.IP "\fB\-p, \-\-paramsFingerprints\fR <Name,Value,...>  [default: auto]" 4
.IX Item "-p, --paramsFingerprints <Name,Value,...> [default: auto]"
Parameter values to use for generating fingerprints. The default values
are dependent on the value of '\-f, \-\-fingerprints' option. In general, it is a
comma delimited list of parameter name and value pairs for the name of
fingerprints specified using '\-f, \-\-fingerprints' option. The supported
parameter names along with their default values for valid fingerprints
names are shown below:
.Sp
.Vb 6
\&    AtomPairs: minLength,1 ,maxLength,30, useChirality,No,
\&        fpSize, 2048, bitsPerHash,4
\&    Morgan: radius,2, useChirality,No, fpSize, 2048
\&    MorganFeatures:   radius,2, useChirality,No, fpSize, 2048
\&    PathLength: minPath,1, maxPath,7, fpSize, 2048, bitsPerHash,2
\&    TopologicalTorsions: useChirality,No, fpSize, 2048, bitsPerHash,4
.Ve
.Sp
The fpSize and bitsPerHash are only used for BitVect fingerprints type
specified using '\-\-fingerprintsType' option.
.IP "\fB\-s, \-\-similarityMetric\fR <Dice, Tanimoto...>  [default: Tanimoto]" 4
.IX Item "-s, --similarityMetric <Dice, Tanimoto...> [default: Tanimoto]"
Similarity metric to use for calculating similarity/distance between molecules.
Possible values: BraunBlanquet, Cosine, Dice, Kulczynski, RogotGoldberg,
Russel, Sokal, Tanimoto.
.IP "\fB\-w, \-\-workingdir\fR <dir>" 4
.IX Item "-w, --workingdir <dir>"
Location of working directory which defaults to the current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To cluster molecules using Butina methodology at a similarity cutoff of 0.55
with automatic determination of number of clusters, Tanimoto similarity
metric corresponding to Morgan fingerprints with radius of 2, and write out
a single \s-1SMILES\s0 file containing clustered molecules along with cluster number
for each molecule, type:
.PP
.Vb 1
\&    % RDKitClusterMolecules.py  \-i Sample.smi \-o SampleOut.smi
.Ve
.PP
To cluster molecules using Butina methodology at a similarity cutoff of 0.55
with automatic determination of number of clusters, Tanimoto similarity
metric corresponding to Morgan fingerprints with radius of 2 and type
BitVect, fingerprint BitVect size of 4096, and write out a single \s-1SMILES\s0 file
containing clustered molecules along with cluster number for each molecule,
type:
.PP
.Vb 2
\&    % RDKitClusterMolecules.py  \-f Morgan  \-\-fingerprintsType  BitVect
\&      \-p "fpSize,4096" \-s Tanimoto \-i Sample.smi \-o SampleOut.smi
.Ve
.PP
To cluster molecules using Butina methodology at similarity cutoff of 0.45
with automatic determination of number of clusters, Dice similarity metric
corresponding to Morgan fingerprints with radius of 2, and write out multiple
\&\s-1SD\s0 files containing clustered molecules for each cluster, type:
.PP
.Vb 2
\&    % RDKitClusterMolecules.py  \-b 0.45 \-s Dice \-\-outfileMode MultipleFiles
\&      \-i Sample.smi \-o SampleOut.sdf
.Ve
.PP
To cluster molecules using Ward hierarchical methodology to generate 15
clusters, Dice similarity metric corresponding to Pathlength fingerprints with 
path length between 1 and 7,  and write out a single \s-1TSV\s0 file for clustered
molecules along with cluster numner for each molecule, type:
.PP
.Vb 2
\&    % RDKitClusterMolecules.py  \-c Ward \-f PathLength \-n 15
\&      \-p \*(AqminPath,1, maxPath,7\*(Aq \-i Sample.sdf \-o SampleOut.tsv
.Ve
.PP
To cluster molecules using Centroid hierarchical methodology to generate 5
clusters, Dice similarity metric corresponding to MACCS166Keys fingerprints
for molecules in a \s-1SMILES CSV\s0 file, \s-1SMILES\s0 strings in column 1, name in
column 2, and write out a single \s-1SD\s0 file for clustered molecules along with
cluster numner for each molecule, type:
.PP
.Vb 4
\&    % RDKitClusterMolecules.py  \-c Centroid \-f MACCS166Keys \-\-infileParams
\&      "smilesDelimiter,comma,smilesTitleLine,yes,smilesColumn,1,
\&      smilesNameColumn,2" \-\-outfileParams "compute2DCoords,yes"
\&      \-i SampleSMILES.csv \-o SampleOut.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud(msud@san.rr.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
RDKitConvertFileFormat.py, RDKitPickDiverseMolecules.py, RDKitSearchFunctionalGroups.py,
RDKitSearchSMARTS.py
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
The functionality available in this script is implemented using RDKit, an
open source toolkit for cheminformatics developed by Greg Landrum.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option) any
later version.
