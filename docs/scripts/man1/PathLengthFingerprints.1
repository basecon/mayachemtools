.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PathLengthFingerprints 1"
.TH PathLengthFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PathLengthFingerprints.pl \- Generate atom path length based fingerprints for SD files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
PathLengthFingerprints.pl SDFile(s)...
.PP
PathLengthFingerprints.pl [\fB\-\-AromaticityModel\fR \fIAromaticityModelType\fR]
[\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes\fR]
[\fB\-\-AtomicInvariantsToUse\fR \fI\*(L"AtomicInvariant1,AtomicInvariant2...\*(R"\fR]
[\fB\-\-FunctionalClassesToUse\fR \fI\*(L"FunctionalClass1,FunctionalClass2...\*(R"\fR]
[\fB\-\-BitsOrder\fR \fIAscending | Descending\fR] [\fB\-b, \-\-BitStringFormat\fR \fIBinaryString | HexadecimalString\fR]
[\fB\-\-CompoundID\fR \fIDataFieldName or LabelPrefixString\fR] [\fB\-\-CompoundIDLabel\fR \fItext\fR]
[\fB\-\-CompoundIDMode\fR \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR]
[\fB\-\-DataFields\fR \fI\*(L"FieldLabel1,FieldLabel2,... \*(R"\fR] [\fB\-d, \-\-DataFieldsMode\fR \fIAll | Common | Specify | CompoundID\fR]
[\fB\-\-DetectAromaticity\fR \fIYes | No\fR]  [\fB\-f, \-\-Filter\fR \fIYes | No\fR] [\fB\-\-FingerprintsLabel\fR \fItext\fR]
[\fB\-\-fold\fR \fIYes | No\fR] [\fB\-\-FoldedSize\fR \fInumber\fR] [\fB\-h, \-\-help\fR]
[\fB\-i, \-\-IgnoreHydrogens\fR \fIYes | No\fR] [\fB\-k, \-\-KeepLargestComponent\fR \fIYes | No\fR]
[\fB\-m, \-\-mode\fR \fIPathLengthBits | PathLengthCount\fR]
[\fB\-\-MinPathLength\fR \fInumber\fR] [\fB\-\-MaxPathLength\fR \fInumber\fR] [\fB\-n, \-\-NumOfBitsToSetPerPath\fR \fInumber\fR]
[\fB\-\-OutDelim\fR \fIcomma | tab | semicolon\fR]
[\fB\-\-output\fR \fI\s-1SD\s0 | \s-1FP\s0 | text | all\fR] [\fB\-q, \-\-quote\fR \fIYes | No\fR] [\fB\-r, \-\-root\fR \fIRootName\fR]
[\fB\-p, \-\-PathMode\fR \fIAtomPathsWithoutRings | AtomPathsWithRings | AllAtomPathsWithoutRings | AllAtomPathsWithRings\fR]
[\fB\-s, \-\-size\fR \fInumber\fR] [\fB\-u, \-\-UseBondSymbols\fR \fIYes | No\fR] [\fB\-\-UsePerlCoreRandom\fR \fIYes | No\fR]
[\fB\-\-UseUniquePaths\fR \fIYes | No\fR] [\fB\-q, \-\-quote\fR \fIYes | No\fR] [\fB\-r, \-\-root\fR \fIRootName\fR]
[\fB\-v, \-\-VectorStringFormat\fR \fIIDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString\fR]
[\fB\-w, \-\-WorkingDir\fR dirname] SDFile(s)...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate atom path length fingerprints for \fISDFile(s)\fR and create appropriate \s-1SD, FP\s0 or
\&\s-1CSV/TSV\s0 text file(s) containing fingerprints bit-vector or vector strings corresponding to
molecular fingerprints.
.PP
Multiple SDFile names are separated by spaces. The valid file extensions are \fI.sdf\fR
and \fI.sd\fR. All other file names are ignored. All the \s-1SD\s0 files in a current directory
can be specified either by \fI*.sdf\fR or the current directory name.
.PP
The current release of MayaChemTools supports generation of path length fingerprints
corresponding to following \fB\-a, \-\-AtomIdentifierTypes\fR:
.PP
.Vb 3
\&    AtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
\&    FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes,
\&    SYBYLAtomTypes, TPSAAtomTypes, UFFAtomTypes
.Ve
.PP
Based on the values specified for \fB\-p, \-\-PathMode\fR, \fB\-\-MinPathLength\fR and \fB\-\-MaxPathLength\fR,
all appropriate atom paths are generated for each atom in the molecule and collected in a list and
the list is filtered to remove any structurally duplicate paths as indicated by the value of
\&\fB\-\-UseUniquePaths\fR option.
.PP
For each atom path in the filtered atom paths list, an atom path string is created using value of
\&\fB\-a, \-\-AtomIdentifierType\fR and specified values to use for a particular atom identifier type.
Value of \fB\-u, \-\-UseBondSymbols\fR controls whether bond order symbols are used during generation
of atom path string. For each atom path, only lexicographically smaller atom path strings are kept.
.PP
For \fIPathLengthBits\fR value of \fB\-m, \-\-mode\fR option, each atom path is hashed to a 32 bit unsigned
integer key using \fBTextUtil::HashCode\fR function. Using the hash key as a seed for a random number
generator, a random integer value between 0 and \fB\-\-Size\fR is used to set corresponding bits
in the fingerprint bit-vector string. Value of \fB\-\-NumOfBitsToSetPerPath\fR option controls the number
of time a random number is generated to set corresponding bits.
.PP
For \fI PathLengthCount\fR value of \fB\-m, \-\-mode\fR option, the number of times an atom path appears
is tracked and a fingerprints count-string corresponding to count of atom paths is generated.
.PP
Example of \fI\s-1SD\s0\fR file containing path length fingerprints string data:
.PP
.Vb 10
\&    ... ...
\&    ... ...
\&    $$$$
\&    ... ...
\&    ... ...
\&    ... ...
\&    41 44  0  0  0  0  0  0  0  0999 V2000
\&     \-3.3652    1.4499    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
\&    ... ...
\&    2  3  1  0  0  0  0
\&    ... ...
\&    M  END
\&    >  <CmpdID>
\&    Cmpd1
\&
\&    >  <PathLengthFingerprints>
\&    FingerprintsBitVector;PathLengthBits:AtomicInvariantsAtomTypes:MinLengt
\&    h1:MaxLength8;1024;HexadecimalString;Ascending;9c8460989ec8a49913991a66
\&    03130b0a19e8051c89184414953800cc2151082844a201042800130860308e8204d4028
\&    00831048940e44281c00060449a5000ac80c894114e006321264401600846c050164462
\&    08190410805000304a10205b0100e04c0038ba0fad0209c0ca8b1200012268b61c0026a
\&    aa0660a11014a011d46
\&
\&    $$$$
\&    ... ...
\&    ... ...
.Ve
.PP
Example of \fI\s-1FP\s0\fR file containing path length fingerprints string data:
.PP
.Vb 10
\&    #
\&    # Package = MayaChemTools 7.4
\&    # ReleaseDate = Oct 21, 2010
\&    #
\&    # TimeStamp =  Mon Mar 7 15:14:01 2011
\&    #
\&    # FingerprintsStringType = FingerprintsBitVector
\&    #
\&    # Description = PathLengthBits:AtomicInvariantsAtomTypes:MinLength1:...
\&    # Size = 1024
\&    # BitStringFormat = HexadecimalString
\&    # BitsOrder = Ascending
\&    #
\&    Cmpd1 9c8460989ec8a49913991a6603130b0a19e8051c89184414953800cc21510...
\&    Cmpd2 000000249400840040100042011001001980410c000000001010088001120...
\&    ... ...
\&    ... ..
.Ve
.PP
Example of \s-1CSV \s0\fIText\fR file containing pathlength fingerprints string data:
.PP
.Vb 7
\&    "CompoundID","PathLengthFingerprints"
\&    "Cmpd1","FingerprintsBitVector;PathLengthBits:AtomicInvariantsAtomTypes
\&    :MinLength1:MaxLength8;1024;HexadecimalString;Ascending;9c8460989ec8a4
\&    9913991a6603130b0a19e8051c89184414953800cc2151082844a20104280013086030
\&    8e8204d402800831048940e44281c00060449a5000ac80c894114e006321264401..."
\&    ... ...
\&    ... ...
.Ve
.PP
The current release of MayaChemTools generates the following types of path length
fingerprints bit-vector and vector strings:
.PP
.Vb 6
\&    FingerprintsBitVector;PathLengthBits:AtomicInvariantsAtomTypes:MinLeng
\&    th1:MaxLength8;1024;BinaryString;Ascending;001000010011010101011000110
\&    0100010101011000101001011100110001000010001001101000001001001001001000
\&    0010110100000111001001000001001010100100100000000011000000101001011100
\&    0010000001000101010100000100111100110111011011011000000010110111001101
\&    0101100011000000010001000011000010100011101100001000001000100000000...
\&
\&    FingerprintsBitVector;PathLengthBits:AtomicInvariantsAtomTypes:MinLeng
\&    th1:MaxLength8;1024;HexadecimalString;Ascending;48caa1315d82d91122b029
\&    42861c9409a4208182d12015509767bd0867653604481a8b1288000056090583603078
\&    9cedae54e26596889ab121309800900490515224208421502120a0dd9200509723ae89
\&    00024181b86c0122821d4e4880c38620dab280824b455404009f082003d52c212b4e6d
\&    6ea05280140069c780290c43
\&
\&    FingerprintsVector;PathLengthCount:AtomicInvariantsAtomTypes:MinLength
\&    1:MaxLength8;432;NumericalValues;IDsAndValuesPairsString;C.X1.BO1.H3 2
\&    C.X2.BO2.H2 4 C.X2.BO3.H1 14 C.X3.BO3.H1 3 C.X3.BO4 10 F.X1.BO1 1 N.X
\&    2.BO2.H1 1 N.X3.BO3 1 O.X1.BO1.H1 3 O.X1.BO2 2 C.X1.BO1.H3C.X3.BO3.H1
\&    2 C.X2.BO2.H2C.X2.BO2.H2 1 C.X2.BO2.H2C.X3.BO3.H1 4 C.X2.BO2.H2C.X3.BO
\&    4 1 C.X2.BO2.H2N.X3.BO3 1 C.X2.BO3.H1:C.X2.BO3.H1 10 C.X2.BO3.H1:C....
\&
\&    FingerprintsVector;PathLengthCount:DREIDINGAtomTypes:MinLength1:MaxLen
\&    gth8;410;NumericalValues;IDsAndValuesPairsString;C_2 2 C_3 9 C_R 22 F_
\&    1 N_3 1 N_R 1 O_2 2 O_3 3 C_2=O_2 2 C_2C_3 1 C_2C_R 1 C_2N_3 1 C_2O_3
\&    1 C_3C_3 7 C_3C_R 1 C_3N_R 1 C_3O_3 2 C_R:C_R 21 C_R:N_R 2 C_RC_R 2 C
\&    _RF_ 1 C_RN_3 1 C_2C_3C_3 1 C_2C_R:C_R 2 C_2N_3C_R 1 C_3C_2=O_2 1 C_3C
\&    _2O_3 1 C_3C_3C_3 5 C_3C_3C_R 2 C_3C_3N_R 1 C_3C_3O_3 4 C_3C_R:C_R ...
\&
\&    FingerprintsVector;PathLengthCount:EStateAtomTypes:MinLength1:MaxLengt
\&    h8;454;NumericalValues;IDsAndValuesPairsString;aaCH 14 aasC 8 aasN 1 d
\&    O 2 dssC 2 sCH3 2 sF 1 sOH 3 ssCH2 4 ssNH 1 sssCH 3 aaCH:aaCH 10 aaCH:
\&    aasC 8 aasC:aasC 3 aasC:aasN 2 aasCaasC 2 aasCdssC 1 aasCsF 1 aasCssNH
\&    1 aasCsssCH 1 aasNssCH2 1 dO=dssC 2 dssCsOH 1 dssCssCH2 1 dssCssNH 1
\&    sCH3sssCH 2 sOHsssCH 2 ssCH2ssCH2 1 ssCH2sssCH 4 aaCH:aaCH:aaCH 6 a...
\&
\&    FingerprintsVector;PathLengthCount:FunctionalClassAtomTypes:MinLength1
\&    :MaxLength8;404;NumericalValues;IDsAndValuesPairsString;Ar 22 Ar.HBA 1
\&    HBA 2 HBA.HBD 3 HBD 1 Hal 1 NI 1 None 10 Ar.HBA:Ar 2 Ar.HBANone 1 Ar:
\&    Ar 21 ArAr 2 ArHBD 1 ArHal 1 ArNone 2 HBA.HBDNI 1 HBA.HBDNone 2 HBA=NI
\&    1 HBA=None 1 HBDNone 1 NINone 1 NoneNone 7 Ar.HBA:Ar:Ar 2 Ar.HBA:ArAr
\&    1 Ar.HBA:ArNone 1 Ar.HBANoneNone 1 Ar:Ar.HBA:Ar 1 Ar:Ar.HBANone 2 ...
\&
\&    FingerprintsVector;PathLengthCount:MMFF94AtomTypes:MinLength1:MaxLengt
\&    h8;463;NumericalValues;IDsAndValuesPairsString;C5A 2 C5B 2 C=ON 1 CB 1
\&    8 COO 1 CR 9 F 1 N5 1 NC=O 1 O=CN 1 O=CO 1 OC=O 1 OR 2 C5A:C5B 2 C5A:N
\&    5 2 C5ACB 1 C5ACR 1 C5B:C5B 1 C5BC=ON 1 C5BCB 1 C=ON=O=CN 1 C=ONNC=O 1
\&    CB:CB 18 CBF 1 CBNC=O 1 COO=O=CO 1 COOCR 1 COOOC=O 1 CRCR 7 CRN5 1 CR
\&    OR 2 C5A:C5B:C5B 2 C5A:C5BC=ON 1 C5A:C5BCB 1 C5A:N5:C5A 1 C5A:N5CR ...
\&
\&    FingerprintsVector;PathLengthCount:SLogPAtomTypes:MinLength1:MaxLength
\&    8;518;NumericalValues;IDsAndValuesPairsString;C1 5 C10 1 C11 1 C14 1 C
\&    18 14 C20 4 C21 2 C22 1 C5 2 CS 2 F 1 N11 1 N4 1 O10 1 O2 3 O9 1 C10C1
\&    1 C10N11 1 C11C1 2 C11C21 1 C14:C18 2 C14F 1 C18:C18 10 C18:C20 4 C18
\&    :C22 2 C1C5 1 C1CS 4 C20:C20 1 C20:C21 1 C20:N11 1 C20C20 2 C21:C21 1
\&    C21:N11 1 C21C5 1 C22N4 1 C5=O10 1 C5=O9 1 C5N4 1 C5O2 1 CSO2 2 C10...
\&
\&    FingerprintsVector;PathLengthCount:SYBYLAtomTypes:MinLength1:MaxLength
\&    8;412;NumericalValues;IDsAndValuesPairsString;C.2 2 C.3 9 C.ar 22 F 1
\&    N.am 1 N.ar 1 O.2 1 O.3 2 O.co2 2 C.2=O.2 1 C.2=O.co2 1 C.2C.3 1 C.2C.
\&    ar 1 C.2N.am 1 C.2O.co2 1 C.3C.3 7 C.3C.ar 1 C.3N.ar 1 C.3O.3 2 C.ar:C
\&    .ar 21 C.ar:N.ar 2 C.arC.ar 2 C.arF 1 C.arN.am 1 C.2C.3C.3 1 C.2C.ar:C
\&    .ar 2 C.2N.amC.ar 1 C.3C.2=O.co2 1 C.3C.2O.co2 1 C.3C.3C.3 5 C.3C.3...
\&
\&    FingerprintsVector;PathLengthCount:TPSAAtomTypes:MinLength1:MaxLength8
\&    ;331;NumericalValues;IDsAndValuesPairsString;N21 1 N7 1 None 34 O3 2 O
\&    4 3 N21:None 2 N21None 1 N7None 2 None:None 21 None=O3 2 NoneNone 13 N
\&    oneO4 3 N21:None:None 2 N21:NoneNone 2 N21NoneNone 1 N7None:None 2 N7N
\&    one=O3 1 N7NoneNone 1 None:N21:None 1 None:N21None 2 None:None:None 20
\&    None:NoneNone 12 NoneN7None 1 NoneNone=O3 2 NoneNoneNone 8 NoneNon...
\&
\&    FingerprintsVector;PathLengthCount:UFFAtomTypes:MinLength1:MaxLength8;
\&    410;NumericalValues;IDsAndValuesPairsString;C_2 2 C_3 9 C_R 22 F_ 1 N_
\&    3 1 N_R 1 O_2 2 O_3 3 C_2=O_2 2 C_2C_3 1 C_2C_R 1 C_2N_3 1 C_2O_3 1 C_
\&    3C_3 7 C_3C_R 1 C_3N_R 1 C_3O_3 2 C_R:C_R 21 C_R:N_R 2 C_RC_R 2 C_RF_
\&    1 C_RN_3 1 C_2C_3C_3 1 C_2C_R:C_R 2 C_2N_3C_R 1 C_3C_2=O_2 1 C_3C_2O_3
\&    1 C_3C_3C_3 5 C_3C_3C_R 2 C_3C_3N_R 1 C_3C_3O_3 4 C_3C_R:C_R 1 C_3...
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-AromaticityModel\fR \fIMDLAromaticityModel | TriposAromaticityModel | MMFFAromaticityModel | ChemAxonBasicAromaticityModel | ChemAxonGeneralAromaticityModel | DaylightAromaticityModel | MayaChemToolsAromaticityModel\fR" 4
.IX Item "--AromaticityModel MDLAromaticityModel | TriposAromaticityModel | MMFFAromaticityModel | ChemAxonBasicAromaticityModel | ChemAxonGeneralAromaticityModel | DaylightAromaticityModel | MayaChemToolsAromaticityModel"
Specify aromaticity model to use during detection of aromaticity. Possible values in the current
release are: \fIMDLAromaticityModel, TriposAromaticityModel, MMFFAromaticityModel,
ChemAxonBasicAromaticityModel, ChemAxonGeneralAromaticityModel, DaylightAromaticityModel
or MayaChemToolsAromaticityModel\fR. Default value: \fIMayaChemToolsAromaticityModel\fR.
.Sp
The supported aromaticity model names along with model specific control parameters
are defined in \fBAromaticityModelsData.csv\fR, which is distributed with the current release
and is available under \fBlib/data\fR directory. \fBMolecule.pm\fR module retrieves data from
this file during class instantiation and makes it available to method \fBDetectAromaticity\fR
for detecting aromaticity corresponding to a specific model.
.Sp
This option is ignored during \fINo\fR value of \fB\-\-DetectAromaticity\fR option.
.IP "\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes\fR" 4
.IX Item "-a, --AtomIdentifierType AtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes"
Specify atom identifier type to use for assignment of atom types to hydrogen and/or
non-hydrogen atoms during calculation of atom types fingerprints. Possible values in the
current release are: \fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR. Default value: \fIAtomicInvariantsAtomTypes\fR.
.IP "\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes\fR" 4
.IX Item "-a, --AtomIdentifierType AtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes"
Specify atom identifier type to use during generation of atom path strings
corresponding to path length fingerprints. Possible values in the current release are:
\&\fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR. Default value: \fIAtomicInvariantsAtomTypes\fR.
.ie n .IP "\fB\-\-AtomicInvariantsToUse\fR \fI""AtomicInvariant1,AtomicInvariant2...""\fR" 4
.el .IP "\fB\-\-AtomicInvariantsToUse\fR \fI``AtomicInvariant1,AtomicInvariant2...''\fR" 4
.IX Item "--AtomicInvariantsToUse AtomicInvariant1,AtomicInvariant2..."
This value is used during \fIAtomicInvariantsAtomTypes\fR value of \fBa, \-\-AtomIdentifierType\fR
option. It's a list of comma separated valid atomic invariant atom types.
.Sp
Possible values for atomic invariants are: \fI\s-1AS, X, BO,  LBO, SB, DB, TB,
H,\s0 Ar, \s-1RA, FC, MN, SM\s0\fR. Default value: \fI\s-1AS\s0\fR.
.Sp
The atomic invariants abbreviations correspond to:
.Sp
.Vb 1
\&    AS = Atom symbol corresponding to element symbol
\&
\&    X<n>   = Number of non\-hydrogen atom neighbors or heavy atoms
\&    BO<n> = Sum of bond orders to non\-hydrogen atom neighbors or heavy atoms
\&    LBO<n> = Largest bond order of non\-hydrogen atom neighbors or heavy atoms
\&    SB<n> = Number of single bonds to non\-hydrogen atom neighbors or heavy atoms
\&    DB<n> = Number of double bonds to non\-hydrogen atom neighbors or heavy atoms
\&    TB<n> = Number of triple bonds to non\-hydrogen atom neighbors or heavy atoms
\&    H<n>   = Number of implicit and explicit hydrogens for atom
\&    Ar     = Aromatic annotation indicating whether atom is aromatic
\&    RA     = Ring atom annotation indicating whether atom is a ring
\&    FC<+n/\-n> = Formal charge assigned to atom
\&    MN<n> = Mass number indicating isotope other than most abundant isotope
\&    SM<n> = Spin multiplicity of atom. Possible values: 1 (singlet), 2 (doublet) or
\&            3 (triplet)
.Ve
.Sp
Atom type generated by AtomTypes::AtomicInvariantsAtomTypes class corresponds to:
.Sp
.Vb 1
\&    AS.X<n>.BO<n>.LBO<n>.<SB><n>.<DB><n>.<TB><n>.H<n>.Ar.RA.FC<+n/\-n>.MN<n>.SM<n>
.Ve
.Sp
Except for \s-1AS\s0 which is a required atomic invariant in atom types, all other atomic invariants are
optional. Atom type specification doesn't include atomic invariants with zero or undefined values.
.Sp
In addition to usage of abbreviations for specifying atomic invariants, the following descriptive words
are also allowed:
.Sp
.Vb 12
\&    X : NumOfNonHydrogenAtomNeighbors or NumOfHeavyAtomNeighbors
\&    BO : SumOfBondOrdersToNonHydrogenAtoms or SumOfBondOrdersToHeavyAtoms
\&    LBO : LargestBondOrderToNonHydrogenAtoms or LargestBondOrderToHeavyAtoms
\&    SB :  NumOfSingleBondsToNonHydrogenAtoms or NumOfSingleBondsToHeavyAtoms
\&    DB : NumOfDoubleBondsToNonHydrogenAtoms or NumOfDoubleBondsToHeavyAtoms
\&    TB : NumOfTripleBondsToNonHydrogenAtoms or NumOfTripleBondsToHeavyAtoms
\&    H :  NumOfImplicitAndExplicitHydrogens
\&    Ar : Aromatic
\&    RA : RingAtom
\&    FC : FormalCharge
\&    MN : MassNumber
\&    SM : SpinMultiplicity
.Ve
.Sp
Examples:
.Sp
\&\fBBenzene\fR: Using value of \fI\s-1AS\s0\fR for \fB\-\-AtomicInvariantsToUse\fR, \fIYes\fR for \fBUseBondSymbols\fR,
and \fI AllAtomPathsWithRings\fR for \fB\-p, \-\-PathMode\fR, atom path strings generated are:
.Sp
.Vb 1
\&    C C:C C:C:C C:C:C:C C:C:C:C:C C:C:C:C:C:C C:C:C:C:C:C:C
.Ve
.Sp
And using \fI\s-1AS,X,BO\s0\fR for \fB\-\-AtomicInvariantsToUse\fR generates following atom path
strings:
.Sp
.Vb 5
\&    C.X2.BO3 C.X2.BO3:C.X2.BO3 C.X2.BO3:C.X2.BO3:C.X2.BO3
\&    C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3
\&    C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3
\&    C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3
\&    C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3:C.X2.BO3
.Ve
.Sp
\&\fBUrea\fR: Using value of \fI\s-1AS\s0\fR for \fB\-\-AtomicInvariantsToUse\fR, \fIYes\fR for \fBUseBondSymbols\fR,
and \fI AllAtomPathsWithRings\fR for \fB\-p, \-\-PathMode\fR, atom path strings are:
.Sp
.Vb 1
\&    C N O C=O CN NC=O NCN
.Ve
.Sp
And using \fI\s-1AS,X,BO\s0\fR for \fB\-\-AtomicInvariantsToUse\fR generates following atom path
strings:
.Sp
.Vb 3
\&    C.X3.BO4 N.X1.BO1 O.X1.BO2 C.X3.BO4=O.X1.BO2
\&    C.X3.BO4N.X1.BO1 N.X1.BO1C.X3.BO4=O.X1.BO2
\&    N.X1.BO1C.X3.BO4N.X1.BO1
.Ve
.ie n .IP "\fB\-\-FunctionalClassesToUse\fR \fI""FunctionalClass1,FunctionalClass2...""\fR" 4
.el .IP "\fB\-\-FunctionalClassesToUse\fR \fI``FunctionalClass1,FunctionalClass2...''\fR" 4
.IX Item "--FunctionalClassesToUse FunctionalClass1,FunctionalClass2..."
This value is used during \fIFunctionalClassAtomTypes\fR value of \fBa, \-\-AtomIdentifierType\fR
option. It's a list of comma separated valid functional classes.
.Sp
Possible values for atom functional classes are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 24 ]: \fI\s-1HBD,HBA,PI,NI\s0,Ar,Hal\fR.
.Sp
The functional class abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
\&
\& Functional class atom type specification for an atom corresponds to:
\&
\&    Ar.CA.H.HBA.HBD.Hal.NI.PI.RA
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign functional class atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fB\-\-BitsOrder\fR \fIAscending | Descending\fR" 4
.IX Item "--BitsOrder Ascending | Descending"
Bits order to use during generation of fingerprints bit-vector string for \fIPathLengthBits\fR value of
\&\fB\-m, \-\-mode\fR option. Possible values: \fIAscending, Descending\fR. Default: \fIAscending\fR.
.Sp
\&\fIAscending\fR bit order which corresponds to first bit in each byte as the lowest bit as
opposed to the highest bit.
.Sp
Internally, bits are stored in \fIAscending\fR order using Perl vec function. Regardless
of machine order, big-endian or little-endian, vec function always considers first
string byte as the lowest byte and first bit within each byte as the lowest bit.
.IP "\fB\-b, \-\-BitStringFormat\fR \fIBinaryString | HexadecimalString\fR" 4
.IX Item "-b, --BitStringFormat BinaryString | HexadecimalString"
Format of fingerprints bit-vector string data in output \s-1SD, FP\s0 or \s-1CSV/TSV\s0 text file(s) specified by
\&\fB\-\-output\fR used during \fIPathLengthBits\fR value of \fB\-m, \-\-mode\fR option. Possible
values: \fIBinaryString, HexadecimalString\fR. Default value: \fIHexadecimalString\fR.
.Sp
\&\fIBinaryString\fR corresponds to an \s-1ASCII\s0 string containing 1s and 0s. \fIHexadecimalString\fR
contains bit values in \s-1ASCII\s0 hexadecimal format.
.Sp
Examples:
.Sp
.Vb 6
\&    FingerprintsBitVector;PathLengthBits:AtomicInvariantsAtomTypes:MinLeng
\&    th1:MaxLength8;1024;BinaryString;Ascending;001000010011010101011000110
\&    0100010101011000101001011100110001000010001001101000001001001001001000
\&    0010110100000111001001000001001010100100100000000011000000101001011100
\&    0010000001000101010100000100111100110111011011011000000010110111001101
\&    0101100011000000010001000011000010100011101100001000001000100000000...
\&
\&    FingerprintsBitVector;PathLengthBits:AtomicInvariantsAtomTypes:MinLeng
\&    th1:MaxLength8;1024;HexadecimalString;Ascending;48caa1315d82d91122b029
\&    42861c9409a4208182d12015509767bd0867653604481a8b1288000056090583603078
\&    9cedae54e26596889ab121309800900490515224208421502120a0dd9200509723ae89
\&    00024181b86c0122821d4e4880c38620dab280824b455404009f082003d52c212b4e6d
\&    6ea05280140069c780290c43
.Ve
.IP "\fB\-\-CompoundID\fR \fIDataFieldName or LabelPrefixString\fR" 4
.IX Item "--CompoundID DataFieldName or LabelPrefixString"
This value is \fB\-\-CompoundIDMode\fR specific and indicates how compound \s-1ID\s0 is generated.
.Sp
For \fIDataField\fR value of \fB\-\-CompoundIDMode\fR option, it corresponds to datafield label name
whose value is used as compound \s-1ID\s0; otherwise, it's a prefix string used for generating compound
IDs like LabelPrefixString<Number>. Default value, \fICmpd\fR, generates compound IDs which
look like Cmpd<Number>.
.Sp
Examples for \fIDataField\fR value of \fB\-\-CompoundIDMode\fR:
.Sp
.Vb 2
\&    MolID
\&    ExtReg
.Ve
.Sp
Examples for \fILabelPrefix\fR or \fIMolNameOrLabelPrefix\fR value of \fB\-\-CompoundIDMode\fR:
.Sp
.Vb 1
\&    Compound
.Ve
.Sp
The value specified above generates compound IDs which correspond to Compound<Number>
instead of default value of Cmpd<Number>.
.IP "\fB\-\-CompoundIDLabel\fR \fItext\fR" 4
.IX Item "--CompoundIDLabel text"
Specify compound \s-1ID\s0 column label for \s-1FP\s0 or \s-1CSV/TSV\s0 text file(s) used during \fICompoundID\fR value
of \fB\-\-DataFieldsMode\fR option. Default: \fICompoundID\fR.
.IP "\fB\-\-CompoundIDMode\fR \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR" 4
.IX Item "--CompoundIDMode DataField | MolName | LabelPrefix | MolNameOrLabelPrefix"
Specify how to generate compound IDs and write to \s-1FP\s0 or \s-1CSV/TSV\s0 text file(s) along with generated
fingerprints for \fI\s-1FP\s0 | text | all\fR values of \fB\-\-output\fR option: use a \fISDFile(s)\fR datafield value;
use molname line from \fISDFile(s)\fR; generate a sequential \s-1ID\s0 with specific prefix; use combination
of both MolName and LabelPrefix with usage of LabelPrefix values for empty molname lines.
.Sp
Possible values: \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR.
Default: \fILabelPrefix\fR.
.Sp
For \fIMolNameAndLabelPrefix\fR value of \fB\-\-CompoundIDMode\fR, molname line in \fISDFile(s)\fR takes
precedence over sequential compound IDs generated using \fILabelPrefix\fR and only empty molname
values are replaced with sequential compound IDs.
.Sp
This is only used for \fICompoundID\fR value of \fB\-\-DataFieldsMode\fR option.
.ie n .IP "\fB\-\-DataFields\fR \fI""FieldLabel1,FieldLabel2,... ""\fR" 4
.el .IP "\fB\-\-DataFields\fR \fI``FieldLabel1,FieldLabel2,... ''\fR" 4
.IX Item "--DataFields FieldLabel1,FieldLabel2,... "
Comma delimited list of \fISDFiles(s)\fR data fields to extract and write to \s-1CSV/TSV\s0 text file(s) along
with generated fingerprints for \fItext | all\fR values of \fB\-\-output\fR option.
.Sp
This is only used for \fISpecify\fR value of \fB\-\-DataFieldsMode\fR option.
.Sp
Examples:
.Sp
.Vb 2
\&    Extreg
\&    MolID,CompoundName
.Ve
.IP "\fB\-d, \-\-DataFieldsMode\fR \fIAll | Common | Specify | CompoundID\fR" 4
.IX Item "-d, --DataFieldsMode All | Common | Specify | CompoundID"
Specify how data fields in \fISDFile(s)\fR are transferred to output \s-1CSV/TSV\s0 text file(s) along
with generated fingerprints for \fItext | all\fR values of \fB\-\-output\fR option: transfer all \s-1SD\s0
data field; transfer \s-1SD\s0 data files common to all compounds; extract specified data fields;
generate a compound \s-1ID\s0 using molname line, a compound prefix, or a combination of both.
Possible values: \fIAll | Common | specify | CompoundID\fR. Default value: \fICompoundID\fR.
.IP "\fB\-\-DetectAromaticity\fR \fIYes | No\fR" 4
.IX Item "--DetectAromaticity Yes | No"
Detect aromaticity before generating fingerprints. Possible values: \fIYes or No\fR.
Default value: \fIYes\fR.
.Sp
\&\fINo\fR \fB\-\-DetectAromaticity\fR forces usage of atom and bond aromaticity values
from \fISDFile(s)\fR and skips the step which detects and assigns aromaticity.
.Sp
\&\fINo\fR \fB\-\-DetectAromaticity\fR value is only allowed uring \fIAtomicInvariantsAtomTypes\fR
value of \fB\-a, \-\-AtomIdentifierType\fR options; for all possible values \fB\-a, \-\-AtomIdentifierType\fR
values, it must be \fIYes\fR.
.IP "\fB\-f, \-\-Filter\fR \fIYes | No\fR" 4
.IX Item "-f, --Filter Yes | No"
Specify whether to check and filter compound data in SDFile(s). Possible values: \fIYes or No\fR.
Default value: \fIYes\fR.
.Sp
By default, compound data is checked before calculating fingerprints and compounds containing
atom data corresponding to non-element symbols or no atom data are ignored.
.IP "\fB\-\-FingerprintsLabel\fR \fItext\fR" 4
.IX Item "--FingerprintsLabel text"
\&\s-1SD\s0 data label or text file column label to use for fingerprints string in output \s-1SD\s0 or
\&\s-1CSV/TSV\s0 text file(s) specified by \fB\-\-output\fR. Default value: \fIPathLenghFingerprints\fR.
.IP "\fB\-\-fold\fR \fIYes | No\fR" 4
.IX Item "--fold Yes | No"
Fold fingerprints to increase bit density during \fIPathLengthBits\fR value of
\&\fB\-m, \-\-mode\fR option. Possible values: \fIYes or No\fR. Default value: \fINo\fR.
.IP "\fB\-\-FoldedSize\fR \fInumber\fR" 4
.IX Item "--FoldedSize number"
Size of folded fingerprint during \fIPathLengthBits\fR value of \fB\-m, \-\-mode\fR option. Default
value: \fI256\fR. Valid values correspond to any positive integer which is less than
\&\fB\-s, \-\-size\fR and meets the criteria for its value.
.Sp
Examples:
.Sp
.Vb 2
\&   128
\&   512
.Ve
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message
.IP "\fB\-i, \-\-IgnoreHydrogens\fR \fIYes | No\fR" 4
.IX Item "-i, --IgnoreHydrogens Yes | No"
Ignore hydrogens during fingerprints generation. Possible values: \fIYes or No\fR.
Default value: \fIYes\fR.
.Sp
For \fIyes\fR value of \fB\-i, \-\-IgnoreHydrogens\fR, any explicit hydrogens are also used for
generation of atoms path lengths and fingerprints; implicit hydrogens are still ignored.
.IP "\fB\-k, \-\-KeepLargestComponent\fR \fIYes | No\fR" 4
.IX Item "-k, --KeepLargestComponent Yes | No"
Generate fingerprints for only the largest component in molecule. Possible values:
\&\fIYes or No\fR. Default value: \fIYes\fR.
.Sp
For molecules containing multiple connected components, fingerprints can be generated
in two different ways: use all connected components or just the largest connected
component. By default, all atoms except for the largest connected component are
deleted before generation of fingerprints.
.IP "\fB\-m, \-\-mode\fR \fIPathLengthBits | PathLengthCount\fR" 4
.IX Item "-m, --mode PathLengthBits | PathLengthCount"
Specify type of path length fingerprints to generate for molecules in \fISDFile(s)\fR. Possible
values: \fIPathLengthBits, PathLengthCount\fR. Default value: \fIPathLengthBits\fR.
.Sp
For \fIPathLengthBits\fR value of \fB\-m, \-\-mode\fR option, a fingerprint bit-vector string containing
zeros and ones is generated and for \fIPathLengthCount\fR value, a fingerprint vector string
corresponding to number of atom paths is generated.
.IP "\fB\-\-MinPathLength\fR \fInumber\fR" 4
.IX Item "--MinPathLength number"
Minimum atom path length to include in fingerprints. Default value: \fI1\fR. Valid values:
positive integers and less than \fB\-\-MaxPathLength\fR. Path length of 1 correspond to
a path containing only one atom.
.IP "\fB\-\-MaxPathLength\fR \fInumber\fR" 4
.IX Item "--MaxPathLength number"
Maximum atom path length to include in fingerprints. Default value: \fI8\fR. Valid values:
positive integers and greater than \fB\-\-MinPathLength\fR.
.IP "\fB\-n, \-\-NumOfBitsToSetPerPath\fR \fInumber\fR" 4
.IX Item "-n, --NumOfBitsToSetPerPath number"
Number of bits to set per path during generation of fingerprints bit-vector string for \fIPathLengthBits\fR
value of \fB\-m, \-\-mode\fR option. Default value: \fI1\fR. Valid values: positive integers.
.IP "\fB\-\-OutDelim\fR \fIcomma | tab | semicolon\fR" 4
.IX Item "--OutDelim comma | tab | semicolon"
Delimiter for output \s-1CSV/TSV\s0 text file(s). Possible values: \fIcomma, tab, or semicolon\fR
Default value: \fIcomma\fR.
.IP "\fB\-\-output\fR \fI\s-1SD\s0 | \s-1FP\s0 | text | all\fR" 4
.IX Item "--output SD | FP | text | all"
Type of output files to generate. Possible values: \fI\s-1SD, FP,\s0 text, or all\fR. Default value: \fItext\fR.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files.
.IP "\fB\-p, \-\-PathMode\fR \fIAtomPathsWithoutRings | AtomPathsWithRings | AllAtomPathsWithoutRings | AllAtomPathsWithRings\fR" 4
.IX Item "-p, --PathMode AtomPathsWithoutRings | AtomPathsWithRings | AllAtomPathsWithoutRings | AllAtomPathsWithRings"
Specify type of atom paths to use for generating  pathlength fingerprints for molecules in
\&\fISDFile(s)\fR. Possible values:\fIAtomPathsWithoutRings, AtomPathsWithRings,
AllAtomPathsWithoutRings, AllAtomPathsWithRings\fR. Default value: \fIAllAtomPathsWithRings\fR.
.Sp
For molecules with no rings, first two and last two options are equivalent and generate
same set of atom paths starting from each atom with length between \fB\-\-MinPathLength\fR
and \fB\-\-MaxPathLength\fR. However, all these four options can result in the same set of
final atom paths for molecules containing fused, bridged or spiro rings.
.Sp
For molecules containing rings, atom paths starting from each atom can be traversed in
four different ways:
.Sp
\&\fIAtomPathsWithoutRings\fR \- Atom paths containing no rings and without sharing of bonds
in traversed paths.
.Sp
\&\fIAtomPathsWithRings\fR \- Atom paths containing rings and without any sharing of bonds in
traversed paths.
.Sp
\&\fIAllAtomPathsWithoutRings\fR \- All possible atom paths containing no rings and without any
sharing of bonds in traversed paths.
.Sp
\&\fIAllAtomPathsWithRings\fR \- All possible atom paths containing rings and with sharing of
bonds in traversed paths.
.Sp
Atom path traversal is terminated at the ring atom.
.Sp
Based on values specified for for \fB\-p, \-\-PathMode\fR, \fB\-\-MinPathLength\fR and
\&\fB\-\-MaxPathLength\fR, all appropriate atom paths are generated for each atom in the molecule
and collected in a list.
.Sp
For each atom path in the filtered atom paths list, an atom path string is created using value of
\&\fB\-a, \-\-AtomIdentifierType\fR and specified values to use for a particular atom identifier type.
Value of \fB\-u, \-\-UseBondSymbols\fR controls whether bond order symbols are used during generation
of atom path string. Atom symbol corresponds to element symbol and characters used to represent
 bond order are: \fI1 \- None; 2 \- '='; 3 \- '#'; 1.5 or aromatic \- ':'; others: bond order value\fR. By default,
bond symbols are included in atom path strings. Exclusion of bond symbols in atom path strings
results in fingerprints which correspond purely to atom paths without considering bonds.
.Sp
\&\fBUseUniquePaths\fR controls the removal of structurally duplicate atom path strings are removed
from the list.
.Sp
For \fIPathLengthBits\fR value of \fB\-m, \-\-mode\fR option, each atom path is hashed to a 32 bit unsigned
integer key using \fBTextUtil::HashCode\fR function. Using the hash key as a seed for a random number
generator, a random integer value between 0 and \fB\-\-Size\fR is used to set corresponding bits
in the fingerprint bit-vector string. Value of \fB\-\-NumOfBitsToSetPerPaths\fR option controls the number
of time a random number is generated to set corresponding bits.
.Sp
For \fI PathLengthCount\fR value of \fB\-m, \-\-mode\fR option, the number of times an atom path appears
is tracked and a fingerprints count-string corresponding to count of atom paths is generated.
.Sp
For molecule containing rings, combination of \fB\-p, \-\-PathMode\fR and \fB\-\-UseBondSymbols\fR allows
generation of up to 8 different types of atom path length strings:
.Sp
.Vb 1
\&    AllowSharedBonds AllowRings UseBondSymbols
\&
\&    0                0          1   \- AtomPathsNoCyclesWithBondSymbols
\&    0                1          1   \- AtomPathsWithCyclesWithBondSymbols
\&
\&    1                0          1   \- AllAtomPathsNoCyclesWithBondSymbols
\&    1                1          1   \- AllAtomPathsWithCyclesWithBondSymbols
\&                                      [ DEFAULT ]
\&
\&    0                0          0   \- AtomPathsNoCyclesNoBondSymbols
\&    0                1          0   \- AtomPathsWithCyclesNoBondSymbols
\&
\&    1                0          0   \- AllAtomPathsNoCyclesNoBondSymbols
\&    1                1          0   \- AllAtomPathsWithCyclesNoWithBondSymbols
.Ve
.Sp
Default atom path length fingerprints generation for molecules containing rings with
\&\fIAllAtomPathsWithRings\fR value for \fB\-p, \-\-PathMode\fR, \fIYes\fR value for \fB\-\-UseBondSymbols\fR,
\&\fI2\fR value for \fB\-\-MinPathLength\fR and \fI8\fR value for \fB\-\-MaxPathLength\fR is the most time
consuming. Combinations of other options can substantially speed up fingerprint generation
for molecules containing complex ring systems.
.Sp
Additionally, value for option \fB\-a, \-\-AtomIdentifierType\fR in conjunction with corresponding specified
values for atom types changes the nature of atom path length strings and the fingerprints.
.IP "\fB\-q, \-\-quote\fR \fIYes | No\fR" 4
.IX Item "-q, --quote Yes | No"
Put quote around column values in output \s-1CSV/TSV\s0 text file(s). Possible values:
\&\fIYes or No\fR. Default value: \fIYes\fR.
.IP "\fB\-r, \-\-root\fR \fIRootName\fR" 4
.IX Item "-r, --root RootName"
New file name is generated using the root: <Root>.<Ext>. Default for new file
names: <SDFileName><PathLengthFP>.<Ext>. The file type determines <Ext> value.
The sdf, fpf, csv, and tsv <Ext> values are used for \s-1SD, FP,\s0 comma/semicolon, and tab
delimited text files, respectively.This option is ignored for multiple input files.
.IP "\fB\-s, \-\-size\fR \fInumber\fR" 4
.IX Item "-s, --size number"
Size of fingerprints. Default value: \fI1024\fR. Valid values correspond to any positive
integer which satisfies the following criteria: power of 2, >= 32 and <= 2 ** 32.
.Sp
Examples:
.Sp
.Vb 3
\&   256
\&   512
\&   2048
.Ve
.IP "\fB\-u, \-\-UseBondSymbols\fR \fIYes | No\fR" 4
.IX Item "-u, --UseBondSymbols Yes | No"
Specify whether to use bond symbols for atom paths during generation of atom path strings.
Possible values: \fIYes or No\fR. Default value: \fIYes\fR.
.Sp
\&\fINo\fR value option for \fB\-u, \-\-UseBondSymbols\fR allows the generation of fingerprints corresponding
purely to atoms disregarding all bonds.
.IP "\fB\-\-UsePerlCoreRandom\fR \fIYes | No\fR" 4
.IX Item "--UsePerlCoreRandom Yes | No"
Specify whether to use Perl CORE::rand or MayaChemTools MathUtil::random function
during random number generation for setting bits in fingerprints bit-vector strings. Possible
values: \fIYes or No\fR. Default value: \fIYes\fR.
.Sp
\&\fINo\fR value option for \fB\-\-UsePerlCoreRandom\fR allows the generation of fingerprints
bit-vector strings which are same across different platforms.
.Sp
The random number generator implemented in MayaChemTools is a variant of
linear congruential generator (\s-1LCG\s0) as described by Miller et al. [ Ref 120 ].
It is also referred to as Lehmer random number generator or Park-Miller
random number generator.
.Sp
Unlike Perl's core random number generator function rand, the random number
generator implemented in MayaChemTools, MathUtil::random,  generates consistent
random values across different platforms for a specific random seed and leads
to generation of portable fingerprints bit-vector strings.
.IP "\fB\-\-UseUniquePaths\fR \fIYes | No\fR" 4
.IX Item "--UseUniquePaths Yes | No"
Specify whether to use structurally unique atom paths during generation of atom path strings.
Possible values: \fIYes or No\fR. Default value: \fIYes\fR.
.Sp
\&\fINo\fR value option for \fB\-\-UseUniquePaths\fR allows usage of all atom paths generated by
\&\fB\-p, \-\-PathMode\fR option value for generation of atom path strings leading to duplicate
path count during \fIPathLengthCount\fR value of \fB\-m, \-\-mode\fR option. It doesn't change fingerprint
string generated during \fIPathLengthBits\fR value of \fB\-m, \-\-mode\fR.
.Sp
For example, during \fIAllAtomPathsWithRings\fR value of \fB\-p, \-\-PathMode\fR option, benzene has
12 linear paths of length 2 and 12 cyclic paths length of 7, but only 6 linear paths of length 2 and
1 cyclic path of length 7 are structurally unique.
.IP "\fB\-v, \-\-VectorStringFormat\fR \fIIDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString\fR" 4
.IX Item "-v, --VectorStringFormat IDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString"
Format of fingerprints vector string data in output \s-1SD, FP\s0 or \s-1CSV/TSV\s0 text file(s) specified by
\&\fB\-\-output\fR used during \fIPathLengthCount\fR value of \fB\-m, \-\-mode\fR option. Possible
values: \fIIDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString |
ValuesAndIDsPairsString\fR. Defaultvalue: \fIIDsAndValuesString\fR.
.Sp
Examples:
.Sp
.Vb 6
\&    FingerprintsVector;PathLengthCount:AtomicInvariantsAtomTypes:MinLength
\&    1:MaxLength8;432;NumericalValues;IDsAndValuesPairsString;C.X1.BO1.H3 2
\&     C.X2.BO2.H2 4 C.X2.BO3.H1 14 C.X3.BO3.H1 3 C.X3.BO4 10 F.X1.BO1 1 N.X
\&    2.BO2.H1 1 N.X3.BO3 1 O.X1.BO1.H1 3 O.X1.BO2 2 C.X1.BO1.H3C.X3.BO3.H1 
\&    2 C.X2.BO2.H2C.X2.BO2.H2 1 C.X2.BO2.H2C.X3.BO3.H1 4 C.X2.BO2.H2C.X3.BO
\&    4 1 C.X2.BO2.H2N.X3.BO3 1 C.X2.BO3.H1:C.X2.BO3.H1 10 C.X2.BO3.H1:C....
\&
\&    FingerprintsVector;PathLengthCount:EStateAtomTypes:MinLength1:MaxLengt
\&    h8;454;NumericalValues;IDsAndValuesPairsString;aaCH 14 aasC 8 aasN 1 d
\&    O 2 dssC 2 sCH3 2 sF 1 sOH 3 ssCH2 4 ssNH 1 sssCH 3 aaCH:aaCH 10 aaCH:
\&    aasC 8 aasC:aasC 3 aasC:aasN 2 aasCaasC 2 aasCdssC 1 aasCsF 1 aasCssNH
\&    1 aasCsssCH 1 aasNssCH2 1 dO=dssC 2 dssCsOH 1 dssCssCH2 1 dssCssNH 1
\&    sCH3sssCH 2 sOHsssCH 2 ssCH2ssCH2 1 ssCH2sssCH 4 aaCH:aaCH:aaCH 6 a...
.Ve
.IP "\fB\-w, \-\-WorkingDir\fR \fIDirName\fR" 4
.IX Item "-w, --WorkingDir DirName"
Location of working directory. Default: current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To generate path length fingerprints corresponding to all unique paths from length 1
through 8 in hexadecimal bit-vector string format of size 1024 and create a
SamplePLFPHex.csv file containing sequential compound IDs along with fingerprints
bit-vector strings data, type:
.PP
.Vb 1
\&    % PathLengthFingerprints.pl \-o \-r SamplePLFPHex Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to all unique paths from length 1
through 8 in hexadecimal bit-vector string format of size 1024 and create SamplePLFPHex.sdf,
SamplePLFPHex.fpf, and SamplePLFPHex.csv files containing sequential compound IDs
in \s-1CSV\s0 file along with fingerprints bit-vector strings data, type:
.PP
.Vb 1
\&    % PathLengthFingerprints.pl \-\-output all \-o \-r SamplePLFPHex Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to all unique paths from length 1
through 8 in binary bit-vector string format of size 1024 and create a
SamplePLFPBin.csv file containing sequential compound IDs along with fingerprints
bit-vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-\-BitStringFormat BinaryString \-\-size 2048
\&      \-o \-r SamplePLFPBin Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all unique paths from
length 1 through 8 in IDsAndValuesString format and create a SamplePLFPCount.csv file
containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-m PathLengthCount \-o \-r SamplePLFPCount
\&      Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all unique paths from
length 1 through 8 in IDsAndValuesString format using  E\-state atom types and
create a SamplePLFPCount.csv file containing sequential compound IDs along with fingerprints
vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-m  PathLengthCount \-\-AtomIdentifierType
\&      EStateAtomTypes \-o \-r SamplePLFPCount Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all unique paths from
length 1 through 8 in IDsAndValuesString format using  SLogP atom types and
create a SamplePLFPCount.csv file containing sequential compound IDs along with fingerprints
vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-m  PathLengthCount \-\-AtomIdentifierType
\&      SLogPAtomTypes \-o \-r SamplePLFPCount Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all unique paths from
length 1 through 8 in IDsAndValuesString format and create a SamplePLFPCount.csv file
containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-m  PathLengthCount \-\-VectorStringFormat
\&      ValuesAndIDsPairsString \-o \-r SamplePLFPCount Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all unique paths from
length 1 through 8 in IDsAndValuesString format using \s-1AS,X,BO\s0 as atomic invariants and
create a SamplePLFPCount.csv file containing sequential compound IDs along with fingerprints
vector strings data, type:
.PP
.Vb 3
\&    % PathLengthFingerprints.pl \-m  PathLengthCount \-\-AtomIdentifierType
\&      AtomicInvariantsAtomTypes \-\-AtomicInvariantsToUse "AS,X,BO" \-o
\&      \-r SamplePLFPCount Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all  paths from
length 1 through 8 in IDsAndValuesString format and create a SamplePLFPCount.csv file
containing compound IDs from MolName line along with fingerprints vector strings data, type:
.PP
.Vb 3
\&    % PathLengthFingerprints.pl \-m  PathLengthCount \-\-UseUniquePaths No
\&      \-o \-\-CompoundIDMode MolName \-r SamplePLFPCount \-\-UseUniquePaths No
\&      Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to all unique paths from length 1
through 8 in hexadecimal bit-vector string format of size 512 after folding and create
SamplePLFPHex.sdf, SamplePLFPHex.fpf, and SamplePLFPHex.sdf  files containing sequential
compound IDs along with fingerprints bit-vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-\-output all \-\-Fold Yes \-\-FoldedSize 512
\&       \-o \-r SamplePLFPHex Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to all unique paths from length 1
through 8 containing no rings and  without sharing of bonds in hexadecimal bit-vector
string format of size 1024 and create a SamplePLFPHex.csv file containing sequential
compound IDs along with fingerprints bit-vector strings data and all data fields, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-p AtomPathsWithoutRings \-\-DataFieldsMode All
\&      \-o \-r SamplePLFPHex Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to all unique paths from length 1
through 8 containing rings and  without sharing of bonds in hexadecimal bit-vector
string format of size 1024 and create a SamplePLFPHex.tsv file containing compound IDs
derived from combination of molecule name line and an explicit compound prefix
along with fingerprints bit-vector strings data and all data fields, type:
.PP
.Vb 4
\&    % PathLengthFingerprints.pl \-p AtomPathsWithRings \-\-DataFieldsMode
\&      CompoundID \-\-CompoundIDMode MolnameOrLabelPrefix  \-\-CompoundID Cmpd
\&      \-\-CompoundIDLabel MolID \-\-FingerprintsLabel PathLengthFP \-\-OutDelim Tab
\&      \-r SamplePLFPHex \-o Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to count of all unique paths from
length 1 through 8 in IDsAndValuesString format and create a SamplePLFPCount.csv file
containing sequential compound IDs along with fingerprints vector strings data using
aromaticity specified in \s-1SD\s0 file, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-m PathLengthCount \-\-DetectAromaticity No
\&      \-o \-r SamplePLFPCount Sample.sdf
.Ve
.PP
To generate path length fingerprints corresponding to all unique paths from length 2
through 6 in hexadecimal bit-vector string format of size 1024 and create a
SamplePLFPHex.csv file containing sequential compound IDs along with fingerprints
bit-vector strings data, type:
.PP
.Vb 2
\&    % PathLengthFingerprints.pl \-\-MinPathLength 2 \-\-MaxPathLength 6
\&      \-o \-r SamplePLFPHex Sample.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
InfoFingerprintsFiles.pl, SimilarityMatricesFingerprints.pl, AtomNeighborhoodsFingerprints.pl,
ExtendedConnectivityFingerprints.pl, MACCSKeysFingerprints.pl,
TopologicalAtomPairsFingerprints.pl, TopologicalAtomTorsionsFingerprints.pl,
TopologicalPharmacophoreAtomPairsFingerprints.pl, TopologicalPharmacophoreAtomTripletsFingerprints.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
