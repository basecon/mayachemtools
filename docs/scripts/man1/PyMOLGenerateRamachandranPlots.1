.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PyMOLGenerateRamachandranPlots 1"
.TH PyMOLGenerateRamachandranPlots 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PyMOLGenerateRamachandranPlots.py \- Generate Ramachandran plots
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
PyMOLGenerateRamachandranPlots.py [\fB\-\-chainIDs\fR <First, All or \s-1ID1,ID2...\s0>]
[\fB\-\-figDPI\fR <number>] [\fB\-\-figSize\fR <width, height>] [\fB\-\-fontFamily\fR <text>]
[\fB\-\-fontAxesSize\fR <number or text>] [\fB\-\-fontAxesWeight\fR <number or text>]
[\fB\-\-fontTicksSize\fR <number or text>] [\fB\-\-fontTicksWeight\fR <number or text>]
[\fB\-\-fontTitleSize\fR <number or text>] [\fB\-\-fontTitleWeight\fR <number or text>] [\fB\-\-greek\fR <yes or no>]
[\fB\-\-grid\fR <yes or no>] [\fB\-\-gridLineColor\fR <text>] [\fB\-\-gridLineStyle\fR <text>] [\fB\-\-gridLineWidth\fR <number>]
[\fB\-\-levelsAndColors\fR <PlotType:Level,color,Level,...;...>] [\fB\-\-levelsAndColorsScheme\fR <text>]
[\fB\-\-outMode\fR <SingleFile or MultipleFiles>] [\fB\-\-overwrite\fR]  [\fB\-\-precision\fR <number>]
[\fB\-\-scatterMarkerColor\fR <text>] [\fB\-\-scatterMarkerSize\fR <number>] [\fB\-\-scatterMarkerStyle\fR <text>]
[\fB\-\-ticksMajorInterval\fR <number>] [\fB\-\-ticksMinor\fR <yes or no>] [\fB\-\-ticksMinorInterval\fR <number>]
[\fB\-w\fR <dir>] \fB\-i\fR <infile> \fB\-o\fR <outfile>
.PP
PyMOLGenerateRamachandranPlots.py \fB\-h\fR | \fB\-\-help\fR | \fB\-e\fR | \fB\-\-examples\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate Ramachandran plots for amino acid residues present in macromolecules.
.PP
The Ramachandran plots are generated by plotting phi and psi backbone angles
corresponding to the following four categories of amino acids:
.PP
.Vb 5
\&    General: All residues except glycine, proline, or pre\-proline
\&    Glycine: Only glycine residues
\&    Proline: Only proline residues
\&    PreProline: Only residues before proline not including glycine or
\&        proline
.Ve
.PP
In addition to the scatter plots for phi and psi angles, the filled contours
are generated for the density of phi and psi angles [ Ref 144 ] for the
Ramachandran plots. The contours are generated for \*(L"favored\*(R" and \*(L"allowed\*(R"
regions. The phi and psi density is retrieved from the following density files
available in MAYACHEMTOOLS/lib/data/ directory:
.PP
.Vb 4
\&    General: PhiPsiDensityGeneral.csv 
\&    Glycine: PhiPsiDensityGlycine.csv
\&    Proline: PhiPsiDensityProline.csv
\&    PreProline: PhiPsiDensityPreProline.csv
.Ve
.PP
The supported input  file format are: \s-1PDB \s0(.pdb), mmCIF (.cif)
.PP
The output image file can be saved in any format supported by Python
module Matplotlib. The image format is automatically detected from the
output file extension.
.PP
Some of the most common output image file formats are: \s-1EPS \s0(.eps), \s-1PDF \s0(.pdf),
\&\s-1PNG \s0(.png), \s-1PS \s0(.ps), \s-1SVG \s0(.svg).
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c, \-\-chainIDs\fR <First, All or \s-1ID1,ID2...\s0>  [default: All]" 4
.IX Item "-c, --chainIDs <First, All or ID1,ID2...> [default: All]"
List of chain IDs to use for calculating phi and psi angles for residues
in chains. Possible values: First, All, or a comma delimited list of chain
IDs. The default is to use all chain IDs in input file.
.IP "\fB\-e, \-\-examples\fR" 4
.IX Item "-e, --examples"
Print examples.
.IP "\fB\-\-figDPI\fR <number>  [default: 300]" 4
.IX Item "--figDPI <number> [default: 300]"
Figure resolution in dots per inches. The \s-1DPI\s0 value must be supported
by Matplotlib during generation of an image of a specific format. No
validation is performed.
.IP "\fB\-\-figSize\fR <width, height>  [default: auto]" 4
.IX Item "--figSize <width, height> [default: auto]"
Figure dimensions in inches. The default values are dependent on the
the value of '\-\-outMode' option as shown below:
.Sp
.Vb 2
\&    SingleFile: 6.4, 6.4
\&    MultipleFiles: 6.4, 4.8
.Ve
.IP "\fB\-\-fontFamily\fR <text>  [default: auto]" 4
.IX Item "--fontFamily <text> [default: auto]"
Font family to use for title, axes labels, and tick marks. It must be a
valid Matplotlib value. The default value corresponds to the value 
plt.rcParams[\*(L"font.family\*(R"] in your environment. For example: serif,
sans-serif, cursive, etc.
.IP "\fB\-\-fontAxesSize\fR <number or text>  [default: 10]" 4
.IX Item "--fontAxesSize <number or text> [default: 10]"
Font size for labels on axes. It must be valid Matplotlib font size. For
example: size in points, xx-small, x\-small, small, medium, etc.
.IP "\fB\-\-fontAxesWeight\fR <number or text>  [default: regular]" 4
.IX Item "--fontAxesWeight <number or text> [default: regular]"
Font weight for labels on axes. It must be valid Matplotlib value. For
example: a numeric value in range 0\-1000, ultralight, light, normal,
regular, book, medium, etc.
.IP "\fB\-\-fontTicksSize\fR <number or text>  [default: 8]" 4
.IX Item "--fontTicksSize <number or text> [default: 8]"
Font size for tick labels. It must be a valid Matplotlib font size. For
example: size in points, xx-small, x\-small, small, medium, etc.
.IP "\fB\-\-fontTicksWeight\fR <number or text>  [default: regular]" 4
.IX Item "--fontTicksWeight <number or text> [default: regular]"
Font weight for tick labels. It must be valid Matplotlib value. For
example: a numeric value in range 0\-1000, ultralight, light,
normal, regular, book, medium, etc.
.IP "\fB\-\-fontTitleSize\fR <number or text>  [default: 10]" 4
.IX Item "--fontTitleSize <number or text> [default: 10]"
Font size for title. It must be a valid Matplotlib font size. For example:
size in points, xx-small, x\-small, small, medium, etc.
.IP "\fB\-\-fontTitleWeight\fR <number or text>  [default: bold]" 4
.IX Item "--fontTitleWeight <number or text> [default: bold]"
Font weight for title. It must be a valid Matplotlib value. For example: a
numeric value in range 0\-1000, ultralight, light, normal, regular, book,
medium, etc.
.IP "\fB\-g, \-\-greek\fR <yes or no>  [default: yes]" 4
.IX Item "-g, --greek <yes or no> [default: yes]"
Show phi and psi labels as greek characters.
.IP "\fB\-\-grid\fR <yes or no>  [default: yes]" 4
.IX Item "--grid <yes or no> [default: yes]"
Display grid lines at major tick marks.
.IP "\fB\-\-gridLineColor\fR <text>  [default: #b0b0b0]" 4
.IX Item "--gridLineColor <text> [default: #b0b0b0]"
Grid line color. It must be a valid Matplotlib value. The default color
is light gray.
.IP "\fB\-\-gridLineStyle\fR <text>  [default: dotted]" 4
.IX Item "--gridLineStyle <text> [default: dotted]"
Grid line style. It must be a valid Matplotlib value. For example:
\&'\-' or 'solid', \-\-' or 'dashed', '\-.' or 'dashdot', ':' or 'dotted' etc.
.IP "\fB\-\-gridLineWidth\fR <number>  [default: 0.8]" 4
.IX Item "--gridLineWidth <number> [default: 0.8]"
Grid line width. It must be a valid Matplotlib value.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-i, \-\-infile\fR <infile>" 4
.IX Item "-i, --infile <infile>"
Input file name.
.IP "\fB\-l, \-\-levelsAndColors\fR <PlotType:Level,color,Level,...;...>  [default: auto]" 4
.IX Item "-l, --levelsAndColors <PlotType:Level,color,Level,...;...> [default: auto]"
Semicolon delimited list of contour levels and colors for four types
of Ramachandran plots.
.Sp
Three default contour level and color scheme may be specified by
\&'\-\-levelsAndColorsScheme' option. By default, the 'MuttedColorShades1'
scheme is used. The default contour levels correspond to 'favored' and
\&'allowed' regions [ Ref 144 ] for phi and psi angles.
.Sp
The colors are used to fill spaces between contour levels. The values
for contour levels must be ascending order. The number of colors
must be one less than the number contour levels.
.Sp
The format of contour level and color specification is as follows:
.Sp
.Vb 1
\&    PlotType:Level,Color,Level,...;PlotType:Level,Color,Level,...
.Ve
.Sp
The valid values for plot type are:
.Sp
.Vb 1
\&    General, Glycine, Proline, or PreProline
.Ve
.Sp
The contour level must be a number. The color value must be a valid color
name or a hexadecimal color string supported by Matplotlib. No validation
is performed.
.Sp
For example:
.Sp
.Vb 1
\&    General: 0.0, #FFFFFF, 0.0005, #EBF1DE, 0.02, #C3D69B, 1.0
.Ve
.IP "\fB\-\-levelsAndColorsScheme\fR <text>  [default: MuttedColorShades1]" 4
.IX Item "--levelsAndColorsScheme <text> [default: MuttedColorShades1]"
Default contour levels and colors scheme.  Possible values:
MuttedColorShades1, MuttedColorShades2, or BrightColorShades.
.Sp
This option is only used during 'auto' value of '\-\-levelsAndColors' option.
The default contour levels correspond to 'favored' and 'allowed' regions
[ Ref 144 ] for phi and psi angles.
.Sp
The default contour and color values for different default schemes are
shown below:
.Sp
MuttedColorShades1:
.Sp
.Vb 4
\&    General: 0.0, #FFFFFF, 0.0005, #EBF1DE, 0.02, #C3D69B, 1.0
\&    Glycine: 0.0, #FFFFFF, 0.002, #7FD9FF, 0.02, #FAC090, 1.0
\&    Proline: 0.0, #FFFFFF, 0.002, #E6E0EC, 0.02, #B3A2C7, 1.0
\&    PreProline: 0.0, #FFFFFF, 0.002, #DCE6F2, 0.02, #95B3D7, 1.0
.Ve
.Sp
MuttedColorShades2:
.Sp
.Vb 4
\&    General: 0.0, #FFFFFF, 0.0005, #EBF1DE, 0.02, #D7E4BD, 1.0
\&    Glycine: 0.0, #FFFFFF, 0.002, #FDEADA, 0.02, #FCD5B5, 1.0
\&    Proline: 0.0, #FFFFFF, 0.002, #E6E0EC, 0.02, #CCC1DA, 1.0
\&    PreProline: 0.0, #FFFFFF, 0.002, #DCE6F2, 0.02, #B9CDE5, 1.0
.Ve
.Sp
BrightColorShades: [ Ref 145 ]
.Sp
.Vb 4
\&    General: 0.0, #FFFFFF, 0.0005, #B3E8FF, 0.02, #7FD9FF, 1.0
\&    Glycine: 0.0, #FFFFFF, 0.002, #FFE8C5, 0.02, #FFCC7F, 1.0
\&    Proline: 0.0, #FFFFFF, 0.002, #D0FFC5, 0.02, #7FFF8C, 1.0
\&    PreProline: 0.0, #FFFFFF, 0.002, #B3E8FF, 0.02, #7FD9FF, 1.0
.Ve
.IP "\fB\-o, \-\-outfile\fR <outfile>" 4
.IX Item "-o, --outfile <outfile>"
Output image file name.
.Sp
A set of output files is optionally generated for 'MultipleFiles' value of
\&'\-\-outMode' option. The names of these output files are automatically
generated from the the name of the specified output file as shown
below:
.Sp
.Vb 4
\&    General: <OutfileRoot>_General.<OutfileExt>
\&    Glycine: <OutfileRoot>_Glycine.<OutfileExt>
\&    Proline: <OutfileRoot>_Proline.<OutfileExt>
\&    PreProline: <OutfileRoot>_PreProline.<OutfileExt>
.Ve
.IP "\fB\-\-outMode\fR <Single or Multiple>  [default: SingleFile]" 4
.IX Item "--outMode <Single or Multiple> [default: SingleFile]"
A single output file containing all four Ramachandran plots or multiple
output files corresponding to different types of Ramachandran plots.
.Sp
The phi and psi angles are categorized into the following groups
corresponding to four types of Ramachandran plots:
.Sp
.Vb 5
\&    General: All residues except glycine, proline, or pre\-proline
\&    Glycine: Only glycine residues
\&    Proline: Only proline residues
\&    PreProline: Only residues before proline not including glycine or
\&        proline
.Ve
.IP "\fB\-\-overwrite\fR" 4
.IX Item "--overwrite"
Overwrite existing files.
.IP "\fB\-p, \-\-precision\fR <number>  [default: 2]" 4
.IX Item "-p, --precision <number> [default: 2]"
Floating point precision for plotting the calculated phi and psi angles.
.IP "\fB\-\-scatterMarkerColor\fR <text>  [default: #1f77b4]" 4
.IX Item "--scatterMarkerColor <text> [default: #1f77b4]"
Scatter marker color for plotting to phi and psi angles. It must be a
valid Matplotlib value. The default color is dark blue.
.IP "\fB\-\-scatterMarkerSize\fR <number>  [default: 1.0]" 4
.IX Item "--scatterMarkerSize <number> [default: 1.0]"
Scatter marker size for piloting phi and psi angles. It must be a valid
Matplotlib value.
.IP "\fB\-\-scatterMarkerStyle\fR <text>  [default: .]" 4
.IX Item "--scatterMarkerStyle <text> [default: .]"
Scatter marker style for piloting phi and psi angles. It must be a valid
Matplotlib value. For example: '.' (point), ',' (pixel), 'o' (circle), etc.
.IP "\fB\-\-ticksMajorInterval\fR <number>  [default: auto]" 4
.IX Item "--ticksMajorInterval <number> [default: auto]"
Display major marks on axes at intervals specified in degrees for phi and
psi angles. The default value is dependent on the the value of '\-\-outMode'
option: SingleFile: 180; MultipleFiles: 90
.Sp
The grid lines are drawn at the locations of major tick marks.
.IP "\fB\-\-ticksMinor\fR <yes or no>  [default: yes]" 4
.IX Item "--ticksMinor <yes or no> [default: yes]"
Display minor tick marks. The major tick mark are always displayed.
.IP "\fB\-\-ticksMinorInterval\fR <number>  [default: auto]" 4
.IX Item "--ticksMinorInterval <number> [default: auto]"
Display minor marks on axes at intervals specified in degrees for phi and
psi angles. The default value is dependent on the the value of '\-\-outMode'
option: SingleFile:  45; MultipleFiles: 10
.IP "\fB\-w, \-\-workingdir\fR <dir>" 4
.IX Item "-w, --workingdir <dir>"
Location of working directory which defaults to the current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To generate Ramachandran plot for all residues across all chains in input
file and write out a single \s-1SVG\s0 file containing all four types of plots, type:
.PP
.Vb 1
\&    % PyMOLGenerateRamachandranPlots.py \-i Sample3.pdb \-o Sample3Out.svg
.Ve
.PP
To generate Ramachandran plot for all residues across all chains in input
file and write out four \s-1SVG\s0 files corresponding to four types of plots, type:
.PP
.Vb 2
\&    % PyMOLGenerateRamachandranPlots.py \-\-outMode MultipleFiles
\&      \-i Sample3.pdb \-o Sample3Out.svg
.Ve
.PP
To generate Ramachandran plot for all residues in a specific chain in input
file and write out a single \s-1PDF\s0 file containing all four types of plots, type:
.PP
.Vb 2
\&    % PyMOLGenerateRamachandranPlots.py \-c E \-i Sample3.pdb
\&      \-o Sample3Out.pdf
.Ve
.PP
To generate Ramachandran plot for all residues across all chains in input
file using specific options and write out four \s-1PNG\s0 files containing all four
types of plots, type:
.PP
.Vb 5
\&    % PyMOLGenerateRamachandranPlots.py \-\-outMode MultipleFiles
\&      \-\-figSize "6,4" \-\-figDPI 600 \-\-fontTitleSize 10 \-\-fontTitleWeight
\&      normal \-\-greek no \-\-grid no \-\-levelsAndColors
\&      "General: 0.0, #FFFFFF, 0.0005, #B3E8FF, 0.02, #7FD9FF, 1.0"
\&      \-i Sample3.pdb \-o Sample3Out.png
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud(msud@san.rr.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DownloadPDBFiles.pl, PyMOLCalculatePhiPsiAngles.py, PyMOLCalculateRMSD.py,
PyMOLCalculateProperties.py
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
The functionality available in this script is implemented using PyMOL, a
molecular visualization system on an open source foundation originally
developed by Warren DeLano.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option) any
later version.
