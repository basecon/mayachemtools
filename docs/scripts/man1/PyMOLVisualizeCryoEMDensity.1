.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PyMOLVisualizeCryoEMDensity 1"
.TH PyMOLVisualizeCryoEMDensity 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PyMOLVisualizeCryoEMDensity.py \- Visualize cryo\-EM density
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
PyMOLVisualizeCryoEMDensity.py  [\fB\-\-align\fR <yes or no>] [\fB\-\-alignMethod\fR <align, cealign, super>]
[\fB\-\-alignMode\fR <FirstChain or Complex>] [\fB\-\-alignRefFile\fR <filename>]
[\fB\-\-allowEmptyObjects\fR <yes or no>] [\fB\-\-BFactorChainCartoonPutty\fR <yes or no>]
[\fB\-\-BFactorColorPalette\fR <text> ] [\fB\-\-chainIDs\fR <First, All or \s-1ID1,ID2...\s0>]
[\fB\-\-densityMapFiles\fR <file1,file2,file3,...>]
[\fB\-\-ligandIDs\fR <Largest, All or \s-1ID1,ID2...\s0>] [\fB\-\-labelFontID\fR <number>]
[\fB\-\-meshCarveRadius\fR <number>] [\fB\-\-meshComplex\fR <yes or no>]
[\fB\-\-meshChainComplex\fR <yes, no, or auto>] [\fB\-\-meshColor\fR <text>]
[\fB\-\-meshLevel\fR <number>] [\fB\-\-meshWidth\fR <number>] [\fB\-\-PMLOut\fR <yes or no>]
[\fB\-\-pocketContactsLigandColor\fR <text>] [\fB\-\-pocketContactsLigandHydrophobicColor\fR <text>]
[\fB\-\-pocketContactsSolventColor\fR <text>]  [\fB\-\-pocketContactsCutoff\fR <number>]
[\fB\-\-pocketContactsInorganicColor\fR <text>] [\fB\-\-pocketDistanceCutoff\fR <number>]
[\fB\-\-pocketLabelColor\fR <text>] [\fB\-\-pocketSurface\fR <yes or no>]
[\fB\-\-selectionsChain\fR <ObjectName,SelectionSpec,...>] [\fB\-\-selectionsChainStyle\fR <DisplayStyle>]
[\fB\-\-surfaceComplex\fR <yes or no>] [\fB\-\-surfaceChainComplex\fR <yes, no or auto>]
[\fB\-\-surfaceTransparency\fR <number>] [\fB\-\-volumeCarveRadius\fR <number>]
[\fB\-\-volumeComplex\fR <yes or no>] [\fB\-\-volumeChainComplex\fR <yes, no, or auto>]
[\fB\-\-volumeColorRamp\fR <text>]   [\fB\-\-overwrite\fR] [\fB\-w\fR <dir>] \fB\-i\fR <infile1,infile2,...> \fB\-o\fR <outfile>
.PP
PyMOLVisualizeCryoEMDensity.py \fB\-h\fR | \fB\-\-help\fR | \fB\-e\fR | \fB\-\-examples\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate PyMOL visualization files for viewing electron microscopy (\s-1EM\s0) or
cryo-EM density around chains, ligands, and ligand binding pockets in
macromolecules including proteins and nucleic acids.
.PP
The supported input file formats are: Macromolecule \- \s-1PDB \s0(.pdb) or \s-1CIF\s0(.cif),
Cryo-EM Density \- Collaborative Computational Project Number 4 (\s-1CCP4\s0) ( .map)
.PP
The supported output file formats are: PyMOL script file (.pml), PyMOL session
file (.pse)
.PP
The cryo-EM density and header files along with \s-1PDB\s0 files may be downloaded
from appropriate servers using DownloadPDBFiles.pl script.
.PP
A variety of PyMOL groups and objects may be  created for visualization of
cryo-EM density present in map files. These groups and objects correspond to
maps, volumes, meshes, surfaces,chains, ligands, inorganics, ligand binding
pockets, polar interactions, and pocket hydrophobic surfaces. A complete
hierarchy of all possible PyMOL groups and objects is shown below:
.PP
.Vb 10
\&    <PDBFileRoot>
\&        .Complex
\&            .Complex
\&            .CryoEM
\&                .Map
\&                .Volume
\&                .Mesh
\&                .Surface
\&        .Chain<ID>
\&            .Complex
\&                .Complex
\&                .CryoEM
\&                    .Volume
\&                    .Mesh
\&                    .Surface
\&            .Chain
\&                .Chain
\&                .BFactor
\&                .Selections
\&                    .<Name1>
\&                        .Selection
\&                        .CryoEM
\&                            .Volume
\&                            .Mesh
\&                            .Surface
\&                    .<Name2>
\&                        ... ... ..
\&            .Solvent
\&            .Inorganic
\&            .Ligand<ID>
\&                .Ligand
\&                    .Ligand
\&                    .CryoEM
\&                        .Volume
\&                        .Mesh
\&                        .Surface
\&                .Pocket
\&                    .Pocket
\&                    .CryoEM
\&                        .Volume
\&                        .Mesh
\&                        .Surface
\&                    .Polar_Contacts
\&                    .Hydrophobic_Contacts
\&                    .Surface
\&                .Pocket_Solvent
\&                    .Pocket_Solvent
\&                    .CryoEM
\&                        .Volume
\&                        .Mesh
\&                        .Surface
\&                    .Polar_Contacts
\&                .Pocket_Inorganic
\&                    .Pocket_Inorganic
\&                    .CryoEM
\&                        .Volume
\&                        .Mesh
\&                        .Surface
\&                    .Polar_Contacts
\&            .Ligand<ID>
\&                .Ligand
\&                    ... ... ...
\&                .Pocket
\&                    ... ... ...
\&                .Pocket_Solvent
\&                    ... ... ...
\&                .Pocket_Inorganic
\&                    ... ... ...
\&        .Chain<ID>
\&            ... ... ...
\&            .Ligand<ID>
\&                ... ... ...
\&            .Ligand<ID>
\&                ... ... ...
\&        .Chain<ID>
\&            ... ... ...
\&    <PDBFileRoot>
\&        .Complex
\&            ... ... ...
\&        .Chain<ID>
\&            ... ... ...
\&            .Ligand<ID>
\&                ... ... ...
\&            .Ligand<ID>
\&                ... ... ...
\&        .Chain<ID>
\&            ... ... ...
.Ve
.PP
The meshes, volumes, and surfaces  are not created for complete complex in input
files by default. A word to the wise: The creation of these mesh, volume, and surface
objects may slow down loading of \s-1PML\s0 file and generation of \s-1PSE\s0 file, based on the
size of input complex and map files. The generation of \s-1PSE\s0 file may also fail. In 
addition, you may want to interactively manipulate the contour level for meshes,
volumes, and surfaces. The recommended value for contour level is automatically
retrieved from header files available from \s-1EM\s0 density server. The recommended
value may not always work.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a, \-\-align\fR <yes or no>  [default: no]" 4
.IX Item "-a, --align <yes or no> [default: no]"
Align input files to a reference file before visualization along with
available cryo-EM density map files.
.IP "\fB\-\-alignMethod\fR <align, cealign, super>  [default: super]" 4
.IX Item "--alignMethod <align, cealign, super> [default: super]"
Alignment methodology to use for aligning input files to a reference
file.
.IP "\fB\-\-alignMode\fR <FirstChain or Complex>  [default: FirstChain]" 4
.IX Item "--alignMode <FirstChain or Complex> [default: FirstChain]"
Portion of input and reference files to use for spatial alignment of
input files against reference file.  Possible values: FirstChain or
Complex.
.Sp
The FirstChain mode allows alignment of the first chain in each input
file to the first chain in the reference file along with moving the rest
of the complex to coordinate space of the reference file. The complete
complex in each input file is aligned to the complete complex in reference
file for the Complex mode.
.IP "\fB\-\-alignRefFile\fR <filename>  [default: FirstInputFile]" 4
.IX Item "--alignRefFile <filename> [default: FirstInputFile]"
Reference input file name. The default is to use the first input file
name specified using '\-i, \-\-infiles' option.
.IP "\fB\-\-allowEmptyObjects\fR <yes or no>  [default: no]" 4
.IX Item "--allowEmptyObjects <yes or no> [default: no]"
Allow creation of empty PyMOL objects corresponding to solvent and
inorganic atom selections across chains, ligands, and ligand binding pockets
in input file(s).
.IP "\fB\-b, \-\-BFactorChainCartoonPutty\fR <yes or no>  [default: yes]" 4
.IX Item "-b, --BFactorChainCartoonPutty <yes or no> [default: yes]"
A cartoon putty around individual chains colored by B factors. The minimum
and maximum values for B factors are automatically detected. These values
indicate spread of cryo-EM density around atoms. The 'blue_white_red' color
palette is deployed for coloring the cartoon putty.
.IP "\fB\-\-BFactorColorPalette\fR <text>  [default: blue_white_red]" 4
.IX Item "--BFactorColorPalette <text> [default: blue_white_red]"
Color palette for coloring cartoon putty around chains generated using B
factors. Any valid PyMOL color palette name is allowed. No validation is
performed. The complete list of valid color palette names is a available
at: pymolwiki.org/index.php/Spectrum. Examples: blue_white_red,
blue_white_magenta, blue_red, green_white_red, green_red.
.IP "\fB\-c, \-\-chainIDs\fR <First, All or \s-1ID1,ID2...\s0>  [default: First]" 4
.IX Item "-c, --chainIDs <First, All or ID1,ID2...> [default: First]"
List of chain IDs to use for visualizing cryo-EM density. Possible values:
First, All, or a comma delimited list of chain IDs. The default is to use the
chain \s-1ID\s0 for the first chain in each input file.
.IP "\fB\-d, \-\-densityMapFiles\fR <file1,file2,file3,...>  [default: auto]" 4
.IX Item "-d, --densityMapFiles <file1,file2,file3,...> [default: auto]"
CryoEM density map file names. The \s-1EMDB ID\s0 is retrieved from \s-1PDB\s0 and \s-1CIF\s0
file to set the cryo-EM density file name during automatic detection of
density files. The format of the file name is as follows:
.Sp
.Vb 1
\&    emd_<EMDBID>.map.gz or emd_<EMDBID>.map
.Ve
.Sp
The density files must be present in the working directory.
.IP "\fB\-e, \-\-examples\fR" 4
.IX Item "-e, --examples"
Print examples.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-i, \-\-infiles\fR <infile1,infile2,infile3...>" 4
.IX Item "-i, --infiles <infile1,infile2,infile3...>"
Input file names.
.IP "\fB\-l, \-\-ligandIDs\fR <Largest, All or \s-1ID1,ID2...\s0>  [default: Largest]" 4
.IX Item "-l, --ligandIDs <Largest, All or ID1,ID2...> [default: Largest]"
List of ligand IDs present in chains for visualizing cryo-EM density across
ligands and ligand binding pockets. Possible values: Largest, All, or a comma
delimited list of ligand IDs. The default is to use the largest ligand present
in all or specified chains in each input file.
.Sp
Ligands are identified using organic selection operator available in PyMOL.
It'll also  identify buffer molecules as ligands. The largest ligand contains
the highest number of heavy atoms.
.IP "\fB\-\-labelFontID\fR <number>  [default: 7]" 4
.IX Item "--labelFontID <number> [default: 7]"
Font \s-1ID\s0 for drawing labels. Default: 7 (Sans Bold). Valid values: 5 to 16.
The specified value must be a valid PyMOL font \s-1ID.\s0 No validation is
performed. The complete lists of valid font IDs is available at:
pymolwiki.org/index.php/Label_font_id. Examples: 5 \- Sans;
7 \- Sans Bold; 9 \- Serif; 10 \- Serif Bold.
.IP "\fB\-\-meshCarveRadius\fR <number>  [default: 1.6]" 4
.IX Item "--meshCarveRadius <number> [default: 1.6]"
Radius in Angstroms around atoms for including cryo-EM density.
.IP "\fB\-\-meshComplex\fR <yes or no>  [default: no]" 4
.IX Item "--meshComplex <yes or no> [default: no]"
Create meshes for complete complex in each input file using corresponding
density map file.
.IP "\fB\-\-meshChainComplex\fR <yes, no, or auto>  [default: auto]" 4
.IX Item "--meshChainComplex <yes, no, or auto> [default: auto]"
Create meshes for individual chain complex in each input file using
corresponding density map file. By default, the meshes are automatically
created for chain complexes without any ligands.
.IP "\fB\-\-meshColor\fR <text>  [default: blue]" 4
.IX Item "--meshColor <text> [default: blue]"
Line color for meshes corresponding to density maps.. The specified value
must be valid color. No validation is performed.
.IP "\fB\-\-meshLevel\fR <number1,number2,...>  [default: auto]" 4
.IX Item "--meshLevel <number1,number2,...> [default: auto]"
Comma delimited list of contour levels in sigma units for generating meshes
for each input file using corresponding density map file. The default is to
automatically retrieve the recommended contour levels for each input 
file. The header file emd\-<\s-1EMDBID\s0>.xml corresponding to an input file
must be present in the working directory  to automatically retrieve
recommended value for mesh contour level. Otherwise, the default contour
level is set to 1.
.Sp
You may want to interactively manipulate the contour level for meshes and
surfaces. The default recommended value may not always work.
.IP "\fB\-\-meshWidth\fR <number>  [default: 0.5]" 4
.IX Item "--meshWidth <number> [default: 0.5]"
Line width for mesh lines corresponding to density maps.
.IP "\fB\-o, \-\-outfile\fR <outfile>" 4
.IX Item "-o, --outfile <outfile>"
Output file name.
.IP "\fB\-p, \-\-PMLOut\fR <yes or no>  [default: yes]" 4
.IX Item "-p, --PMLOut <yes or no> [default: yes]"
Save \s-1PML\s0 file during generation of \s-1PSE\s0 file.
.IP "\fB\-\-pocketContactsLigandColor\fR <text>  [default: orange]" 4
.IX Item "--pocketContactsLigandColor <text> [default: orange]"
Color for drawing polar contacts between ligand and pocket residues.
The specified value must be valid color. No validation is performed.
.IP "\fB\-\-pocketContactsLigandHydrophobicColor\fR <text>  [default: purpleblue]" 4
.IX Item "--pocketContactsLigandHydrophobicColor <text> [default: purpleblue]"
Color for drawing hydrophobic contacts between ligand and pocket residues.
The specified value must be valid color. No validation is performed. The
hydrophobic contacts are shown between pairs of carbon atoms not
connected to hydrogen bond donor or acceptors atoms as identified
by PyMOL.
.IP "\fB\-\-pocketContactsSolventColor\fR <text>  [default: marine]" 4
.IX Item "--pocketContactsSolventColor <text> [default: marine]"
Color for drawing polar contacts between solvent and pocket residues.
The specified value must be valid color. No validation is performed.
.IP "\fB\-\-pocketContactsInorganicColor\fR <text>  [default: deepsalmon]" 4
.IX Item "--pocketContactsInorganicColor <text> [default: deepsalmon]"
Color for drawing polar contacts between inorganic and pocket residues.
The specified value must be valid color. No validation is performed.
.IP "\fB\-\-pocketContactsCutoff\fR <number>  [default: 4.0]" 4
.IX Item "--pocketContactsCutoff <number> [default: 4.0]"
Distance in Angstroms for identifying polar and hyrdophobic contacts
between atoms in pocket residues and ligands.
.IP "\fB\-\-pocketDistanceCutoff\fR <number>  [default: 5.0]" 4
.IX Item "--pocketDistanceCutoff <number> [default: 5.0]"
Distance in Angstroms for identifying pocket residues around ligands.
.IP "\fB\-\-pocketLabelColor\fR <text>  [default: magenta]" 4
.IX Item "--pocketLabelColor <text> [default: magenta]"
Color for drawing residue or atom level labels for a pocket. The specified
value must be valid color. No validation is performed.
.IP "\fB\-\-pocketSurface\fR <yes or no>  [default: yes]" 4
.IX Item "--pocketSurface <yes or no> [default: yes]"
Hydrophobic surface around pocket. The pocket surface is colored by
hydrophobicity. It is only valid for proteins. The color of amino acids is
set using the Eisenberg hydrophobicity scale. The color varies from red
to white, red being the most hydrophobic amino acid.
.IP "\fB\-\-selectionsChain\fR <ObjectName,SelectionSpec,...>  [default: None]" 4
.IX Item "--selectionsChain <ObjectName,SelectionSpec,...> [default: None]"
Custom selections for chains. It is a pairwise list of comma delimited values
corresponding to PyMOL object names and selection specifications.  The
selection specification must be a valid PyMOL specification. No validation is
performed.
.Sp
The PyMOL objects are created for each chain corresponding to the
specified selections. The display style for PyMOL objects is set using
value of '\-\-selectionsChainStyle' option.
.Sp
The specified selection specification is automatically appended to appropriate
chain specification before creating PyMOL objects.
.Sp
For example, the following specification for '\-\-selectionsChain' option will
generate PyMOL objects for chains containing Cysteines and Serines:
.Sp
.Vb 1
\&    Cysteines,resn CYS,Serines,resn SER
.Ve
.IP "\fB\-\-selectionsChainStyle\fR <DisplayStyle>  [default: sticks]" 4
.IX Item "--selectionsChainStyle <DisplayStyle> [default: sticks]"
Display style for PyMOL objects created for '\-\-selectionsChain' option. It
must be a valid PyMOL display style. No validation is performed.
.IP "\fB\-\-surfaceComplex\fR <yes or no>  [default: no]" 4
.IX Item "--surfaceComplex <yes or no> [default: no]"
Create surfaces for complete complex in input file(s) corresponding to density
map.
.IP "\fB\-\-surfaceChainComplex\fR <yes, no or auto>  [default: auto]" 4
.IX Item "--surfaceChainComplex <yes, no or auto> [default: auto]"
Create surfaces for individual chain complexes in each input file using corresponding
density map file. By default, the surfaces are automatically created for chain complexes
without any ligands.
.IP "\fB\-\-surfaceTransparency\fR <number>  [default: 0.25]" 4
.IX Item "--surfaceTransparency <number> [default: 0.25]"
Surface transparency for molecular and cryo-EM density surfaces.
.IP "\fB\-\-overwrite\fR" 4
.IX Item "--overwrite"
Overwrite existing files.
.IP "\fB\-\-volumeCarveRadius\fR <number>  [default: 1.6]" 4
.IX Item "--volumeCarveRadius <number> [default: 1.6]"
Radius in Angstroms around atoms for including cryo-EM density.
.IP "\fB\-\-volumeComplex\fR <yes or no>  [default: no]" 4
.IX Item "--volumeComplex <yes or no> [default: no]"
Create volumes for complete complex in each input file using corresponding density
map file.
.IP "\fB\-\-volumeChainComplex\fR <yes, no, or auto>  [default: auto]" 4
.IX Item "--volumeChainComplex <yes, no, or auto> [default: auto]"
Create volumes for individual chain complex in each input file using corresponding
density map file. By default, the volumes are automatically created for chain
complexes without any ligands.
.IP "\fB\-\-volumeColorRamp\fR <text>  [default: auto]" 4
.IX Item "--volumeColorRamp <text> [default: auto]"
Name of a volume color ramp for density map files. The specified value must
be a valid name. No validation is performed. The following volume color ramps
are currently available in PyMOL: default, 2fofc, fofc, rainbow, and rainbow2.
.Sp
The default is to automatically create a new volume color ramp for the first
input file using recommended contour level with an offset of 0.3 around this value.
The header file emd\-<\s-1EMDBID\s0>.xml must be present in the working directory  to
automatically retrieve recommended contour level and generate a  volume color ramp.
Otherwise, PyMOL default volume color ramp is employed to color volumes.
.Sp
The volume color ramp automatically created for the first input file is used for all
other input files.
.IP "\fB\-w, \-\-workingdir\fR <dir>" 4
.IX Item "-w, --workingdir <dir>"
Location of working directory which defaults to the current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To download structure and cryo-EM data for 5K12, 5UMD, 5W81, and 5UAK
before running the following examples, type:
.PP
.Vb 1
\&    % DownloadPDBFiles.pl \-\-DensityMap yes 5K12,5UMD,5W81,5UAK
.Ve
.PP
To visualize cryo-EM density at recommended contour level for the first
chain complex in a \s-1PDB\s0 file using corresponding density map and header
file, and generate a \s-1PML\s0 file type:
.PP
.Vb 1
\&    % PyMOLVisualizeCryoEMDensity.py \-i 5K12.pdb \-o 5K12.pml
.Ve
.PP
To visualize cryo-EM density at recommended contour level for the first
chain complex in a \s-1PDB\s0 file and highlighting densities for all cysteines and
serines  using corresponding density map and header file, and generate
a \s-1PML\s0 file type:
.PP
.Vb 2
\&    % PyMOLVisualizeCryoEMDensity.py \-i 5K12.pdb \-o 5K12.pml
\&      \-\-selectionsChain "Csysteines,resn cys,Serines,resn ser"
.Ve
.PP
To visualize electron density for the largest ligand in  chain K, and ligand
binding pocket to highlight ligand interactions with pockect residues,
solvents and inorganics, in a \s-1PDB\s0 and using corresponding map files, and
generate a \s-1PML\s0 file, type:
.PP
.Vb 1
\&    % PyMOLVisualizeCryoEMDensity.py \-c K \-i 5UMD.cif \-o 5UMD.pml
.Ve
.PP
To visualize cryo-EM density for all  chains along with any solvents in a
\&\s-1PDB\s0 file and using corresponding map files, and generate a \s-1PML\s0 file, type:
.PP
.Vb 1
\&    % PyMOLVisualizeCryoEMDensity.py \-c all \-i 5K12.pdb \-o 5K12.pml
.Ve
.PP
To visualize cryo-EM density at a specific contour level for the first chain
complex along with volume and surface in a \s-1PDB\s0 file using corresponding
to a specific density map file, and generate a \s-1PML\s0 file, type:
.PP
.Vb 3
\&    % PyMOLVisualizeCryoEMDensity.py \-d emd_8194.map.gz \-\-meshLevel 1.0
\&      \-\-surfaceChainComplex yes \-\-volumeChainComplex yes \-i 5K12.pdb
\&      \-o 5K12.pml
.Ve
.PP
To align and visualize cryo-EM density at recommended contour levels for the
largest ligand in the first chain along with pockets or the first chain complex
in input files using corresponding maps and header files, type:
.PP
.Vb 2
\&    % PyMOLVisualizeCryoEMDensity.py \-a yes \-i "5W81.pdb,5UAK.pdb"
\&      \-o SampleOut.pml
.Ve
.PP
To align and visualize cryo-EM density at recommended contour levels for all
chains and ligands in input files using specified density files, type:
in input files using corresponding maps and header files, type:
.PP
.Vb 2
\&    % PyMOLVisualizeCryoEMDensity.py \-a yes \-i "5W81.pdb,5UAK.pdb"
\&      \-o SampleOut.pml \-c all \-l all \-d "emd_8782.map.gz,emd_8516.map.gz"
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud(msud@san.rr.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DownloadPDBFiles.pl, PyMOLVisualizeCavities.py,
PyMOLVisualizeElectronDensity.py, PyMOLVisualizeInterfaces.py,
PyMOLVisualizeMacromolecules.py, PyMOLVisualizeSurfaceAndBuriedResidues.py
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
The functionality available in this script is implemented using PyMOL, a
molecular visualization system on an open source foundation originally
developed by Warren DeLano.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option) any
later version.
