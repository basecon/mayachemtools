.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TopologicalAtomPairsFingerprints 1"
.TH TopologicalAtomPairsFingerprints 1 "2020-08-27" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TopologicalAtomPairsFingerprints.pl \- Generate topological atom pairs fingerprints for SD files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
TopologicalAtomPairsFingerprints.pl SDFile(s)...
.PP
TopologicalAtomPairsFingerprints.pl [\fB\-\-AromaticityModel\fR \fIAromaticityModelType\fR]
[\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes\fR]
[\fB\-\-AtomicInvariantsToUse\fR \fI\*(L"AtomicInvariant,AtomicInvariant...\*(R"\fR]
[\fB\-\-FunctionalClassesToUse\fR \fI\*(L"FunctionalClass1,FunctionalClass2...\*(R"\fR]
[\fB\-\-CompoundID\fR \fIDataFieldName or LabelPrefixString\fR] [\fB\-\-CompoundIDLabel\fR \fItext\fR]
[\fB\-\-CompoundIDMode\fR] [\fB\-\-DataFields\fR \fI\*(L"FieldLabel1,FieldLabel2,...\*(R"\fR]
[\fB\-d, \-\-DataFieldsMode\fR \fIAll | Common | Specify | CompoundID\fR] [\fB\-f, \-\-Filter\fR \fIYes | No\fR]
[\fB\-\-FingerprintsLabel\fR \fItext\fR] [\fB\-h, \-\-help\fR] [\fB\-k, \-\-KeepLargestComponent\fR \fIYes | No\fR]
[\fB\-\-MinDistance\fR \fInumber\fR] [\fB\-\-MaxDistance\fR \fInumber\fR]
[\fB\-\-OutDelim\fR \fIcomma | tab | semicolon\fR] [\fB\-\-output\fR \fI\s-1SD\s0 | \s-1FP\s0 | text | all\fR] [\fB\-o, \-\-overwrite\fR]
[\fB\-q, \-\-quote\fR \fIYes | No\fR] [\fB\-r, \-\-root\fR \fIRootName\fR]
[\fB\-v, \-\-VectorStringFormat\fR \fIValuesString, IDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString\fR]
[\fB\-w, \-\-WorkingDir\fR dirname] SDFile(s)...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate topological atom pairs fingerprints  [ Ref 57, Ref 59, Ref 72 ] for \fISDFile(s)\fR and create
appropriate \s-1SD, FP\s0 or \s-1CSV/TSV\s0 text file(s) containing fingerprints vector strings corresponding to
molecular fingerprints.
.PP
Multiple SDFile names are separated by spaces. The valid file extensions are \fI.sdf\fR
and \fI.sd\fR. All other file names are ignored. All the \s-1SD\s0 files in a current directory
can be specified either by \fI*.sdf\fR or the current directory name.
.PP
The current release of MayaChemTools supports generation of topological atom pairs
corresponding to following \fB\-a, \-\-AtomIdentifierTypes\fR:
.PP
.Vb 3
\&    AtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
\&    FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes,
\&    SYBYLAtomTypes, TPSAAtomTypes, UFFAtomTypes
.Ve
.PP
Based on the values specified for \fB\-a, \-\-AtomIdentifierType\fR and \fB\-\-AtomicInvariantsToUse\fR,
initial atom types are assigned to all non-hydrogen atoms in a molecule. Using the distance
matrix for the molecule and initial atom types assigned to non-hydrogen atoms, all unique atom
pairs within \fB\-\-MinDistance\fR and \fB\-\-MaxDistance\fR are identified and counted. An atom pair
identifier is generated for each unique atom pair; the format of the atom pair identifier is:
.PP
.Vb 1
\&    <AtomType1>\-D<n>\-<AtomType2>
\&
\&    AtomType1, AtomType2: Atom types assigned to atom1 and atom2
\&    D: Distance between atom1 and atom2
\&
\&    where AtomType1 <= AtomType2
.Ve
.PP
The atom pair identifiers for all unique atom pairs corresponding to non-hydrogen atoms constitute
topological atom pairs fingerprints of the molecule.
.PP
Example of \fI\s-1SD\s0\fR file containing topological atom pairs fingerprints string data:
.PP
.Vb 10
\&    ... ...
\&    ... ...
\&    $$$$
\&    ... ...
\&    ... ...
\&    ... ...
\&    41 44  0  0  0  0  0  0  0  0999 V2000
\&     \-3.3652    1.4499    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
\&    ... ...
\&    2  3  1  0  0  0  0
\&    ... ...
\&    M  END
\&    >  <CmpdID>
\&    Cmpd1
\&
\&    >  <TopologicalAtomPairsFingerprints>
\&    FingerprintsVector;TopologicalAtomPairs:AtomicInvariantsAtomTypes:MinDi
\&    stance1:MaxDistance10;223;NumericalValues;IDsAndValuesString;C.X1.BO1.H
\&    3\-D1\-C.X3.BO3.H1 C.X2.BO2.H2\-D1\-C.X2.BO2.H2 C.X2.BO2.H2\-D1\-C.X3.BO3.H1
\&    C.X2.BO2.H2\-D1\-C.X3.BO4 C.X2.BO2.H2\-D1\-N.X3.BO3 C.X2.BO3.H1\-D1\-C.X2...;
\&    2 1 4 1 1 10 8 1 2 6 1 2 2 1 2 1 2 2 1 2 1 5 1 10 12 2 2 1 2 1 9 1 3 1
\&    1 1 2 2 1 3 6 1 6 14 2 2 2 3 1 3 1 8 2 2 1 3 2 6 1 2 2 5 1 3 1 23 1 ...
\&
\&    $$$$
\&    ... ...
\&    ... ...
.Ve
.PP
Example of \fI\s-1FP\s0\fR file containing topological atom pairs fingerprints string data:
.PP
.Vb 10
\&    #
\&    # Package = MayaChemTools 7.4
\&    # Release Date = Oct 21, 2010
\&    #
\&    # TimeStamp = Fri Mar 11 15:04:36 2011
\&    #
\&    # FingerprintsStringType = FingerprintsVector
\&    #
\&    # Description = TopologicalAtomPairs:AtomicInvariantsAtomTypes:MinDi...
\&    # VectorStringFormat = IDsAndValuesString
\&    # VectorValuesType = NumericalValues
\&    #
\&    Cmpd1 223;C.X1.BO1.H3\-D1\-C.X3.BO3.H1 C.X2.BO2.H2\-D1\-C.X2.BO2.H2...;1 1...
\&    Cmpd2 128;C.X1.BO1.H3\-D1\-C.X2.BO2.H2 C.X1.BO1.H3\-D1\-C.X3.BO4...;1 1...
\&    ... ...
\&    ... ..
.Ve
.PP
Example of \s-1CSV \s0\fIText\fR file containing topological atom pairs fingerprints string data:
.PP
.Vb 9
\&    "CompoundID","TopologicalAtomPairsFingerprints"
\&    "Cmpd1","FingerprintsVector;TopologicalAtomPairs:AtomicInvariantsAtomTy
\&    pes:MinDistance1:MaxDistance10;223;NumericalValues;IDsAndValuesString;C
\&    .X1.BO1.H3\-D1\-C.X3.BO3.H1 C.X2.BO2.H2\-D1\-C.X2.BO2.H2 C.X2.BO2.H2\-D1\-C.X
\&    3.BO3.H1C.X2.BO2.H2\-D1\-C.X3.BO4 C.X2.BO2.H2\-D1\-N.X3.BO3 C.X2.BO3.H1...;
\&    2 1 4 1 1 10 8 1 2 6 1 2 2 1 2 1 2 2 1 2 1 5 1 10 12 2 2 1 2 1 9 1 3 1
\&    1 1 2 2 1 3 6 1 6 14 2 2 2 3 1 3 1 8 2 2 1 3 2 6 1 2 2 5 1 3 1 23 1 ...
\&    ... ...
\&    ... ...
.Ve
.PP
The current release of MayaChemTools generates the following types of topological atom pairs
fingerprints vector strings:
.PP
.Vb 6
\&    FingerprintsVector;TopologicalAtomPairs:AtomicInvariantsAtomTypes:MinD
\&    istance1:MaxDistance10;223;NumericalValues;IDsAndValuesString;C.X1.BO1
\&    .H3\-D1\-C.X3.BO3.H1 C.X2.BO2.H2\-D1\-C.X2.BO2.H2 C.X2.BO2.H2\-D1\-C.X3.BO3.
\&    H1 C.X2.BO2.H2\-D1\-C.X3.BO4 C.X2.BO2.H2\-D1\-N.X3.BO3 C.X2.BO3.H1\-D1\-...;
\&    2 1 4 1 1 10 8 1 2 6 1 2 2 1 2 1 2 2 1 2 1 5 1 10 12 2 2 1 2 1 9 1 3 1
\&    1 1 2 2 1 3 6 1 6 14 2 2 2 3 1 3 1 8 2 2 1 3 2 6 1 2 2 5 1 3 1 23 1...
\&
\&    FingerprintsVector;TopologicalAtomPairs:AtomicInvariantsAtomTypes:MinD
\&    istance1:MaxDistance10;223;NumericalValues;IDsAndValuesPairsString;C.X
\&    1.BO1.H3\-D1\-C.X3.BO3.H1 2 C.X2.BO2.H2\-D1\-C.X2.BO2.H2 1 C.X2.BO2.H2\-D1\-
\&    C.X3.BO3.H1 4 C.X2.BO2.H2\-D1\-C.X3.BO4 1 C.X2.BO2.H2\-D1\-N.X3.BO3 1 C.X2
\&    .BO3.H1\-D1\-C.X2.BO3.H1 10 C.X2.BO3.H1\-D1\-C.X3.BO4 8 C.X3.BO3.H1\-D1\-C.X
\&    3.BO4 1 C.X3.BO3.H1\-D1\-O.X1.BO1.H1 2 C.X3.BO4\-D1\-C.X3.BO4 6 C.X3.BO...
\&
\&    FingerprintsVector;TopologicalAtomPairs:DREIDINGAtomTypes:MinDistance1
\&    :MaxDistance10;157;NumericalValues;IDsAndValuesString;C_2\-D1\-C_3 C_2\-D
\&    1\-C_R C_2\-D1\-N_3 C_2\-D1\-O_2 C_2\-D1\-O_3 C_3\-D1\-C_3 C_3\-D1\-C_R C_3\-D1\-N_
\&    R C_3\-D1\-O_3 C_R\-D1\-C_R C_R\-D1\-F_ C_R\-D1\-N_3 C_R\-D1\-N_R C_2\-D2\-C_3 C_2
\&    1 1 1 2 1 7 1 1 2 23 1 1 2 1 3 5 5 2 1 5 28 2 3 3 1 1 1 2 4 1 1 4 9 3
\&    1 4 24 2 4 3 3 4 5 5 14 1 1 2 3 22 1 3 4 4 1 1 1 1 2 2 5 1 4 21 3 1...
\&
\&    FingerprintsVector;TopologicalAtomPairs:EStateAtomTypes:MinDistance1:M
\&    axDistance10;251;NumericalValues;IDsAndValuesString;aaCH\-D1\-aaCH aaCH\-
\&    D1\-aasC aasC\-D1\-aasC aasC\-D1\-aasN aasC\-D1\-dssC aasC\-D1\-sF aasC\-D1\-ssNH
\&    aasC\-D1\-sssCH aasN\-D1\-ssCH2 dO\-D1\-dssC dssC\-D1\-sOH dssC\-D1\-ssCH2 d...;
\&    10 8 5 2 1 1 1 1 1 2 1 1 1 2 2 1 4 10 12 2 2 6 3 1 3 2 2 1 1 1 1 1 1 1
\&    1 1 5 2 1 1 6 12 2 2 2 2 6 1 3 2 2 5 2 2 1 2 1 1 1 1 1 1 3 1 3 19 2...
\&
\&    FingerprintsVector;TopologicalAtomPairs:FunctionalClassAtomTypes:MinDi
\&    stance1:MaxDistance10;144;NumericalValues;IDsAndValuesString;Ar\-D1\-Ar
\&    Ar\-D1\-Ar.HBA Ar\-D1\-HBD Ar\-D1\-Hal Ar\-D1\-None Ar.HBA\-D1\-None HBA\-D1\-NI H
\&    BA\-D1\-None HBA.HBD\-D1\-NI HBA.HBD\-D1\-None HBD\-D1\-None NI\-D1\-None No...;
\&    23 2 1 1 2 1 1 1 1 2 1 1 7 28 3 1 3 2 8 2 1 1 1 5 1 5 24 3 3 4 2 13 4
\&    1 1 4 1 5 22 4 4 3 1 19 1 1 1 1 1 2 2 3 1 1 8 25 4 5 2 3 1 26 1 4 1 ...
\&
\&    FingerprintsVector;TopologicalAtomPairs:MMFF94AtomTypes:MinDistance1:M
\&    axDistance10;227;NumericalValues;IDsAndValuesPairsString;C5A\-D1\-C5B 2 
\&    C5A\-D1\-CB 1 C5A\-D1\-CR 1 C5A\-D1\-N5 2 C5B\-D1\-C5B 1 C5B\-D1\-C=ON 1 C5B\-D1\-
\&    CB 1 C=ON\-D1\-NC=O 1 C=ON\-D1\-O=CN 1 CB\-D1\-CB 18 CB\-D1\-F 1 CB\-D1\-NC=O 1
\&    COO\-D1\-CR 1 COO\-D1\-O=CO 1 COO\-D1\-OC=O 1 CR\-D1\-CR 7 CR\-D1\-N5 1 CR\-D1\-OR
\&    2 C5A\-D2\-C5A 1 C5A\-D2\-C5B 2 C5A\-D2\-C=ON 1 C5A\-D2\-CB 3 C5A\-D2\-CR 4 ...
\&
\&    FingerprintsVector;TopologicalAtomPairs:SLogPAtomTypes:MinDistance1:Ma
\&    xDistance10;329;NumericalValues;IDsAndValuesPairsString;C1\-D1\-C10 1 C1
\&    \-D1\-C11 2 C1\-D1\-C5 1 C1\-D1\-CS 4 C10\-D1\-N11 1 C11\-D1\-C21 1 C14\-D1\-C18 2
\&    C14\-D1\-F 1 C18\-D1\-C18 10 C18\-D1\-C20 4 C18\-D1\-C22 2 C20\-D1\-C20 3 C20\-D
\&    1\-C21 1 C20\-D1\-N11 1 C21\-D1\-C21 1 C21\-D1\-C5 1 C21\-D1\-N11 1 C22\-D1\-N4 1
\&    C5\-D1\-N4 1 C5\-D1\-O10 1 C5\-D1\-O2 1 C5\-D1\-O9 1 CS\-D1\-O2 2 C1\-D2\-C1 3...
\&
\&    FingerprintsVector;TopologicalAtomPairs:SYBYLAtomTypes:MinDistance1:Ma
\&    xDistance10;159;NumericalValues;IDsAndValuesPairsString;C.2\-D1\-C.3 1 C
\&    .2\-D1\-C.ar 1 C.2\-D1\-N.am 1 C.2\-D1\-O.2 1 C.2\-D1\-O.co2 2 C.3\-D1\-C.3 7 C.
\&    3\-D1\-C.ar 1 C.3\-D1\-N.ar 1 C.3\-D1\-O.3 2 C.ar\-D1\-C.ar 23 C.ar\-D1\-F 1 C.a
\&    r\-D1\-N.am 1 C.ar\-D1\-N.ar 2 C.2\-D2\-C.3 1 C.2\-D2\-C.ar 3 C.3\-D2\-C.3 5 C.3
\&    \-D2\-C.ar 5 C.3\-D2\-N.ar 2 C.3\-D2\-O.3 4 C.3\-D2\-O.co2 2 C.ar\-D2\-C.ar 2...
\&
\&    FingerprintsVector;TopologicalAtomPairs:TPSAAtomTypes:MinDistance1:Max
\&    Distance10;64;NumericalValues;IDsAndValuesPairsString;N21\-D1\-None 3 N7
\&    \-D1\-None 2 None\-D1\-None 34 None\-D1\-O3 2 None\-D1\-O4 3 N21\-D2\-None 5 N7\-
\&    D2\-None 3 N7\-D2\-O3 1 None\-D2\-None 44 None\-D2\-O3 2 None\-D2\-O4 5 O3\-D2\-O
\&    4 1 N21\-D3\-None 7 N7\-D3\-None 4 None\-D3\-None 45 None\-D3\-O3 4 None\-D3\-O4
\&    5 N21\-D4\-N7 1 N21\-D4\-None 5 N21\-D4\-O3 1 N21\-D4\-O4 1 N7\-D4\-None 4 N...
\&
\&    FingerprintsVector;TopologicalAtomPairs:UFFAtomTypes:MinDistance1:MaxD
\&    istance10;157;NumericalValues;IDsAndValuesPairsString;C_2\-D1\-C_3 1 C_2
\&    \-D1\-C_R 1 C_2\-D1\-N_3 1 C_2\-D1\-O_2 2 C_2\-D1\-O_3 1 C_3\-D1\-C_3 7 C_3\-D1\-C
\&    _R 1 C_3\-D1\-N_R 1 C_3\-D1\-O_3 2 C_R\-D1\-C_R 23 C_R\-D1\-F_ 1 C_R\-D1\-N_3 1 
\&    C_R\-D1\-N_R 2 C_2\-D2\-C_3 1 C_2\-D2\-C_R 3 C_3\-D2\-C_3 5 C_3\-D2\-C_R 5 C_3\-D
\&    2\-N_R 2 C_3\-D2\-O_2 1 C_3\-D2\-O_3 5 C_R\-D2\-C_R 28 C_R\-D2\-F_ 2 C_R\-D2\-...
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-AromaticityModel\fR \fIMDLAromaticityModel | TriposAromaticityModel | MMFFAromaticityModel | ChemAxonBasicAromaticityModel | ChemAxonGeneralAromaticityModel | DaylightAromaticityModel | MayaChemToolsAromaticityModel\fR" 4
.IX Item "--AromaticityModel MDLAromaticityModel | TriposAromaticityModel | MMFFAromaticityModel | ChemAxonBasicAromaticityModel | ChemAxonGeneralAromaticityModel | DaylightAromaticityModel | MayaChemToolsAromaticityModel"
Specify aromaticity model to use during detection of aromaticity. Possible values in the current
release are: \fIMDLAromaticityModel, TriposAromaticityModel, MMFFAromaticityModel,
ChemAxonBasicAromaticityModel, ChemAxonGeneralAromaticityModel, DaylightAromaticityModel
or MayaChemToolsAromaticityModel\fR. Default value: \fIMayaChemToolsAromaticityModel\fR.
.Sp
The supported aromaticity model names along with model specific control parameters
are defined in \fBAromaticityModelsData.csv\fR, which is distributed with the current release
and is available under \fBlib/data\fR directory. \fBMolecule.pm\fR module retrieves data from
this file during class instantiation and makes it available to method \fBDetectAromaticity\fR
for detecting aromaticity corresponding to a specific model.
.IP "\fB\-a, \-\-AtomIdentifierType\fR \fIAtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes\fR" 4
.IX Item "-a, --AtomIdentifierType AtomicInvariantsAtomTypes | DREIDINGAtomTypes | EStateAtomTypes | FunctionalClassAtomTypes | MMFF94AtomTypes | SLogPAtomTypes | SYBYLAtomTypes | TPSAAtomTypes | UFFAtomTypes"
Specify atom identifier type to use for assignment of initial atom identifier to non-hydrogen
atoms during calculation of topological atom pairs fingerprints. Possible values in the current
release are: \fIAtomicInvariantsAtomTypes, DREIDINGAtomTypes, EStateAtomTypes,
FunctionalClassAtomTypes, MMFF94AtomTypes, SLogPAtomTypes, SYBYLAtomTypes,
TPSAAtomTypes, UFFAtomTypes\fR. Default value: \fIAtomicInvariantsAtomTypes\fR.
.ie n .IP "\fB\-\-AtomicInvariantsToUse\fR \fI""AtomicInvariant,AtomicInvariant...""\fR" 4
.el .IP "\fB\-\-AtomicInvariantsToUse\fR \fI``AtomicInvariant,AtomicInvariant...''\fR" 4
.IX Item "--AtomicInvariantsToUse AtomicInvariant,AtomicInvariant..."
This value is used during \fIAtomicInvariantsAtomTypes\fR value of \fBa, \-\-AtomIdentifierType\fR
option. It's a list of comma separated valid atomic invariant atom types.
.Sp
Possible values for atomic invariants are: \fI\s-1AS, X, BO,  LBO, SB, DB, TB,
H,\s0 Ar, \s-1RA, FC, MN, SM\s0\fR. Default value: \fI\s-1AS,X,BO,H,FC\s0\fR.
.Sp
The atomic invariants abbreviations correspond to:
.Sp
.Vb 1
\&    AS = Atom symbol corresponding to element symbol
\&
\&    X<n>   = Number of non\-hydrogen atom neighbors or heavy atoms
\&    BO<n> = Sum of bond orders to non\-hydrogen atom neighbors or heavy atoms
\&    LBO<n> = Largest bond order of non\-hydrogen atom neighbors or heavy atoms
\&    SB<n> = Number of single bonds to non\-hydrogen atom neighbors or heavy atoms
\&    DB<n> = Number of double bonds to non\-hydrogen atom neighbors or heavy atoms
\&    TB<n> = Number of triple bonds to non\-hydrogen atom neighbors or heavy atoms
\&    H<n>   = Number of implicit and explicit hydrogens for atom
\&    Ar     = Aromatic annotation indicating whether atom is aromatic
\&    RA     = Ring atom annotation indicating whether atom is a ring
\&    FC<+n/\-n> = Formal charge assigned to atom
\&    MN<n> = Mass number indicating isotope other than most abundant isotope
\&    SM<n> = Spin multiplicity of atom. Possible values: 1 (singlet), 2 (doublet) or
\&            3 (triplet)
.Ve
.Sp
Atom type generated by AtomTypes::AtomicInvariantsAtomTypes class corresponds to:
.Sp
.Vb 1
\&    AS.X<n>.BO<n>.LBO<n>.<SB><n>.<DB><n>.<TB><n>.H<n>.Ar.RA.FC<+n/\-n>.MN<n>.SM<n>
.Ve
.Sp
Except for \s-1AS\s0 which is a required atomic invariant in atom types, all other atomic invariants are
optional. Atom type specification doesn't include atomic invariants with zero or undefined values.
.Sp
In addition to usage of abbreviations for specifying atomic invariants, the following descriptive words
are also allowed:
.Sp
.Vb 12
\&    X : NumOfNonHydrogenAtomNeighbors or NumOfHeavyAtomNeighbors
\&    BO : SumOfBondOrdersToNonHydrogenAtoms or SumOfBondOrdersToHeavyAtoms
\&    LBO : LargestBondOrderToNonHydrogenAtoms or LargestBondOrderToHeavyAtoms
\&    SB :  NumOfSingleBondsToNonHydrogenAtoms or NumOfSingleBondsToHeavyAtoms
\&    DB : NumOfDoubleBondsToNonHydrogenAtoms or NumOfDoubleBondsToHeavyAtoms
\&    TB : NumOfTripleBondsToNonHydrogenAtoms or NumOfTripleBondsToHeavyAtoms
\&    H :  NumOfImplicitAndExplicitHydrogens
\&    Ar : Aromatic
\&    RA : RingAtom
\&    FC : FormalCharge
\&    MN : MassNumber
\&    SM : SpinMultiplicity
.Ve
.Sp
\&\fIAtomTypes::AtomicInvariantsAtomTypes\fR module is used to assign atomic invariant
atom types.
.ie n .IP "\fB\-\-FunctionalClassesToUse\fR \fI""FunctionalClass1,FunctionalClass2...""\fR" 4
.el .IP "\fB\-\-FunctionalClassesToUse\fR \fI``FunctionalClass1,FunctionalClass2...''\fR" 4
.IX Item "--FunctionalClassesToUse FunctionalClass1,FunctionalClass2..."
This value is used during \fIFunctionalClassAtomTypes\fR value of \fBa, \-\-AtomIdentifierType\fR
option. It's a list of comma separated valid functional classes.
.Sp
Possible values for atom functional classes are: \fIAr, \s-1CA, H, HBA, HBD,\s0 Hal, \s-1NI, PI, RA\s0\fR.
Default value [ Ref 24 ]: \fI\s-1HBD,HBA,PI,NI\s0,Ar,Hal\fR.
.Sp
The functional class abbreviations correspond to:
.Sp
.Vb 9
\&    HBD: HydrogenBondDonor
\&    HBA: HydrogenBondAcceptor
\&    PI :  PositivelyIonizable
\&    NI : NegativelyIonizable
\&    Ar : Aromatic
\&    Hal : Halogen
\&    H : Hydrophobic
\&    RA : RingAtom
\&    CA : ChainAtom
\&
\& Functional class atom type specification for an atom corresponds to:
\&
\&    Ar.CA.H.HBA.HBD.Hal.NI.PI.RA
.Ve
.Sp
\&\fIAtomTypes::FunctionalClassAtomTypes\fR module is used to assign functional class atom
types. It uses following definitions [ Ref 60\-61, Ref 65\-66 ]:
.Sp
.Vb 4
\&    HydrogenBondDonor: NH, NH2, OH
\&    HydrogenBondAcceptor: N[!H], O
\&    PositivelyIonizable: +, NH2
\&    NegativelyIonizable: \-, C(=O)OH, S(=O)OH, P(=O)OH
.Ve
.IP "\fB\-\-CompoundID\fR \fIDataFieldName or LabelPrefixString\fR" 4
.IX Item "--CompoundID DataFieldName or LabelPrefixString"
This value is \fB\-\-CompoundIDMode\fR specific and indicates how compound \s-1ID\s0 is generated.
.Sp
For \fIDataField\fR value of \fB\-\-CompoundIDMode\fR option, it corresponds to datafield label name
whose value is used as compound \s-1ID\s0; otherwise, it's a prefix string used for generating compound
IDs like LabelPrefixString<Number>. Default value, \fICmpd\fR, generates compound IDs which
look like Cmpd<Number>.
.Sp
Examples for \fIDataField\fR value of \fB\-\-CompoundIDMode\fR:
.Sp
.Vb 2
\&    MolID
\&    ExtReg
.Ve
.Sp
Examples for \fILabelPrefix\fR or \fIMolNameOrLabelPrefix\fR value of \fB\-\-CompoundIDMode\fR:
.Sp
.Vb 1
\&    Compound
.Ve
.Sp
The value specified above generates compound IDs which correspond to Compound<Number>
instead of default value of Cmpd<Number>.
.IP "\fB\-\-CompoundIDLabel\fR \fItext\fR" 4
.IX Item "--CompoundIDLabel text"
Specify compound \s-1ID\s0 column label for \s-1CSV/TSV\s0 text file(s) used during \fICompoundID\fR value
of \fB\-\-DataFieldsMode\fR option. Default value: \fICompoundID\fR.
.IP "\fB\-\-CompoundIDMode\fR \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR" 4
.IX Item "--CompoundIDMode DataField | MolName | LabelPrefix | MolNameOrLabelPrefix"
Specify how to generate compound IDs and write to \s-1FP\s0 or \s-1CSV/TSV\s0 text file(s) along with generated
fingerprints for \fI\s-1FP\s0 | text | all\fR values of \fB\-\-output\fR option: use a \fISDFile(s)\fR datafield value;
use molname line from \fISDFile(s)\fR; generate a sequential \s-1ID\s0 with specific prefix; use combination
of both MolName and LabelPrefix with usage of LabelPrefix values for empty molname lines.
.Sp
Possible values: \fIDataField | MolName | LabelPrefix | MolNameOrLabelPrefix\fR.
Default value: \fILabelPrefix\fR.
.Sp
For \fIMolNameAndLabelPrefix\fR value of \fB\-\-CompoundIDMode\fR, molname line in \fISDFile(s)\fR takes
precedence over sequential compound IDs generated using \fILabelPrefix\fR and only empty molname
values are replaced with sequential compound IDs.
.Sp
This is only used for \fICompoundID\fR value of \fB\-\-DataFieldsMode\fR option.
.ie n .IP "\fB\-\-DataFields\fR \fI""FieldLabel1,FieldLabel2,...""\fR" 4
.el .IP "\fB\-\-DataFields\fR \fI``FieldLabel1,FieldLabel2,...''\fR" 4
.IX Item "--DataFields FieldLabel1,FieldLabel2,..."
Comma delimited list of \fISDFiles(s)\fR data fields to extract and write to \s-1CSV/TSV\s0 text file(s) along
with generated fingerprints for \fItext | both\fR values of \fB\-\-output\fR option.
.Sp
This is only used for \fISpecify\fR value of \fB\-\-DataFieldsMode\fR option.
.Sp
Examples:
.Sp
.Vb 2
\&    Extreg
\&    MolID,CompoundName
.Ve
.IP "\fB\-d, \-\-DataFieldsMode\fR \fIAll | Common | Specify | CompoundID\fR" 4
.IX Item "-d, --DataFieldsMode All | Common | Specify | CompoundID"
Specify how data fields in \fISDFile(s)\fR are transferred to output \s-1CSV/TSV\s0 text file(s) along
with generated fingerprints for \fItext | both\fR values of \fB\-\-output\fR option: transfer all \s-1SD\s0
data field; transfer \s-1SD\s0 data files common to all compounds; extract specified data fields;
generate a compound \s-1ID\s0 using molname line, a compound prefix, or a combination of both.
Possible values: \fIAll | Common | specify | CompoundID\fR. Default value: \fICompoundID\fR.
.IP "\fB\-f, \-\-Filter\fR \fIYes | No\fR" 4
.IX Item "-f, --Filter Yes | No"
Specify whether to check and filter compound data in SDFile(s). Possible values: \fIYes or No\fR.
Default value: \fIYes\fR.
.Sp
By default, compound data is checked before calculating fingerprints and compounds containing
atom data corresponding to non-element symbols or no atom data are ignored.
.IP "\fB\-\-FingerprintsLabel\fR \fItext\fR" 4
.IX Item "--FingerprintsLabel text"
\&\s-1SD\s0 data label or text file column label to use for fingerprints string in output \s-1SD\s0 or
\&\s-1CSV/TSV\s0 text file(s) specified by \fB\-\-output\fR. Default value: \fITopologicalAtomPairsFingerprints\fR.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-k, \-\-KeepLargestComponent\fR \fIYes | No\fR" 4
.IX Item "-k, --KeepLargestComponent Yes | No"
Generate fingerprints for only the largest component in molecule. Possible values:
\&\fIYes or No\fR. Default value: \fIYes\fR.
.Sp
For molecules containing multiple connected components, fingerprints can be generated
in two different ways: use all connected components or just the largest connected
component. By default, all atoms except for the largest connected component are
deleted before generation of fingerprints.
.IP "\fB\-\-MinDistance\fR \fInumber\fR" 4
.IX Item "--MinDistance number"
Minimum bond distance between atom pairs for generating topological atom pairs. Default value:
\&\fI1\fR. Valid values: positive integers and less than \fB\-\-MaxDistance\fR.
.IP "\fB\-\-MaxDistance\fR \fInumber\fR" 4
.IX Item "--MaxDistance number"
Maximum bond distance between atom pairs for generating topological atom pairs. Default value:
\&\fI10\fR. Valid values: positive integers and greater than \fB\-\-MinDistance\fR.
.IP "\fB\-\-OutDelim\fR \fIcomma | tab | semicolon\fR" 4
.IX Item "--OutDelim comma | tab | semicolon"
Delimiter for output \s-1CSV/TSV\s0 text file(s). Possible values: \fIcomma, tab, or semicolon\fR
Default value: \fIcomma\fR
.IP "\fB\-\-output\fR \fI\s-1SD\s0 | \s-1FP\s0 | text | all\fR" 4
.IX Item "--output SD | FP | text | all"
Type of output files to generate. Possible values: \fI\s-1SD, FP,\s0 text, or all\fR. Default value: \fItext\fR.
.IP "\fB\-o, \-\-overwrite\fR" 4
.IX Item "-o, --overwrite"
Overwrite existing files.
.IP "\fB\-q, \-\-quote\fR \fIYes | No\fR" 4
.IX Item "-q, --quote Yes | No"
Put quote around column values in output \s-1CSV/TSV\s0 text file(s). Possible values:
\&\fIYes or No\fR. Default value: \fIYes\fR.
.IP "\fB\-r, \-\-root\fR \fIRootName\fR" 4
.IX Item "-r, --root RootName"
New file name is generated using the root: <Root>.<Ext>. Default for new file names:
<SDFileName><TopologicalAtomPairsFP>.<Ext>. The file type determines <Ext> value.
The sdf, fpf, csv, and tsv <Ext> values are used for \s-1SD, FP,\s0 comma/semicolon, and tab
delimited text files, respectively.This option is ignored for multiple input files.
.IP "\fB\-v, \-\-VectorStringFormat\fR \fIIDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString\fR" 4
.IX Item "-v, --VectorStringFormat IDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString | ValuesAndIDsPairsString"
Format of fingerprints vector string data in output \s-1SD, FP\s0 or \s-1CSV/TSV\s0 text file(s) specified by
\&\fB\-\-output\fR option. Possible values: \fIIDsAndValuesString | IDsAndValuesPairsString | ValuesAndIDsString |
ValuesAndIDsPairsString\fR. Default value: \fIIDsAndValuesString\fR.
.Sp
Examples:
.Sp
.Vb 6
\&    FingerprintsVector;TopologicalAtomPairs:AtomicInvariantsAtomTypes:MinD
\&    istance1:MaxDistance10;223;NumericalValues;IDsAndValuesString;C.X1.BO1
\&    .H3\-D1\-C.X3.BO3.H1 C.X2.BO2.H2\-D1\-C.X2.BO2.H2 C.X2.BO2.H2\-D1\-C.X3.BO3.
\&    H1 C.X2.BO2.H2\-D1\-C.X3.BO4 C.X2.BO2.H2\-D1\-N.X3.BO3 C.X2.BO3.H1\-D1\-...;
\&    2 1 4 1 1 10 8 1 2 6 1 2 2 1 2 1 2 2 1 2 1 5 1 10 12 2 2 1 2 1 9 1 3 1
\&    1 1 2 2 1 3 6 1 6 14 2 2 2 3 1 3 1 8 2 2 1 3 2 6 1 2 2 5 1 3 1 23 1...
\&
\&    FingerprintsVector;TopologicalAtomPairs:AtomicInvariantsAtomTypes:MinD
\&    istance1:MaxDistance10;223;NumericalValues;IDsAndValuesPairsString;C.X
\&    1.BO1.H3\-D1\-C.X3.BO3.H1 2 C.X2.BO2.H2\-D1\-C.X2.BO2.H2 1 C.X2.BO2.H2\-D1\-
\&    C.X3.BO3.H1 4 C.X2.BO2.H2\-D1\-C.X3.BO4 1 C.X2.BO2.H2\-D1\-N.X3.BO3 1 C.X2
\&    .BO3.H1\-D1\-C.X2.BO3.H1 10 C.X2.BO3.H1\-D1\-C.X3.BO4 8 C.X3.BO3.H1\-D1\-C.X
\&    3.BO4 1 C.X3.BO3.H1\-D1\-O.X1.BO1.H1 2 C.X3.BO4\-D1\-C.X3.BO4 6 C.X3.BO...
.Ve
.IP "\fB\-w, \-\-WorkingDir\fR \fIDirName\fR" 4
.IX Item "-w, --WorkingDir DirName"
Location of working directory. Default value: current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 1
\&    % TopologicalAtomPairsFingerprints.pl \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create SampleTAPFP.sdf,
SampleTAPFP.fpf and SampleTAPFP.csv files containing sequential compound IDs in \s-1CSV\s0 file along
with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-\-output all \-r SampleTAPFP
\&      \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using \s-1DREIDING\s0 atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  DREIDINGAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using E\-state types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  EStateAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using \s-1DREIDING\s0 atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  DREIDINGAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using functional class atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  FunctionalClassAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using \s-1MMFF94\s0 atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  MMFF94AtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using SLogP atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  SLogPAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using \s-1SYBYL\s0 atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  SYBYLAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using \s-1TPSA\s0 atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  TPSAAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using \s-1UFF\s0 atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a  UFFAtomTypes
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesPairsString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-\-VectorStringFormat
\&      IDsAndValuesPairsString  \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
6 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing sequential compound IDs along with fingerprints vector strings data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&     \-\-MinDistance 1 \-\-MaxDistance 6 \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using only \s-1AS,X\s0 atomic invariants atom types in IDsAndValuesString format and create a
SampleTAPFP.csv file containing sequential compound IDs along with fingerprints vector strings
data, type:
.PP
.Vb 3
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-AtomicInvariantsToUse "AS,X" \-\-MinDistance 1 \-\-MaxDistance 6
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing compound \s-1ID\s0 from molecule name line along with fingerprints vector strings
data, type:
.PP
.Vb 3
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-DataFieldsMode CompoundID \-CompoundIDMode MolName
\&      \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing compound IDs using specified data field along with fingerprints vector strings
data, type:
.PP
.Vb 3
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-DataFieldsMode CompoundID \-CompoundIDMode DataField \-\-CompoundID
\&      Mol_ID \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing compound \s-1ID\s0 using combination of molecule name line and an explicit compound
prefix along with fingerprints vector strings data, type:
.PP
.Vb 3
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-DataFieldsMode CompoundID \-CompoundIDMode MolnameOrLabelPrefix
\&      \-\-CompoundID Cmpd \-\-CompoundIDLabel MolID \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing specific data fields columns along with fingerprints vector strings
data, type:
.PP
.Vb 3
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-DataFieldsMode Specify \-\-DataFields Mol_ID \-r SampleTAPFP
\&      \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create a SampleTAPFP.csv
file containing common data fields columns along with fingerprints vector strings
data, type:
.PP
.Vb 2
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-DataFieldsMode Common \-r SampleTAPFP \-o Sample.sdf
.Ve
.PP
To generate topological atom pairs fingerprints corresponding to bond distances from 1 through
10 using atomic invariants atom types in IDsAndValuesString format and create SampleTAPFP.sdf,
SampleTAPFP.fpf and SampleTAPFP.csv files containing all data fields columns in \s-1CSV\s0 file along
with fingerprints data, type:
.PP
.Vb 3
\&    % TopologicalAtomPairsFingerprints.pl \-a AtomicInvariantsAtomTypes
\&      \-\-DataFieldsMode All  \-\-output all \-r SampleTAPFP
\&      \-o Sample.sdf
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud <msud@san.rr.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
InfoFingerprintsFiles.pl, SimilarityMatricesFingerprints.pl, AtomNeighborhoodsFingerprints.pl,
ExtendedConnectivityFingerprints.pl, MACCSKeysFingerprints.pl,
PathLengthFingerprints.pl, TopologicalAtomTorsionsFingerprints.pl,
TopologicalPharmacophoreAtomPairsFingerprints.pl, TopologicalPharmacophoreAtomTripletsFingerprints.pl
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2020 Manish Sud. All rights reserved.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option)
any later version.
